
main_cc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000080  00800100  000026aa  0000273e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000026aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000009b  00800180  00800180  000027be  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000027be  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000281c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  0000285c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012d3  00000000  00000000  00002934  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ee  00000000  00000000  00003c07  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c12  00000000  00000000  000044f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000344  00000000  00000000  00005108  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007ad  00000000  00000000  0000544c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e64  00000000  00000000  00005bf9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00006a5d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__ctors_end>
       4:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
       8:	0c 94 74 06 	jmp	0xce8	; 0xce8 <__vector_2>
       c:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      10:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      14:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      18:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      1c:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      20:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      24:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      28:	0c 94 4b 07 	jmp	0xe96	; 0xe96 <__vector_10>
      2c:	0c 94 55 07 	jmp	0xeaa	; 0xeaa <__vector_11>
      30:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      34:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      38:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      3c:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      40:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <__vector_16>
      44:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      48:	0c 94 8b 06 	jmp	0xd16	; 0xd16 <__vector_18>
      4c:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      50:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      54:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      58:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      5c:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      60:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      64:	0c 94 3c 01 	jmp	0x278	; 0x278 <__bad_interrupt>
      68:	0d 03       	fmul	r16, r21
      6a:	18 03       	fmul	r17, r16
      6c:	1e 03       	fmul	r17, r22
      6e:	24 03       	mulsu	r18, r20
      70:	2a 03       	fmul	r18, r18
      72:	30 03       	mulsu	r19, r16
      74:	3b 03       	fmul	r19, r19
      76:	46 03       	mulsu	r20, r22
      78:	51 03       	mulsu	r21, r17
      7a:	57 03       	mulsu	r21, r23
      7c:	62 03       	mulsu	r22, r18
      7e:	6d 03       	fmul	r22, r21
      80:	78 03       	fmul	r23, r16
      82:	7e 03       	fmul	r23, r22
      84:	89 03       	fmulsu	r16, r17
      86:	94 03       	fmuls	r17, r20
      88:	b3 03       	fmuls	r19, r19
      8a:	b7 03       	fmuls	r19, r23
      8c:	bb 03       	fmulsu	r19, r19
      8e:	bf 03       	fmulsu	r19, r23
      90:	c3 03       	fmuls	r20, r19
      92:	c7 03       	fmuls	r20, r23
      94:	ce 03       	fmulsu	r20, r22
      96:	d5 03       	fmuls	r21, r21
      98:	a2 05       	cpc	r26, r2
      9a:	63 06       	cpc	r6, r19
      9c:	63 06       	cpc	r6, r19
      9e:	63 06       	cpc	r6, r19
      a0:	63 06       	cpc	r6, r19
      a2:	5c 06       	cpc	r5, r28
      a4:	63 06       	cpc	r6, r19
      a6:	63 06       	cpc	r6, r19
      a8:	63 06       	cpc	r6, r19
      aa:	63 06       	cpc	r6, r19
      ac:	63 06       	cpc	r6, r19
      ae:	63 06       	cpc	r6, r19
      b0:	63 06       	cpc	r6, r19
      b2:	63 06       	cpc	r6, r19
      b4:	63 06       	cpc	r6, r19
      b6:	63 06       	cpc	r6, r19
      b8:	63 06       	cpc	r6, r19
      ba:	63 06       	cpc	r6, r19
      bc:	43 06       	cpc	r4, r19
      be:	23 06       	cpc	r2, r19
      c0:	63 06       	cpc	r6, r19
      c2:	63 06       	cpc	r6, r19
      c4:	63 06       	cpc	r6, r19
      c6:	63 06       	cpc	r6, r19
      c8:	63 06       	cpc	r6, r19
      ca:	63 06       	cpc	r6, r19
      cc:	63 06       	cpc	r6, r19
      ce:	63 06       	cpc	r6, r19
      d0:	63 06       	cpc	r6, r19
      d2:	63 06       	cpc	r6, r19
      d4:	63 06       	cpc	r6, r19
      d6:	63 06       	cpc	r6, r19
      d8:	a2 05       	cpc	r26, r2
      da:	63 06       	cpc	r6, r19
      dc:	63 06       	cpc	r6, r19
      de:	63 06       	cpc	r6, r19
      e0:	63 06       	cpc	r6, r19
      e2:	5c 06       	cpc	r5, r28
      e4:	63 06       	cpc	r6, r19
      e6:	63 06       	cpc	r6, r19
      e8:	63 06       	cpc	r6, r19
      ea:	63 06       	cpc	r6, r19
      ec:	63 06       	cpc	r6, r19
      ee:	63 06       	cpc	r6, r19
      f0:	63 06       	cpc	r6, r19
      f2:	63 06       	cpc	r6, r19
      f4:	63 06       	cpc	r6, r19
      f6:	63 06       	cpc	r6, r19
      f8:	63 06       	cpc	r6, r19
      fa:	63 06       	cpc	r6, r19
      fc:	43 06       	cpc	r4, r19
      fe:	23 06       	cpc	r2, r19

00000100 <__trampolines_end>:
     100:	6e 61       	ori	r22, 0x1E	; 30
     102:	6e 00       	.word	0x006e	; ????

00000104 <__c.2332>:
     104:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     114:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     124:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     134:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     144:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     154:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     164:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     174:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     184:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     194:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1a4:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1b4:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1c4:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1d4:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1e4:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1f4:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000202 <pstr_nan>:
     202:	4e 41 4e                                            NAN

00000205 <pstr_inity>:
     205:	49 4e 49 54 59                                      INITY

0000020a <pstr_inf>:
     20a:	49 4e 46                                            INF

0000020d <pwr_m10>:
     20d:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     21d:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000225 <pwr_p10>:
     225:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     235:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

0000023e <__ctors_end>:
     23e:	11 24       	eor	r1, r1
     240:	1f be       	out	0x3f, r1	; 63
     242:	cf ef       	ldi	r28, 0xFF	; 255
     244:	d8 e0       	ldi	r29, 0x08	; 8
     246:	de bf       	out	0x3e, r29	; 62
     248:	cd bf       	out	0x3d, r28	; 61

0000024a <__do_copy_data>:
     24a:	11 e0       	ldi	r17, 0x01	; 1
     24c:	a0 e0       	ldi	r26, 0x00	; 0
     24e:	b1 e0       	ldi	r27, 0x01	; 1
     250:	ea ea       	ldi	r30, 0xAA	; 170
     252:	f6 e2       	ldi	r31, 0x26	; 38
     254:	02 c0       	rjmp	.+4      	; 0x25a <__do_copy_data+0x10>
     256:	05 90       	lpm	r0, Z+
     258:	0d 92       	st	X+, r0
     25a:	a0 38       	cpi	r26, 0x80	; 128
     25c:	b1 07       	cpc	r27, r17
     25e:	d9 f7       	brne	.-10     	; 0x256 <__do_copy_data+0xc>

00000260 <__do_clear_bss>:
     260:	22 e0       	ldi	r18, 0x02	; 2
     262:	a0 e8       	ldi	r26, 0x80	; 128
     264:	b1 e0       	ldi	r27, 0x01	; 1
     266:	01 c0       	rjmp	.+2      	; 0x26a <.do_clear_bss_start>

00000268 <.do_clear_bss_loop>:
     268:	1d 92       	st	X+, r1

0000026a <.do_clear_bss_start>:
     26a:	ab 31       	cpi	r26, 0x1B	; 27
     26c:	b2 07       	cpc	r27, r18
     26e:	e1 f7       	brne	.-8      	; 0x268 <.do_clear_bss_loop>
     270:	0e 94 01 08 	call	0x1002	; 0x1002 <main>
     274:	0c 94 53 13 	jmp	0x26a6	; 0x26a6 <_exit>

00000278 <__bad_interrupt>:
     278:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000027c <mi_putc>:
		
	}
}

int mi_putc (char c,FILE *uart_io){
	while(!(UCSR0A&(1<<UDRE0)));
     27c:	e0 ec       	ldi	r30, 0xC0	; 192
     27e:	f0 e0       	ldi	r31, 0x00	; 0
     280:	90 81       	ld	r25, Z
     282:	95 ff       	sbrs	r25, 5
     284:	fd cf       	rjmp	.-6      	; 0x280 <mi_putc+0x4>
	UDR0=c;
     286:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
     28a:	80 e0       	ldi	r24, 0x00	; 0
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	08 95       	ret

00000290 <mi_getc>:

int mi_getc(FILE *uart_io){
	while(!(UCSR0A&(1<<RXC0)));
     290:	e0 ec       	ldi	r30, 0xC0	; 192
     292:	f0 e0       	ldi	r31, 0x00	; 0
     294:	80 81       	ld	r24, Z
     296:	88 23       	and	r24, r24
     298:	ec f7       	brge	.-6      	; 0x294 <mi_getc+0x4>
	return UDR0;
     29a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	08 95       	ret

000002a2 <configuracion_interrupcion_Externa>:



//Configuracion de pin de interrupcion para lectura de pulsos de encoder
void configuracion_interrupcion_Externa(int habl1, int modo1, int habl2, int modo2){
	EICRA = 0;
     2a2:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	EIMSK = 0;
     2a6:	1d ba       	out	0x1d, r1	; 29
	
	if(habl1){
     2a8:	89 2b       	or	r24, r25
     2aa:	41 f1       	breq	.+80     	; 0x2fc <configuracion_interrupcion_Externa+0x5a>
		switch(modo1){
     2ac:	61 30       	cpi	r22, 0x01	; 1
     2ae:	71 05       	cpc	r23, r1
     2b0:	89 f0       	breq	.+34     	; 0x2d4 <configuracion_interrupcion_Externa+0x32>
     2b2:	1c f4       	brge	.+6      	; 0x2ba <configuracion_interrupcion_Externa+0x18>
     2b4:	67 2b       	or	r22, r23
     2b6:	41 f0       	breq	.+16     	; 0x2c8 <configuracion_interrupcion_Externa+0x26>
     2b8:	1e c0       	rjmp	.+60     	; 0x2f6 <configuracion_interrupcion_Externa+0x54>
     2ba:	62 30       	cpi	r22, 0x02	; 2
     2bc:	71 05       	cpc	r23, r1
     2be:	81 f0       	breq	.+32     	; 0x2e0 <configuracion_interrupcion_Externa+0x3e>
     2c0:	63 30       	cpi	r22, 0x03	; 3
     2c2:	71 05       	cpc	r23, r1
     2c4:	99 f0       	breq	.+38     	; 0x2ec <configuracion_interrupcion_Externa+0x4a>
     2c6:	17 c0       	rjmp	.+46     	; 0x2f6 <configuracion_interrupcion_Externa+0x54>
			case 0: //Interrupe por nivel bajo
			EICRA&=~(3<<ISC00);
     2c8:	e9 e6       	ldi	r30, 0x69	; 105
     2ca:	f0 e0       	ldi	r31, 0x00	; 0
     2cc:	80 81       	ld	r24, Z
     2ce:	8c 7f       	andi	r24, 0xFC	; 252
     2d0:	80 83       	st	Z, r24
			break;
     2d2:	11 c0       	rjmp	.+34     	; 0x2f6 <configuracion_interrupcion_Externa+0x54>
			case 1: // Cualquier cambio
			EICRA|=(1<<ISC00);
     2d4:	e9 e6       	ldi	r30, 0x69	; 105
     2d6:	f0 e0       	ldi	r31, 0x00	; 0
     2d8:	80 81       	ld	r24, Z
     2da:	81 60       	ori	r24, 0x01	; 1
     2dc:	80 83       	st	Z, r24
			break;
     2de:	0b c0       	rjmp	.+22     	; 0x2f6 <configuracion_interrupcion_Externa+0x54>
			case 2: //Flanco de bajada
			EICRA|=(2<<ISC00);
     2e0:	e9 e6       	ldi	r30, 0x69	; 105
     2e2:	f0 e0       	ldi	r31, 0x00	; 0
     2e4:	80 81       	ld	r24, Z
     2e6:	82 60       	ori	r24, 0x02	; 2
     2e8:	80 83       	st	Z, r24
			break;
     2ea:	05 c0       	rjmp	.+10     	; 0x2f6 <configuracion_interrupcion_Externa+0x54>
			case 3: //Flanco de subida
			EICRA|=(3<<ISC00);
     2ec:	e9 e6       	ldi	r30, 0x69	; 105
     2ee:	f0 e0       	ldi	r31, 0x00	; 0
     2f0:	80 81       	ld	r24, Z
     2f2:	83 60       	ori	r24, 0x03	; 3
     2f4:	80 83       	st	Z, r24
			break;
			
		}
		EIMSK = (1<<INT0);
     2f6:	81 e0       	ldi	r24, 0x01	; 1
     2f8:	8d bb       	out	0x1d, r24	; 29
		DDRD&=~(1<<DDD2);
     2fa:	52 98       	cbi	0x0a, 2	; 10
	}
	
	if(habl2){
     2fc:	45 2b       	or	r20, r21
     2fe:	41 f1       	breq	.+80     	; 0x350 <configuracion_interrupcion_Externa+0xae>
		switch(modo2){
     300:	21 30       	cpi	r18, 0x01	; 1
     302:	31 05       	cpc	r19, r1
     304:	89 f0       	breq	.+34     	; 0x328 <configuracion_interrupcion_Externa+0x86>
     306:	1c f4       	brge	.+6      	; 0x30e <configuracion_interrupcion_Externa+0x6c>
     308:	23 2b       	or	r18, r19
     30a:	41 f0       	breq	.+16     	; 0x31c <configuracion_interrupcion_Externa+0x7a>
     30c:	1e c0       	rjmp	.+60     	; 0x34a <configuracion_interrupcion_Externa+0xa8>
     30e:	22 30       	cpi	r18, 0x02	; 2
     310:	31 05       	cpc	r19, r1
     312:	81 f0       	breq	.+32     	; 0x334 <configuracion_interrupcion_Externa+0x92>
     314:	23 30       	cpi	r18, 0x03	; 3
     316:	31 05       	cpc	r19, r1
     318:	99 f0       	breq	.+38     	; 0x340 <configuracion_interrupcion_Externa+0x9e>
     31a:	17 c0       	rjmp	.+46     	; 0x34a <configuracion_interrupcion_Externa+0xa8>
			case 0: //Interrupe por nivel bajo
			EICRA&=~(3<<ISC10);
     31c:	e9 e6       	ldi	r30, 0x69	; 105
     31e:	f0 e0       	ldi	r31, 0x00	; 0
     320:	80 81       	ld	r24, Z
     322:	83 7f       	andi	r24, 0xF3	; 243
     324:	80 83       	st	Z, r24
			break;
     326:	11 c0       	rjmp	.+34     	; 0x34a <configuracion_interrupcion_Externa+0xa8>
			case 1:
			EICRA|=(1<<ISC10);
     328:	e9 e6       	ldi	r30, 0x69	; 105
     32a:	f0 e0       	ldi	r31, 0x00	; 0
     32c:	80 81       	ld	r24, Z
     32e:	84 60       	ori	r24, 0x04	; 4
     330:	80 83       	st	Z, r24
			break;
     332:	0b c0       	rjmp	.+22     	; 0x34a <configuracion_interrupcion_Externa+0xa8>
			case 2:
			EICRA|=(2<<ISC10);
     334:	e9 e6       	ldi	r30, 0x69	; 105
     336:	f0 e0       	ldi	r31, 0x00	; 0
     338:	80 81       	ld	r24, Z
     33a:	88 60       	ori	r24, 0x08	; 8
     33c:	80 83       	st	Z, r24
			break;
     33e:	05 c0       	rjmp	.+10     	; 0x34a <configuracion_interrupcion_Externa+0xa8>
			case 3:
			EICRA|=(3<<ISC10);
     340:	e9 e6       	ldi	r30, 0x69	; 105
     342:	f0 e0       	ldi	r31, 0x00	; 0
     344:	80 81       	ld	r24, Z
     346:	8c 60       	ori	r24, 0x0C	; 12
     348:	80 83       	st	Z, r24
			break;
			
		}
		EIMSK = (1<<INT1);
     34a:	82 e0       	ldi	r24, 0x02	; 2
     34c:	8d bb       	out	0x1d, r24	; 29
		DDRD&=~(1<<DDD3);
     34e:	53 98       	cbi	0x0a, 3	; 10
     350:	08 95       	ret

00000352 <config_Prescaler_TC1>:
	}
	
}

//Configuracion de preescaler Timer 1 (PWM) 16bits
void config_Prescaler_TC1(float T){
     352:	cf 92       	push	r12
     354:	df 92       	push	r13
     356:	ef 92       	push	r14
     358:	ff 92       	push	r15
	T = (float) (T/1000.0);
     35a:	20 e0       	ldi	r18, 0x00	; 0
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	4a e7       	ldi	r20, 0x7A	; 122
     360:	54 e4       	ldi	r21, 0x44	; 68
     362:	0e 94 0f 0a 	call	0x141e	; 0x141e <__divsf3>
     366:	6b 01       	movw	r12, r22
     368:	7c 01       	movw	r14, r24
	if(T == 0){prescalerValue_TC1=0;}
     36a:	20 e0       	ldi	r18, 0x00	; 0
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	a9 01       	movw	r20, r18
     370:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__cmpsf2>
     374:	81 11       	cpse	r24, r1
     376:	04 c0       	rjmp	.+8      	; 0x380 <config_Prescaler_TC1+0x2e>
     378:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <prescalerValue_TC1+0x1>
     37c:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <prescalerValue_TC1>
	float aux = (float) (pow(2,16)/F_CPU);
	if (T <= aux) prescalerValue_TC1=1;
     380:	2d eb       	ldi	r18, 0xBD	; 189
     382:	37 e3       	ldi	r19, 0x37	; 55
     384:	46 e8       	ldi	r20, 0x86	; 134
     386:	5b e3       	ldi	r21, 0x3B	; 59
     388:	c7 01       	movw	r24, r14
     38a:	b6 01       	movw	r22, r12
     38c:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__cmpsf2>
     390:	18 16       	cp	r1, r24
     392:	3c f0       	brlt	.+14     	; 0x3a2 <config_Prescaler_TC1+0x50>
     394:	81 e0       	ldi	r24, 0x01	; 1
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <prescalerValue_TC1+0x1>
     39c:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <prescalerValue_TC1>
     3a0:	43 c0       	rjmp	.+134    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
	else if(T<= 8*aux)	prescalerValue_TC1=8;
     3a2:	2d eb       	ldi	r18, 0xBD	; 189
     3a4:	37 e3       	ldi	r19, 0x37	; 55
     3a6:	46 e0       	ldi	r20, 0x06	; 6
     3a8:	5d e3       	ldi	r21, 0x3D	; 61
     3aa:	c7 01       	movw	r24, r14
     3ac:	b6 01       	movw	r22, r12
     3ae:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__cmpsf2>
     3b2:	18 16       	cp	r1, r24
     3b4:	3c f0       	brlt	.+14     	; 0x3c4 <config_Prescaler_TC1+0x72>
     3b6:	88 e0       	ldi	r24, 0x08	; 8
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <prescalerValue_TC1+0x1>
     3be:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <prescalerValue_TC1>
     3c2:	32 c0       	rjmp	.+100    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
	else if(T<= 64*aux) prescalerValue_TC1=64;
     3c4:	2d eb       	ldi	r18, 0xBD	; 189
     3c6:	37 e3       	ldi	r19, 0x37	; 55
     3c8:	46 e8       	ldi	r20, 0x86	; 134
     3ca:	5e e3       	ldi	r21, 0x3E	; 62
     3cc:	c7 01       	movw	r24, r14
     3ce:	b6 01       	movw	r22, r12
     3d0:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__cmpsf2>
     3d4:	18 16       	cp	r1, r24
     3d6:	3c f0       	brlt	.+14     	; 0x3e6 <config_Prescaler_TC1+0x94>
     3d8:	80 e4       	ldi	r24, 0x40	; 64
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <prescalerValue_TC1+0x1>
     3e0:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <prescalerValue_TC1>
     3e4:	21 c0       	rjmp	.+66     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
	else if(T<= 256*aux) prescalerValue_TC1=256;
     3e6:	2d eb       	ldi	r18, 0xBD	; 189
     3e8:	37 e3       	ldi	r19, 0x37	; 55
     3ea:	46 e8       	ldi	r20, 0x86	; 134
     3ec:	5f e3       	ldi	r21, 0x3F	; 63
     3ee:	c7 01       	movw	r24, r14
     3f0:	b6 01       	movw	r22, r12
     3f2:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__cmpsf2>
     3f6:	18 16       	cp	r1, r24
     3f8:	3c f0       	brlt	.+14     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     3fa:	80 e0       	ldi	r24, 0x00	; 0
     3fc:	91 e0       	ldi	r25, 0x01	; 1
     3fe:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <prescalerValue_TC1+0x1>
     402:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <prescalerValue_TC1>
     406:	10 c0       	rjmp	.+32     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
	else if(T<= 1024*aux) prescalerValue_TC1=1024;
     408:	2d eb       	ldi	r18, 0xBD	; 189
     40a:	37 e3       	ldi	r19, 0x37	; 55
     40c:	46 e8       	ldi	r20, 0x86	; 134
     40e:	50 e4       	ldi	r21, 0x40	; 64
     410:	c7 01       	movw	r24, r14
     412:	b6 01       	movw	r22, r12
     414:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__cmpsf2>
     418:	18 16       	cp	r1, r24
     41a:	34 f0       	brlt	.+12     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     41c:	80 e0       	ldi	r24, 0x00	; 0
     41e:	94 e0       	ldi	r25, 0x04	; 4
     420:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <prescalerValue_TC1+0x1>
     424:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <prescalerValue_TC1>
	
	TCCR1B &=~(7<<CS10); //Resetea a 0 bits de conf prescaler
     428:	e1 e8       	ldi	r30, 0x81	; 129
     42a:	f0 e0       	ldi	r31, 0x00	; 0
     42c:	80 81       	ld	r24, Z
     42e:	88 7f       	andi	r24, 0xF8	; 248
     430:	80 83       	st	Z, r24
	
	switch(prescalerValue_TC1){
     432:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <prescalerValue_TC1>
     436:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <prescalerValue_TC1+0x1>
     43a:	88 30       	cpi	r24, 0x08	; 8
     43c:	91 05       	cpc	r25, r1
     43e:	f1 f0       	breq	.+60     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
     440:	28 f4       	brcc	.+10     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     442:	00 97       	sbiw	r24, 0x00	; 0
     444:	79 f0       	breq	.+30     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     446:	01 97       	sbiw	r24, 0x01	; 1
     448:	99 f0       	breq	.+38     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
     44a:	2f c0       	rjmp	.+94     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     44c:	81 15       	cp	r24, r1
     44e:	21 e0       	ldi	r18, 0x01	; 1
     450:	92 07       	cpc	r25, r18
     452:	01 f1       	breq	.+64     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
     454:	81 15       	cp	r24, r1
     456:	24 e0       	ldi	r18, 0x04	; 4
     458:	92 07       	cpc	r25, r18
     45a:	11 f1       	breq	.+68     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
     45c:	80 34       	cpi	r24, 0x40	; 64
     45e:	91 05       	cpc	r25, r1
     460:	21 f5       	brne	.+72     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     462:	12 c0       	rjmp	.+36     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
		case 0:
		TCCR1B &=~(7<<CS10);
     464:	e1 e8       	ldi	r30, 0x81	; 129
     466:	f0 e0       	ldi	r31, 0x00	; 0
     468:	80 81       	ld	r24, Z
     46a:	88 7f       	andi	r24, 0xF8	; 248
     46c:	80 83       	st	Z, r24
		break;
     46e:	1d c0       	rjmp	.+58     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
		case 1:
		TCCR1B |= (1<<CS10);
     470:	e1 e8       	ldi	r30, 0x81	; 129
     472:	f0 e0       	ldi	r31, 0x00	; 0
     474:	80 81       	ld	r24, Z
     476:	81 60       	ori	r24, 0x01	; 1
     478:	80 83       	st	Z, r24
		break;
     47a:	17 c0       	rjmp	.+46     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
		case 8:
		TCCR1B |= (2<<CS10);
     47c:	e1 e8       	ldi	r30, 0x81	; 129
     47e:	f0 e0       	ldi	r31, 0x00	; 0
     480:	80 81       	ld	r24, Z
     482:	82 60       	ori	r24, 0x02	; 2
     484:	80 83       	st	Z, r24
		break;
     486:	11 c0       	rjmp	.+34     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
		case 64:
		TCCR1B |= (3<<CS10);
     488:	e1 e8       	ldi	r30, 0x81	; 129
     48a:	f0 e0       	ldi	r31, 0x00	; 0
     48c:	80 81       	ld	r24, Z
     48e:	83 60       	ori	r24, 0x03	; 3
     490:	80 83       	st	Z, r24
		break;
     492:	0b c0       	rjmp	.+22     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
		case 256:
		TCCR1B |=(4<<CS10);
     494:	e1 e8       	ldi	r30, 0x81	; 129
     496:	f0 e0       	ldi	r31, 0x00	; 0
     498:	80 81       	ld	r24, Z
     49a:	84 60       	ori	r24, 0x04	; 4
     49c:	80 83       	st	Z, r24
		break;
     49e:	05 c0       	rjmp	.+10     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
		case 1024:
		TCCR1B |=(5<<CS10);
     4a0:	e1 e8       	ldi	r30, 0x81	; 129
     4a2:	f0 e0       	ldi	r31, 0x00	; 0
     4a4:	80 81       	ld	r24, Z
     4a6:	85 60       	ori	r24, 0x05	; 5
     4a8:	80 83       	st	Z, r24
		break;
	}
}
     4aa:	ff 90       	pop	r15
     4ac:	ef 90       	pop	r14
     4ae:	df 90       	pop	r13
     4b0:	cf 90       	pop	r12
     4b2:	08 95       	ret

000004b4 <config_Prescaler_TC0>:

//Configuracion de preescaler Timer 0 (velocidad) 8bits
void config_Prescaler_TC0(float T){
     4b4:	cf 92       	push	r12
     4b6:	df 92       	push	r13
     4b8:	ef 92       	push	r14
     4ba:	ff 92       	push	r15
	T = (float) (T/1000.0);
     4bc:	20 e0       	ldi	r18, 0x00	; 0
     4be:	30 e0       	ldi	r19, 0x00	; 0
     4c0:	4a e7       	ldi	r20, 0x7A	; 122
     4c2:	54 e4       	ldi	r21, 0x44	; 68
     4c4:	0e 94 0f 0a 	call	0x141e	; 0x141e <__divsf3>
     4c8:	6b 01       	movw	r12, r22
     4ca:	7c 01       	movw	r14, r24
	float aux = (float) (pow(2,8)/F_CPU);
	if (T <= aux) prescalerValue_TC0=1;
     4cc:	2d eb       	ldi	r18, 0xBD	; 189
     4ce:	37 e3       	ldi	r19, 0x37	; 55
     4d0:	46 e8       	ldi	r20, 0x86	; 134
     4d2:	57 e3       	ldi	r21, 0x37	; 55
     4d4:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__cmpsf2>
     4d8:	18 16       	cp	r1, r24
     4da:	3c f0       	brlt	.+14     	; 0x4ea <config_Prescaler_TC0+0x36>
     4dc:	81 e0       	ldi	r24, 0x01	; 1
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <prescalerValue_TC0+0x1>
     4e4:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <prescalerValue_TC0>
     4e8:	4a c0       	rjmp	.+148    	; 0x57e <config_Prescaler_TC0+0xca>
	else if(T<= 8*aux)	prescalerValue_TC0=8;
     4ea:	2d eb       	ldi	r18, 0xBD	; 189
     4ec:	37 e3       	ldi	r19, 0x37	; 55
     4ee:	46 e0       	ldi	r20, 0x06	; 6
     4f0:	59 e3       	ldi	r21, 0x39	; 57
     4f2:	c7 01       	movw	r24, r14
     4f4:	b6 01       	movw	r22, r12
     4f6:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__cmpsf2>
     4fa:	18 16       	cp	r1, r24
     4fc:	3c f0       	brlt	.+14     	; 0x50c <config_Prescaler_TC0+0x58>
     4fe:	88 e0       	ldi	r24, 0x08	; 8
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <prescalerValue_TC0+0x1>
     506:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <prescalerValue_TC0>
     50a:	39 c0       	rjmp	.+114    	; 0x57e <config_Prescaler_TC0+0xca>
	else if(T<= 64*aux) prescalerValue_TC0=64;
     50c:	2d eb       	ldi	r18, 0xBD	; 189
     50e:	37 e3       	ldi	r19, 0x37	; 55
     510:	46 e8       	ldi	r20, 0x86	; 134
     512:	5a e3       	ldi	r21, 0x3A	; 58
     514:	c7 01       	movw	r24, r14
     516:	b6 01       	movw	r22, r12
     518:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__cmpsf2>
     51c:	18 16       	cp	r1, r24
     51e:	3c f0       	brlt	.+14     	; 0x52e <config_Prescaler_TC0+0x7a>
     520:	80 e4       	ldi	r24, 0x40	; 64
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <prescalerValue_TC0+0x1>
     528:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <prescalerValue_TC0>
     52c:	28 c0       	rjmp	.+80     	; 0x57e <config_Prescaler_TC0+0xca>
	else if(T<= 256*aux) prescalerValue_TC0=256;
     52e:	2d eb       	ldi	r18, 0xBD	; 189
     530:	37 e3       	ldi	r19, 0x37	; 55
     532:	46 e8       	ldi	r20, 0x86	; 134
     534:	5b e3       	ldi	r21, 0x3B	; 59
     536:	c7 01       	movw	r24, r14
     538:	b6 01       	movw	r22, r12
     53a:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__cmpsf2>
     53e:	18 16       	cp	r1, r24
     540:	3c f0       	brlt	.+14     	; 0x550 <config_Prescaler_TC0+0x9c>
     542:	80 e0       	ldi	r24, 0x00	; 0
     544:	91 e0       	ldi	r25, 0x01	; 1
     546:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <prescalerValue_TC0+0x1>
     54a:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <prescalerValue_TC0>
     54e:	17 c0       	rjmp	.+46     	; 0x57e <config_Prescaler_TC0+0xca>
	else if(T<= 1024*aux) prescalerValue_TC0=1024;
     550:	2d eb       	ldi	r18, 0xBD	; 189
     552:	37 e3       	ldi	r19, 0x37	; 55
     554:	46 e8       	ldi	r20, 0x86	; 134
     556:	5c e3       	ldi	r21, 0x3C	; 60
     558:	c7 01       	movw	r24, r14
     55a:	b6 01       	movw	r22, r12
     55c:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__cmpsf2>
     560:	18 16       	cp	r1, r24
     562:	3c f0       	brlt	.+14     	; 0x572 <config_Prescaler_TC0+0xbe>
     564:	80 e0       	ldi	r24, 0x00	; 0
     566:	94 e0       	ldi	r25, 0x04	; 4
     568:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <prescalerValue_TC0+0x1>
     56c:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <prescalerValue_TC0>
     570:	06 c0       	rjmp	.+12     	; 0x57e <config_Prescaler_TC0+0xca>
	else prescalerValue_TC0 =1024;
     572:	80 e0       	ldi	r24, 0x00	; 0
     574:	94 e0       	ldi	r25, 0x04	; 4
     576:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <prescalerValue_TC0+0x1>
     57a:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <prescalerValue_TC0>
	
	TCCR0B &=~(7<<CS00); //Resetea a 0 bits de conf prescaler
     57e:	85 b5       	in	r24, 0x25	; 37
     580:	88 7f       	andi	r24, 0xF8	; 248
     582:	85 bd       	out	0x25, r24	; 37
	
	switch(prescalerValue_TC0){
     584:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <prescalerValue_TC0>
     588:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <prescalerValue_TC0+0x1>
     58c:	88 30       	cpi	r24, 0x08	; 8
     58e:	91 05       	cpc	r25, r1
     590:	d1 f0       	breq	.+52     	; 0x5c6 <config_Prescaler_TC0+0x112>
     592:	28 f4       	brcc	.+10     	; 0x59e <config_Prescaler_TC0+0xea>
     594:	00 97       	sbiw	r24, 0x00	; 0
     596:	79 f0       	breq	.+30     	; 0x5b6 <config_Prescaler_TC0+0x102>
     598:	01 97       	sbiw	r24, 0x01	; 1
     59a:	89 f0       	breq	.+34     	; 0x5be <config_Prescaler_TC0+0x10a>
     59c:	23 c0       	rjmp	.+70     	; 0x5e4 <config_Prescaler_TC0+0x130>
     59e:	81 15       	cp	r24, r1
     5a0:	21 e0       	ldi	r18, 0x01	; 1
     5a2:	92 07       	cpc	r25, r18
     5a4:	c1 f0       	breq	.+48     	; 0x5d6 <config_Prescaler_TC0+0x122>
     5a6:	81 15       	cp	r24, r1
     5a8:	24 e0       	ldi	r18, 0x04	; 4
     5aa:	92 07       	cpc	r25, r18
     5ac:	c1 f0       	breq	.+48     	; 0x5de <config_Prescaler_TC0+0x12a>
     5ae:	80 34       	cpi	r24, 0x40	; 64
     5b0:	91 05       	cpc	r25, r1
     5b2:	c1 f4       	brne	.+48     	; 0x5e4 <config_Prescaler_TC0+0x130>
     5b4:	0c c0       	rjmp	.+24     	; 0x5ce <config_Prescaler_TC0+0x11a>
		case 0:
		TCCR0B &=~(7<<CS00);
     5b6:	85 b5       	in	r24, 0x25	; 37
     5b8:	88 7f       	andi	r24, 0xF8	; 248
     5ba:	85 bd       	out	0x25, r24	; 37
		break;
     5bc:	13 c0       	rjmp	.+38     	; 0x5e4 <config_Prescaler_TC0+0x130>
		case 1:
		TCCR0B |= (1<<CS00);
     5be:	85 b5       	in	r24, 0x25	; 37
     5c0:	81 60       	ori	r24, 0x01	; 1
     5c2:	85 bd       	out	0x25, r24	; 37
		break;
     5c4:	0f c0       	rjmp	.+30     	; 0x5e4 <config_Prescaler_TC0+0x130>
		case 8:
		TCCR0B |= (2<<CS00);
     5c6:	85 b5       	in	r24, 0x25	; 37
     5c8:	82 60       	ori	r24, 0x02	; 2
     5ca:	85 bd       	out	0x25, r24	; 37
		break;
     5cc:	0b c0       	rjmp	.+22     	; 0x5e4 <config_Prescaler_TC0+0x130>
		case 64:
		TCCR0B |= (3<<CS00);
     5ce:	85 b5       	in	r24, 0x25	; 37
     5d0:	83 60       	ori	r24, 0x03	; 3
     5d2:	85 bd       	out	0x25, r24	; 37
		break;
     5d4:	07 c0       	rjmp	.+14     	; 0x5e4 <config_Prescaler_TC0+0x130>
		case 256:
		TCCR0B |=(4<<CS00);
     5d6:	85 b5       	in	r24, 0x25	; 37
     5d8:	84 60       	ori	r24, 0x04	; 4
     5da:	85 bd       	out	0x25, r24	; 37
		break;
     5dc:	03 c0       	rjmp	.+6      	; 0x5e4 <config_Prescaler_TC0+0x130>
		case 1024:
		TCCR0B |=(5<<CS00);
     5de:	85 b5       	in	r24, 0x25	; 37
     5e0:	85 60       	ori	r24, 0x05	; 5
     5e2:	85 bd       	out	0x25, r24	; 37
		break;
	}
}
     5e4:	ff 90       	pop	r15
     5e6:	ef 90       	pop	r14
     5e8:	df 90       	pop	r13
     5ea:	cf 90       	pop	r12
     5ec:	08 95       	ret

000005ee <conf_modo_TC1>:

//Configuracion modo timer 1
void conf_modo_TC1(uint8_t modo){
     5ee:	e8 2f       	mov	r30, r24
	TCCR1A &=~(3<<WGM10);
     5f0:	a0 e8       	ldi	r26, 0x80	; 128
     5f2:	b0 e0       	ldi	r27, 0x00	; 0
     5f4:	8c 91       	ld	r24, X
     5f6:	8c 7f       	andi	r24, 0xFC	; 252
     5f8:	8c 93       	st	X, r24
	TCCR1B &=~(3<<WGM12);
     5fa:	a1 e8       	ldi	r26, 0x81	; 129
     5fc:	b0 e0       	ldi	r27, 0x00	; 0
     5fe:	8c 91       	ld	r24, X
     600:	87 7e       	andi	r24, 0xE7	; 231
     602:	8c 93       	st	X, r24
	
	switch(modo){
     604:	8e 2f       	mov	r24, r30
     606:	90 e0       	ldi	r25, 0x00	; 0
     608:	80 31       	cpi	r24, 0x10	; 16
     60a:	91 05       	cpc	r25, r1
     60c:	08 f0       	brcs	.+2      	; 0x610 <conf_modo_TC1+0x22>
     60e:	96 c0       	rjmp	.+300    	; 0x73c <conf_modo_TC1+0x14e>
     610:	fc 01       	movw	r30, r24
     612:	ec 5c       	subi	r30, 0xCC	; 204
     614:	ff 4f       	sbci	r31, 0xFF	; 255
     616:	0c 94 92 0f 	jmp	0x1f24	; 0x1f24 <__tablejump2__>
		case 0:
		TCCR1A &=~(3<<WGM10);
     61a:	e0 e8       	ldi	r30, 0x80	; 128
     61c:	f0 e0       	ldi	r31, 0x00	; 0
     61e:	80 81       	ld	r24, Z
     620:	8c 7f       	andi	r24, 0xFC	; 252
     622:	80 83       	st	Z, r24
		TCCR1B &=~(3<<WGM12);
     624:	e1 e8       	ldi	r30, 0x81	; 129
     626:	f0 e0       	ldi	r31, 0x00	; 0
     628:	80 81       	ld	r24, Z
     62a:	87 7e       	andi	r24, 0xE7	; 231
     62c:	80 83       	st	Z, r24
		break;
     62e:	08 95       	ret
		case 1:
		//PWM, PHASE CORRECTED, 8BIT
		TCCR1A |=(1<<WGM10);
     630:	e0 e8       	ldi	r30, 0x80	; 128
     632:	f0 e0       	ldi	r31, 0x00	; 0
     634:	80 81       	ld	r24, Z
     636:	81 60       	ori	r24, 0x01	; 1
     638:	80 83       	st	Z, r24
		break;
     63a:	08 95       	ret
		case 2:
		//PWM, PHASE CORRECTED, 9 BIT
		TCCR1A |=(1<<WGM11);
     63c:	e0 e8       	ldi	r30, 0x80	; 128
     63e:	f0 e0       	ldi	r31, 0x00	; 0
     640:	80 81       	ld	r24, Z
     642:	82 60       	ori	r24, 0x02	; 2
     644:	80 83       	st	Z, r24
		break;
     646:	08 95       	ret
		case 3:
		//PWM, PHASE CORRECTED, 10 BIT
		TCCR1A |= (1<<WGM11 | 1<<WGM10);
     648:	e0 e8       	ldi	r30, 0x80	; 128
     64a:	f0 e0       	ldi	r31, 0x00	; 0
     64c:	80 81       	ld	r24, Z
     64e:	83 60       	ori	r24, 0x03	; 3
     650:	80 83       	st	Z, r24
		break;
     652:	08 95       	ret
		case 4:
		//CTC
		TCCR1B |= (1<<WGM12);
     654:	e1 e8       	ldi	r30, 0x81	; 129
     656:	f0 e0       	ldi	r31, 0x00	; 0
     658:	80 81       	ld	r24, Z
     65a:	88 60       	ori	r24, 0x08	; 8
     65c:	80 83       	st	Z, r24
		break;
     65e:	08 95       	ret
		case 5:
		//FAST PWM, 8 bit
		TCCR1A |=(1<<WGM10);
     660:	e0 e8       	ldi	r30, 0x80	; 128
     662:	f0 e0       	ldi	r31, 0x00	; 0
     664:	80 81       	ld	r24, Z
     666:	81 60       	ori	r24, 0x01	; 1
     668:	80 83       	st	Z, r24
		TCCR1B |=(1<<WGM12);
     66a:	e1 e8       	ldi	r30, 0x81	; 129
     66c:	f0 e0       	ldi	r31, 0x00	; 0
     66e:	80 81       	ld	r24, Z
     670:	88 60       	ori	r24, 0x08	; 8
     672:	80 83       	st	Z, r24
		break;
     674:	08 95       	ret
		case 6:
		//FAST PWM, 9bit
		TCCR1A |=(1<<WGM11);
     676:	e0 e8       	ldi	r30, 0x80	; 128
     678:	f0 e0       	ldi	r31, 0x00	; 0
     67a:	80 81       	ld	r24, Z
     67c:	82 60       	ori	r24, 0x02	; 2
     67e:	80 83       	st	Z, r24
		TCCR1B |=(1<<WGM12);
     680:	e1 e8       	ldi	r30, 0x81	; 129
     682:	f0 e0       	ldi	r31, 0x00	; 0
     684:	80 81       	ld	r24, Z
     686:	88 60       	ori	r24, 0x08	; 8
     688:	80 83       	st	Z, r24
		break;
     68a:	08 95       	ret
		case 7:
		//FAST PWM, 10 BIT
		TCCR1A |=(1<<WGM10|1<<WGM11);
     68c:	e0 e8       	ldi	r30, 0x80	; 128
     68e:	f0 e0       	ldi	r31, 0x00	; 0
     690:	80 81       	ld	r24, Z
     692:	83 60       	ori	r24, 0x03	; 3
     694:	80 83       	st	Z, r24
		TCCR1B |=(1<<WGM12);
     696:	e1 e8       	ldi	r30, 0x81	; 129
     698:	f0 e0       	ldi	r31, 0x00	; 0
     69a:	80 81       	ld	r24, Z
     69c:	88 60       	ori	r24, 0x08	; 8
     69e:	80 83       	st	Z, r24
		break;
     6a0:	08 95       	ret
		case 8:
		//PWM, PHASE AND HZ CORRECTED
		
		TCCR1B |=(1<<WGM13);
     6a2:	e1 e8       	ldi	r30, 0x81	; 129
     6a4:	f0 e0       	ldi	r31, 0x00	; 0
     6a6:	80 81       	ld	r24, Z
     6a8:	80 61       	ori	r24, 0x10	; 16
     6aa:	80 83       	st	Z, r24
		break;
     6ac:	08 95       	ret
		
		case 9:
		TCCR1A |=(1<<WGM10);
     6ae:	e0 e8       	ldi	r30, 0x80	; 128
     6b0:	f0 e0       	ldi	r31, 0x00	; 0
     6b2:	80 81       	ld	r24, Z
     6b4:	81 60       	ori	r24, 0x01	; 1
     6b6:	80 83       	st	Z, r24
		TCCR1B |=(1<<WGM13);
     6b8:	e1 e8       	ldi	r30, 0x81	; 129
     6ba:	f0 e0       	ldi	r31, 0x00	; 0
     6bc:	80 81       	ld	r24, Z
     6be:	80 61       	ori	r24, 0x10	; 16
     6c0:	80 83       	st	Z, r24
		break;
     6c2:	08 95       	ret
		case 10:
		TCCR1A |=(1<<WGM11);
     6c4:	e0 e8       	ldi	r30, 0x80	; 128
     6c6:	f0 e0       	ldi	r31, 0x00	; 0
     6c8:	80 81       	ld	r24, Z
     6ca:	82 60       	ori	r24, 0x02	; 2
     6cc:	80 83       	st	Z, r24
		TCCR1B |=(1<<WGM13);
     6ce:	e1 e8       	ldi	r30, 0x81	; 129
     6d0:	f0 e0       	ldi	r31, 0x00	; 0
     6d2:	80 81       	ld	r24, Z
     6d4:	80 61       	ori	r24, 0x10	; 16
     6d6:	80 83       	st	Z, r24
		break;
     6d8:	08 95       	ret
		case 11:
		TCCR1A |=(1<<WGM10|1<<WGM11);
     6da:	e0 e8       	ldi	r30, 0x80	; 128
     6dc:	f0 e0       	ldi	r31, 0x00	; 0
     6de:	80 81       	ld	r24, Z
     6e0:	83 60       	ori	r24, 0x03	; 3
     6e2:	80 83       	st	Z, r24
		TCCR1B |=(1<<WGM13);
     6e4:	e1 e8       	ldi	r30, 0x81	; 129
     6e6:	f0 e0       	ldi	r31, 0x00	; 0
     6e8:	80 81       	ld	r24, Z
     6ea:	80 61       	ori	r24, 0x10	; 16
     6ec:	80 83       	st	Z, r24
		break;
     6ee:	08 95       	ret
		case 12:
		TCCR1B |=(1<<WGM12|1<<WGM13);
     6f0:	e1 e8       	ldi	r30, 0x81	; 129
     6f2:	f0 e0       	ldi	r31, 0x00	; 0
     6f4:	80 81       	ld	r24, Z
     6f6:	88 61       	ori	r24, 0x18	; 24
     6f8:	80 83       	st	Z, r24
		break;
     6fa:	08 95       	ret
		case 13:
		TCCR1A |=(1<<WGM10);
     6fc:	e0 e8       	ldi	r30, 0x80	; 128
     6fe:	f0 e0       	ldi	r31, 0x00	; 0
     700:	80 81       	ld	r24, Z
     702:	81 60       	ori	r24, 0x01	; 1
     704:	80 83       	st	Z, r24
		TCCR1B |=(1<<WGM12|1<<WGM13);
     706:	e1 e8       	ldi	r30, 0x81	; 129
     708:	f0 e0       	ldi	r31, 0x00	; 0
     70a:	80 81       	ld	r24, Z
     70c:	88 61       	ori	r24, 0x18	; 24
     70e:	80 83       	st	Z, r24
		break;
     710:	08 95       	ret
		case 14:
		TCCR1A |=(1<<WGM11);
     712:	e0 e8       	ldi	r30, 0x80	; 128
     714:	f0 e0       	ldi	r31, 0x00	; 0
     716:	80 81       	ld	r24, Z
     718:	82 60       	ori	r24, 0x02	; 2
     71a:	80 83       	st	Z, r24
		TCCR1B |=(1<<WGM12|1<<WGM13);
     71c:	e1 e8       	ldi	r30, 0x81	; 129
     71e:	f0 e0       	ldi	r31, 0x00	; 0
     720:	80 81       	ld	r24, Z
     722:	88 61       	ori	r24, 0x18	; 24
     724:	80 83       	st	Z, r24
		break;
     726:	08 95       	ret
		case 15:
		TCCR1A |=(1<<WGM10|1<<WGM11);
     728:	e0 e8       	ldi	r30, 0x80	; 128
     72a:	f0 e0       	ldi	r31, 0x00	; 0
     72c:	80 81       	ld	r24, Z
     72e:	83 60       	ori	r24, 0x03	; 3
     730:	80 83       	st	Z, r24
		TCCR1B |=(1<<WGM12|1<<WGM13);
     732:	e1 e8       	ldi	r30, 0x81	; 129
     734:	f0 e0       	ldi	r31, 0x00	; 0
     736:	80 81       	ld	r24, Z
     738:	88 61       	ori	r24, 0x18	; 24
     73a:	80 83       	st	Z, r24
     73c:	08 95       	ret

0000073e <conf_modo_TC0>:

	}

}

void conf_modo_TC0(uint8_t modo0){
     73e:	e8 2f       	mov	r30, r24
	TCCR0A &=~(1<<WGM00);
     740:	84 b5       	in	r24, 0x24	; 36
     742:	8e 7f       	andi	r24, 0xFE	; 254
     744:	84 bd       	out	0x24, r24	; 36
	TCCR0A &=~(1<<WGM01);
     746:	84 b5       	in	r24, 0x24	; 36
     748:	8d 7f       	andi	r24, 0xFD	; 253
     74a:	84 bd       	out	0x24, r24	; 36
	TCCR0B &=~(1<<WGM02);
     74c:	85 b5       	in	r24, 0x25	; 37
     74e:	87 7f       	andi	r24, 0xF7	; 247
     750:	85 bd       	out	0x25, r24	; 37
	
	switch(modo0){
     752:	8e 2f       	mov	r24, r30
     754:	90 e0       	ldi	r25, 0x00	; 0
     756:	88 30       	cpi	r24, 0x08	; 8
     758:	91 05       	cpc	r25, r1
     75a:	68 f5       	brcc	.+90     	; 0x7b6 <conf_modo_TC0+0x78>
     75c:	fc 01       	movw	r30, r24
     75e:	ec 5b       	subi	r30, 0xBC	; 188
     760:	ff 4f       	sbci	r31, 0xFF	; 255
     762:	0c 94 92 0f 	jmp	0x1f24	; 0x1f24 <__tablejump2__>
		case 0:
		TCCR0B &=~(1<<WGM02);
     766:	85 b5       	in	r24, 0x25	; 37
     768:	87 7f       	andi	r24, 0xF7	; 247
     76a:	85 bd       	out	0x25, r24	; 37
		break;
     76c:	08 95       	ret
		case 1:
		//PWM, PHASE CORRECTED, 8BIT
		TCCR0A |=(1<<WGM00);
     76e:	84 b5       	in	r24, 0x24	; 36
     770:	81 60       	ori	r24, 0x01	; 1
     772:	84 bd       	out	0x24, r24	; 36
		break;
     774:	08 95       	ret
		case 2:
		//CTC TOP (OCR0A)
		TCCR0A |=(1<<WGM01);
     776:	84 b5       	in	r24, 0x24	; 36
     778:	82 60       	ori	r24, 0x02	; 2
     77a:	84 bd       	out	0x24, r24	; 36
		break;
     77c:	08 95       	ret
		case 3:
		//FAST PWM 
		TCCR0A |= (1<<WGM01 | 1<<WGM00);
     77e:	84 b5       	in	r24, 0x24	; 36
     780:	83 60       	ori	r24, 0x03	; 3
     782:	84 bd       	out	0x24, r24	; 36
		break;
     784:	08 95       	ret
		case 4:
		//RESERVERD
		TCCR0B |= (1<<WGM02);
     786:	85 b5       	in	r24, 0x25	; 37
     788:	88 60       	ori	r24, 0x08	; 8
     78a:	85 bd       	out	0x25, r24	; 37
		break;
     78c:	08 95       	ret
		case 5:
		//FAST PWM PC
		TCCR0A |=(1<<WGM00);
     78e:	84 b5       	in	r24, 0x24	; 36
     790:	81 60       	ori	r24, 0x01	; 1
     792:	84 bd       	out	0x24, r24	; 36
		TCCR0B |=(1<<WGM02);
     794:	85 b5       	in	r24, 0x25	; 37
     796:	88 60       	ori	r24, 0x08	; 8
     798:	85 bd       	out	0x25, r24	; 37
		break;
     79a:	08 95       	ret
		case 6:
		//reservado
		TCCR0A |=(1<<WGM01);
     79c:	84 b5       	in	r24, 0x24	; 36
     79e:	82 60       	ori	r24, 0x02	; 2
     7a0:	84 bd       	out	0x24, r24	; 36
		TCCR0B |=(1<<WGM02);
     7a2:	85 b5       	in	r24, 0x25	; 37
     7a4:	88 60       	ori	r24, 0x08	; 8
     7a6:	85 bd       	out	0x25, r24	; 37
		break;
     7a8:	08 95       	ret
		case 7:
		//FAST PWM (OCR0A)
		TCCR0A |=(1<<WGM00|1<<WGM01);
     7aa:	84 b5       	in	r24, 0x24	; 36
     7ac:	83 60       	ori	r24, 0x03	; 3
     7ae:	84 bd       	out	0x24, r24	; 36
		TCCR0B |=(1<<WGM02);
     7b0:	85 b5       	in	r24, 0x25	; 37
     7b2:	88 60       	ori	r24, 0x08	; 8
     7b4:	85 bd       	out	0x25, r24	; 37
     7b6:	08 95       	ret

000007b8 <conf_modo_salida_TC1>:
		
}
}

//Modo de salido de pines timer 1
void conf_modo_salida_TC1(uint8_t outA, uint8_t outB){
     7b8:	cf 93       	push	r28
     7ba:	c6 2f       	mov	r28, r22
	
	TCCR1A &= ~(3<<COM1A0);
     7bc:	e0 e8       	ldi	r30, 0x80	; 128
     7be:	f0 e0       	ldi	r31, 0x00	; 0
     7c0:	90 81       	ld	r25, Z
     7c2:	9f 73       	andi	r25, 0x3F	; 63
     7c4:	90 83       	st	Z, r25
	TCCR1A &= ~(3<<COM1B0);
     7c6:	90 81       	ld	r25, Z
     7c8:	9f 7c       	andi	r25, 0xCF	; 207
     7ca:	90 83       	st	Z, r25
	
	switch(outA){
     7cc:	81 30       	cpi	r24, 0x01	; 1
     7ce:	61 f0       	breq	.+24     	; 0x7e8 <conf_modo_salida_TC1+0x30>
     7d0:	28 f0       	brcs	.+10     	; 0x7dc <conf_modo_salida_TC1+0x24>
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	79 f0       	breq	.+30     	; 0x7f4 <conf_modo_salida_TC1+0x3c>
     7d6:	83 30       	cpi	r24, 0x03	; 3
     7d8:	99 f0       	breq	.+38     	; 0x800 <conf_modo_salida_TC1+0x48>
     7da:	18 c0       	rjmp	.+48     	; 0x80c <conf_modo_salida_TC1+0x54>
		case 0:
		TCCR1A &= ~(3<<COM1A0);
     7dc:	e0 e8       	ldi	r30, 0x80	; 128
     7de:	f0 e0       	ldi	r31, 0x00	; 0
     7e0:	80 81       	ld	r24, Z
     7e2:	8f 73       	andi	r24, 0x3F	; 63
     7e4:	80 83       	st	Z, r24
		break;
     7e6:	16 c0       	rjmp	.+44     	; 0x814 <conf_modo_salida_TC1+0x5c>
		case 1://toogle
		TCCR1A |= (1<<COM1A0);
     7e8:	e0 e8       	ldi	r30, 0x80	; 128
     7ea:	f0 e0       	ldi	r31, 0x00	; 0
     7ec:	80 81       	ld	r24, Z
     7ee:	80 64       	ori	r24, 0x40	; 64
     7f0:	80 83       	st	Z, r24
		break;
     7f2:	10 c0       	rjmp	.+32     	; 0x814 <conf_modo_salida_TC1+0x5c>
		case 2://clear
		TCCR1A |= (1<<COM1A1);
     7f4:	e0 e8       	ldi	r30, 0x80	; 128
     7f6:	f0 e0       	ldi	r31, 0x00	; 0
     7f8:	80 81       	ld	r24, Z
     7fa:	80 68       	ori	r24, 0x80	; 128
     7fc:	80 83       	st	Z, r24
		break;
     7fe:	0a c0       	rjmp	.+20     	; 0x814 <conf_modo_salida_TC1+0x5c>
		case 3://set
		TCCR1A |= (3<<COM1A0);
     800:	e0 e8       	ldi	r30, 0x80	; 128
     802:	f0 e0       	ldi	r31, 0x00	; 0
     804:	80 81       	ld	r24, Z
     806:	80 6c       	ori	r24, 0xC0	; 192
     808:	80 83       	st	Z, r24
		break;
     80a:	04 c0       	rjmp	.+8      	; 0x814 <conf_modo_salida_TC1+0x5c>
		default:
		printf("Salida OC1A invalida\r\n");
     80c:	8b e2       	ldi	r24, 0x2B	; 43
     80e:	91 e0       	ldi	r25, 0x01	; 1
     810:	0e 94 39 11 	call	0x2272	; 0x2272 <puts>
		break;
		
	}
	switch(outB){
     814:	c1 30       	cpi	r28, 0x01	; 1
     816:	61 f0       	breq	.+24     	; 0x830 <conf_modo_salida_TC1+0x78>
     818:	28 f0       	brcs	.+10     	; 0x824 <conf_modo_salida_TC1+0x6c>
     81a:	c2 30       	cpi	r28, 0x02	; 2
     81c:	79 f0       	breq	.+30     	; 0x83c <conf_modo_salida_TC1+0x84>
     81e:	c3 30       	cpi	r28, 0x03	; 3
     820:	99 f0       	breq	.+38     	; 0x848 <conf_modo_salida_TC1+0x90>
     822:	18 c0       	rjmp	.+48     	; 0x854 <conf_modo_salida_TC1+0x9c>
		case 0:
		TCCR1A &= ~(3<<COM1B0);
     824:	e0 e8       	ldi	r30, 0x80	; 128
     826:	f0 e0       	ldi	r31, 0x00	; 0
     828:	80 81       	ld	r24, Z
     82a:	8f 7c       	andi	r24, 0xCF	; 207
     82c:	80 83       	st	Z, r24
		break;
     82e:	16 c0       	rjmp	.+44     	; 0x85c <conf_modo_salida_TC1+0xa4>
		case 1:
		TCCR1A |= (1<<COM1B0);
     830:	e0 e8       	ldi	r30, 0x80	; 128
     832:	f0 e0       	ldi	r31, 0x00	; 0
     834:	80 81       	ld	r24, Z
     836:	80 61       	ori	r24, 0x10	; 16
     838:	80 83       	st	Z, r24
		break;
     83a:	10 c0       	rjmp	.+32     	; 0x85c <conf_modo_salida_TC1+0xa4>
		case 2:
		TCCR1A |= (1<<COM1B1);
     83c:	e0 e8       	ldi	r30, 0x80	; 128
     83e:	f0 e0       	ldi	r31, 0x00	; 0
     840:	80 81       	ld	r24, Z
     842:	80 62       	ori	r24, 0x20	; 32
     844:	80 83       	st	Z, r24
		break;
     846:	0a c0       	rjmp	.+20     	; 0x85c <conf_modo_salida_TC1+0xa4>
		case 3:
		TCCR1A |= (3<<COM1B0);
     848:	e0 e8       	ldi	r30, 0x80	; 128
     84a:	f0 e0       	ldi	r31, 0x00	; 0
     84c:	80 81       	ld	r24, Z
     84e:	80 63       	ori	r24, 0x30	; 48
     850:	80 83       	st	Z, r24
		break;
     852:	04 c0       	rjmp	.+8      	; 0x85c <conf_modo_salida_TC1+0xa4>
		default:
		printf("Salida OC1A invalida\r\n");
     854:	8b e2       	ldi	r24, 0x2B	; 43
     856:	91 e0       	ldi	r25, 0x01	; 1
     858:	0e 94 39 11 	call	0x2272	; 0x2272 <puts>
		break;
		
	}
}
     85c:	cf 91       	pop	r28
     85e:	08 95       	ret

00000860 <interrupciones_TC1>:


//INTERRUPCIONES33

void interrupciones_TC1(uint8_t InputCapt, uint8_t OutputCaptA, uint8_t OutputCaptB, uint8_t Overflow){
	if(InputCapt){
     860:	88 23       	and	r24, r24
     862:	31 f0       	breq	.+12     	; 0x870 <interrupciones_TC1+0x10>
		TIFR1 &= ~(1<<ICF1); //Apago el flag
     864:	b5 98       	cbi	0x16, 5	; 22
		TIMSK1 |=(1<<ICIE1); //Habilita interrupcion
     866:	ef e6       	ldi	r30, 0x6F	; 111
     868:	f0 e0       	ldi	r31, 0x00	; 0
     86a:	80 81       	ld	r24, Z
     86c:	80 62       	ori	r24, 0x20	; 32
     86e:	80 83       	st	Z, r24
	}
	//PARA MODO 14 USO ESTE Y EL DE ARRIBA
	if(OutputCaptA){
     870:	66 23       	and	r22, r22
     872:	31 f0       	breq	.+12     	; 0x880 <interrupciones_TC1+0x20>
		TIFR1 &= ~(1<<OCF1A);
     874:	b1 98       	cbi	0x16, 1	; 22
		TIMSK1 |= (1<<OCIE1A);
     876:	ef e6       	ldi	r30, 0x6F	; 111
     878:	f0 e0       	ldi	r31, 0x00	; 0
     87a:	80 81       	ld	r24, Z
     87c:	82 60       	ori	r24, 0x02	; 2
     87e:	80 83       	st	Z, r24
	}
	if(OutputCaptB){
     880:	44 23       	and	r20, r20
     882:	31 f0       	breq	.+12     	; 0x890 <interrupciones_TC1+0x30>
		TIFR1 &= ~(1<<OCF1B);
     884:	b2 98       	cbi	0x16, 2	; 22
		TIMSK1 |= (1<<OCIE1B);
     886:	ef e6       	ldi	r30, 0x6F	; 111
     888:	f0 e0       	ldi	r31, 0x00	; 0
     88a:	80 81       	ld	r24, Z
     88c:	84 60       	ori	r24, 0x04	; 4
     88e:	80 83       	st	Z, r24
	}
	if(Overflow){
     890:	22 23       	and	r18, r18
     892:	31 f0       	breq	.+12     	; 0x8a0 <interrupciones_TC1+0x40>
		TIFR1 &=~(1<<TOV1);
     894:	b0 98       	cbi	0x16, 0	; 22
		TIMSK1 |= (1<<TOIE1);
     896:	ef e6       	ldi	r30, 0x6F	; 111
     898:	f0 e0       	ldi	r31, 0x00	; 0
     89a:	80 81       	ld	r24, Z
     89c:	81 60       	ori	r24, 0x01	; 1
     89e:	80 83       	st	Z, r24
     8a0:	08 95       	ret

000008a2 <interrupciones_TC0>:
	}
}

void interrupciones_TC0(uint8_t OutputCaptA, uint8_t OutputCaptB, uint8_t Overflow){
	if(OutputCaptA){
     8a2:	88 23       	and	r24, r24
     8a4:	31 f0       	breq	.+12     	; 0x8b2 <interrupciones_TC0+0x10>
		TIFR0 &= ~(1<<OCF0A);
     8a6:	a9 98       	cbi	0x15, 1	; 21
		TIMSK0 |= (1<<OCIE0A);
     8a8:	ee e6       	ldi	r30, 0x6E	; 110
     8aa:	f0 e0       	ldi	r31, 0x00	; 0
     8ac:	80 81       	ld	r24, Z
     8ae:	82 60       	ori	r24, 0x02	; 2
     8b0:	80 83       	st	Z, r24
	}
	if(OutputCaptB){
     8b2:	66 23       	and	r22, r22
     8b4:	31 f0       	breq	.+12     	; 0x8c2 <interrupciones_TC0+0x20>
		TIFR0 &= ~(1<<OCF0B);
     8b6:	aa 98       	cbi	0x15, 2	; 21
		TIMSK0 |= (1<<OCIE0B);
     8b8:	ee e6       	ldi	r30, 0x6E	; 110
     8ba:	f0 e0       	ldi	r31, 0x00	; 0
     8bc:	80 81       	ld	r24, Z
     8be:	84 60       	ori	r24, 0x04	; 4
     8c0:	80 83       	st	Z, r24
	}
	if(Overflow){
     8c2:	44 23       	and	r20, r20
     8c4:	31 f0       	breq	.+12     	; 0x8d2 <interrupciones_TC0+0x30>
		TIFR0 &=~(1<<TOV0);
     8c6:	a8 98       	cbi	0x15, 0	; 21
		TIMSK0 |= (1<<TOIE0);
     8c8:	ee e6       	ldi	r30, 0x6E	; 110
     8ca:	f0 e0       	ldi	r31, 0x00	; 0
     8cc:	80 81       	ld	r24, Z
     8ce:	81 60       	ori	r24, 0x01	; 1
     8d0:	80 83       	st	Z, r24
     8d2:	08 95       	ret

000008d4 <PWM_14>:
	
	
};

//MODO PWM 14
void PWM_14(float T_mili,float Duty_Cycle){
     8d4:	4f 92       	push	r4
     8d6:	5f 92       	push	r5
     8d8:	6f 92       	push	r6
     8da:	7f 92       	push	r7
     8dc:	8f 92       	push	r8
     8de:	9f 92       	push	r9
     8e0:	af 92       	push	r10
     8e2:	bf 92       	push	r11
     8e4:	cf 92       	push	r12
     8e6:	df 92       	push	r13
     8e8:	ef 92       	push	r14
     8ea:	ff 92       	push	r15
     8ec:	cf 93       	push	r28
     8ee:	df 93       	push	r29
     8f0:	00 d0       	rcall	.+0      	; 0x8f2 <PWM_14+0x1e>
     8f2:	00 d0       	rcall	.+0      	; 0x8f4 <PWM_14+0x20>
     8f4:	cd b7       	in	r28, 0x3d	; 61
     8f6:	de b7       	in	r29, 0x3e	; 62
     8f8:	6b 01       	movw	r12, r22
     8fa:	7c 01       	movw	r14, r24
     8fc:	29 83       	std	Y+1, r18	; 0x01
     8fe:	3a 83       	std	Y+2, r19	; 0x02
     900:	4b 83       	std	Y+3, r20	; 0x03
     902:	5c 83       	std	Y+4, r21	; 0x04
	float aux1 = (float) ((T_mili*Duty_Cycle)/100.0);
	conf_modo_salida_TC1(3, 0);	
     904:	60 e0       	ldi	r22, 0x00	; 0
     906:	83 e0       	ldi	r24, 0x03	; 3
     908:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <conf_modo_salida_TC1>
    conf_modo_TC1(14);
     90c:	8e e0       	ldi	r24, 0x0E	; 14
     90e:	0e 94 f7 02 	call	0x5ee	; 0x5ee <conf_modo_TC1>
	interrupciones_TC1(1,1,0,0);
     912:	20 e0       	ldi	r18, 0x00	; 0
     914:	40 e0       	ldi	r20, 0x00	; 0
     916:	61 e0       	ldi	r22, 0x01	; 1
     918:	81 e0       	ldi	r24, 0x01	; 1
     91a:	0e 94 30 04 	call	0x860	; 0x860 <interrupciones_TC1>
	config_Prescaler_TC1(T_mili);
     91e:	c7 01       	movw	r24, r14
     920:	b6 01       	movw	r22, r12
     922:	0e 94 a9 01 	call	0x352	; 0x352 <config_Prescaler_TC1>
	ICR1 = (uint16_t) ((T_mili/1000.0)*(F_CPU/prescalerValue_TC1)+1);
     926:	20 91 aa 01 	lds	r18, 0x01AA	; 0x8001aa <prescalerValue_TC1>
     92a:	30 91 ab 01 	lds	r19, 0x01AB	; 0x8001ab <prescalerValue_TC1+0x1>
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	0f 2e       	mov	r0, r31
     934:	81 2c       	mov	r8, r1
     936:	f4 e2       	ldi	r31, 0x24	; 36
     938:	9f 2e       	mov	r9, r31
     93a:	f4 ef       	ldi	r31, 0xF4	; 244
     93c:	af 2e       	mov	r10, r31
     93e:	b1 2c       	mov	r11, r1
     940:	f0 2d       	mov	r31, r0
     942:	c5 01       	movw	r24, r10
     944:	b4 01       	movw	r22, r8
     946:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__divmodsi4>
     94a:	ca 01       	movw	r24, r20
     94c:	b9 01       	movw	r22, r18
     94e:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__floatsisf>
     952:	2b 01       	movw	r4, r22
     954:	3c 01       	movw	r6, r24
     956:	20 e0       	ldi	r18, 0x00	; 0
     958:	30 e0       	ldi	r19, 0x00	; 0
     95a:	4a e7       	ldi	r20, 0x7A	; 122
     95c:	54 e4       	ldi	r21, 0x44	; 68
     95e:	c7 01       	movw	r24, r14
     960:	b6 01       	movw	r22, r12
     962:	0e 94 0f 0a 	call	0x141e	; 0x141e <__divsf3>
     966:	9b 01       	movw	r18, r22
     968:	ac 01       	movw	r20, r24
     96a:	c3 01       	movw	r24, r6
     96c:	b2 01       	movw	r22, r4
     96e:	0e 94 67 0b 	call	0x16ce	; 0x16ce <__mulsf3>
     972:	20 e0       	ldi	r18, 0x00	; 0
     974:	30 e0       	ldi	r19, 0x00	; 0
     976:	40 e8       	ldi	r20, 0x80	; 128
     978:	5f e3       	ldi	r21, 0x3F	; 63
     97a:	0e 94 9e 09 	call	0x133c	; 0x133c <__addsf3>
     97e:	0e 94 81 0a 	call	0x1502	; 0x1502 <__fixunssfsi>
     982:	70 93 87 00 	sts	0x0087, r23	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     986:	60 93 86 00 	sts	0x0086, r22	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	OCR1A = (uint16_t) ((aux1/1000.0)*(F_CPU/prescalerValue_TC1)+1);
     98a:	29 81       	ldd	r18, Y+1	; 0x01
     98c:	3a 81       	ldd	r19, Y+2	; 0x02
     98e:	4b 81       	ldd	r20, Y+3	; 0x03
     990:	5c 81       	ldd	r21, Y+4	; 0x04
     992:	c7 01       	movw	r24, r14
     994:	b6 01       	movw	r22, r12
     996:	0e 94 67 0b 	call	0x16ce	; 0x16ce <__mulsf3>
     99a:	20 e0       	ldi	r18, 0x00	; 0
     99c:	30 e0       	ldi	r19, 0x00	; 0
     99e:	48 ec       	ldi	r20, 0xC8	; 200
     9a0:	52 e4       	ldi	r21, 0x42	; 66
     9a2:	0e 94 0f 0a 	call	0x141e	; 0x141e <__divsf3>
     9a6:	20 e0       	ldi	r18, 0x00	; 0
     9a8:	30 e0       	ldi	r19, 0x00	; 0
     9aa:	4a e7       	ldi	r20, 0x7A	; 122
     9ac:	54 e4       	ldi	r21, 0x44	; 68
     9ae:	0e 94 0f 0a 	call	0x141e	; 0x141e <__divsf3>
     9b2:	6b 01       	movw	r12, r22
     9b4:	7c 01       	movw	r14, r24
     9b6:	20 91 aa 01 	lds	r18, 0x01AA	; 0x8001aa <prescalerValue_TC1>
     9ba:	30 91 ab 01 	lds	r19, 0x01AB	; 0x8001ab <prescalerValue_TC1+0x1>
     9be:	40 e0       	ldi	r20, 0x00	; 0
     9c0:	50 e0       	ldi	r21, 0x00	; 0
     9c2:	c5 01       	movw	r24, r10
     9c4:	b4 01       	movw	r22, r8
     9c6:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__divmodsi4>
     9ca:	ca 01       	movw	r24, r20
     9cc:	b9 01       	movw	r22, r18
     9ce:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__floatsisf>
     9d2:	9b 01       	movw	r18, r22
     9d4:	ac 01       	movw	r20, r24
     9d6:	c7 01       	movw	r24, r14
     9d8:	b6 01       	movw	r22, r12
     9da:	0e 94 67 0b 	call	0x16ce	; 0x16ce <__mulsf3>
     9de:	20 e0       	ldi	r18, 0x00	; 0
     9e0:	30 e0       	ldi	r19, 0x00	; 0
     9e2:	40 e8       	ldi	r20, 0x80	; 128
     9e4:	5f e3       	ldi	r21, 0x3F	; 63
     9e6:	0e 94 9e 09 	call	0x133c	; 0x133c <__addsf3>
     9ea:	0e 94 81 0a 	call	0x1502	; 0x1502 <__fixunssfsi>
     9ee:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     9f2:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
}
     9f6:	0f 90       	pop	r0
     9f8:	0f 90       	pop	r0
     9fa:	0f 90       	pop	r0
     9fc:	0f 90       	pop	r0
     9fe:	df 91       	pop	r29
     a00:	cf 91       	pop	r28
     a02:	ff 90       	pop	r15
     a04:	ef 90       	pop	r14
     a06:	df 90       	pop	r13
     a08:	cf 90       	pop	r12
     a0a:	bf 90       	pop	r11
     a0c:	af 90       	pop	r10
     a0e:	9f 90       	pop	r9
     a10:	8f 90       	pop	r8
     a12:	7f 90       	pop	r7
     a14:	6f 90       	pop	r6
     a16:	5f 90       	pop	r5
     a18:	4f 90       	pop	r4
     a1a:	08 95       	ret

00000a1c <mi_UART_Init>:

FILE uart_io=FDEV_SETUP_STREAM(mi_putc,mi_getc,_FDEV_SETUP_RW); //???
#define fgetc() mi_getc(&uart_io)
#define fputc(x) mi_putc(x,&uart_io)

void mi_UART_Init(uint32_t brate, int trx, int rrx){
     a1c:	0f 93       	push	r16
     a1e:	1f 93       	push	r17
     a20:	cf 93       	push	r28
     a22:	df 93       	push	r29
     a24:	8a 01       	movw	r16, r20
     a26:	e9 01       	movw	r28, r18
	UBRR0=F_CPU/16/(brate-1);
     a28:	9b 01       	movw	r18, r22
     a2a:	ac 01       	movw	r20, r24
     a2c:	21 50       	subi	r18, 0x01	; 1
     a2e:	31 09       	sbc	r19, r1
     a30:	41 09       	sbc	r20, r1
     a32:	51 09       	sbc	r21, r1
     a34:	60 e4       	ldi	r22, 0x40	; 64
     a36:	72 e4       	ldi	r23, 0x42	; 66
     a38:	8f e0       	ldi	r24, 0x0F	; 15
     a3a:	90 e0       	ldi	r25, 0x00	; 0
     a3c:	0e 94 51 0f 	call	0x1ea2	; 0x1ea2 <__udivmodsi4>
     a40:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     a44:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0A=0;
     a48:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	UCSR0B=(1<<RXEN0)|(1<<TXEN0);
     a4c:	88 e1       	ldi	r24, 0x18	; 24
     a4e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	
	UCSR0C=(1<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01);//8 BITS
     a52:	8e e0       	ldi	r24, 0x0E	; 14
     a54:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	
	
	stdout = stdin = &uart_io;
     a58:	e3 e1       	ldi	r30, 0x13	; 19
     a5a:	f2 e0       	ldi	r31, 0x02	; 2
     a5c:	8d e1       	ldi	r24, 0x1D	; 29
     a5e:	91 e0       	ldi	r25, 0x01	; 1
     a60:	91 83       	std	Z+1, r25	; 0x01
     a62:	80 83       	st	Z, r24
     a64:	93 83       	std	Z+3, r25	; 0x03
     a66:	82 83       	std	Z+2, r24	; 0x02
	
	if(trx){
     a68:	01 2b       	or	r16, r17
     a6a:	51 f0       	breq	.+20     	; 0xa80 <mi_UART_Init+0x64>
		UCSR0A &=~(1<<TXC0); //Apaga el flag de interrupcion por Transmicion
     a6c:	e0 ec       	ldi	r30, 0xC0	; 192
     a6e:	f0 e0       	ldi	r31, 0x00	; 0
     a70:	80 81       	ld	r24, Z
     a72:	8f 7b       	andi	r24, 0xBF	; 191
     a74:	80 83       	st	Z, r24
		UCSR0B |=(1<<RXCIE0); //Habilita la interrupcion TX
     a76:	e1 ec       	ldi	r30, 0xC1	; 193
     a78:	f0 e0       	ldi	r31, 0x00	; 0
     a7a:	80 81       	ld	r24, Z
     a7c:	80 68       	ori	r24, 0x80	; 128
     a7e:	80 83       	st	Z, r24
		
	}
	
	if(rrx){
     a80:	cd 2b       	or	r28, r29
     a82:	51 f0       	breq	.+20     	; 0xa98 <mi_UART_Init+0x7c>
		UCSR0A &=~(1<<RXC0); //Apaga flag de interrupcion por recepcion
     a84:	e0 ec       	ldi	r30, 0xC0	; 192
     a86:	f0 e0       	ldi	r31, 0x00	; 0
     a88:	80 81       	ld	r24, Z
     a8a:	8f 77       	andi	r24, 0x7F	; 127
     a8c:	80 83       	st	Z, r24
		UCSR0B |=(1<<RXCIE0); //Habilita la interrupcion
     a8e:	e1 ec       	ldi	r30, 0xC1	; 193
     a90:	f0 e0       	ldi	r31, 0x00	; 0
     a92:	80 81       	ld	r24, Z
     a94:	80 68       	ori	r24, 0x80	; 128
     a96:	80 83       	st	Z, r24
		
		
	}
}
     a98:	df 91       	pop	r29
     a9a:	cf 91       	pop	r28
     a9c:	1f 91       	pop	r17
     a9e:	0f 91       	pop	r16
     aa0:	08 95       	ret

00000aa2 <calcular_w>:

/*La funcion calcular_w, permite realizar el calculo de la velocidad. La estrategia para determinarla, consiste en
establecer un temporizador mediante el timer0 de 8bit y contar en ese tiempo la cantidad de flancos de subido
de los pulsos que genera el encoder. Asi, de esta forma se calculan pasos por arco de ci*/
void calcular_w(){
		vel_revmin = ((contador/(tiempo_encor*20.0))*(1/n_lineas))*60.0;
     aa2:	60 91 9e 01 	lds	r22, 0x019E	; 0x80019e <contador>
     aa6:	70 91 9f 01 	lds	r23, 0x019F	; 0x80019f <contador+0x1>
     aaa:	07 2e       	mov	r0, r23
     aac:	00 0c       	add	r0, r0
     aae:	88 0b       	sbc	r24, r24
     ab0:	99 0b       	sbc	r25, r25
     ab2:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__floatsisf>
     ab6:	26 ee       	ldi	r18, 0xE6	; 230
     ab8:	3d e1       	ldi	r19, 0x1D	; 29
     aba:	47 ea       	ldi	r20, 0xA7	; 167
     abc:	5e e3       	ldi	r21, 0x3E	; 62
     abe:	0e 94 0f 0a 	call	0x141e	; 0x141e <__divsf3>
     ac2:	20 e0       	ldi	r18, 0x00	; 0
     ac4:	30 e0       	ldi	r19, 0x00	; 0
     ac6:	40 e0       	ldi	r20, 0x00	; 0
     ac8:	5f e3       	ldi	r21, 0x3F	; 63
     aca:	0e 94 67 0b 	call	0x16ce	; 0x16ce <__mulsf3>
     ace:	20 e0       	ldi	r18, 0x00	; 0
     ad0:	30 e0       	ldi	r19, 0x00	; 0
     ad2:	40 e7       	ldi	r20, 0x70	; 112
     ad4:	52 e4       	ldi	r21, 0x42	; 66
     ad6:	0e 94 67 0b 	call	0x16ce	; 0x16ce <__mulsf3>
     ada:	60 93 a4 01 	sts	0x01A4, r22	; 0x8001a4 <vel_revmin>
     ade:	70 93 a5 01 	sts	0x01A5, r23	; 0x8001a5 <vel_revmin+0x1>
     ae2:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <vel_revmin+0x2>
     ae6:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <vel_revmin+0x3>
		contador2=0;
     aea:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <contador2+0x1>
     aee:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <contador2>
		contador=0;
     af2:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <contador+0x1>
     af6:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <contador>
		contador3++;		
     afa:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <contador3>
     afe:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <contador3+0x1>
     b02:	01 96       	adiw	r24, 0x01	; 1
     b04:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <contador3+0x1>
     b08:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <contador3>
     b0c:	08 95       	ret

00000b0e <fc_consigna>:
}

//Funcion que procesa las consignas dadas por consola
void fc_consigna(char consignat[30],char consignap[30])
{
     b0e:	0f 93       	push	r16
     b10:	1f 93       	push	r17
     b12:	cf 93       	push	r28
     b14:	df 93       	push	r29
     b16:	8b 01       	movw	r16, r22

	switch(consignat[0])
     b18:	dc 01       	movw	r26, r24
     b1a:	2c 91       	ld	r18, X
     b1c:	2a 33       	cpi	r18, 0x3A	; 58
     b1e:	09 f0       	breq	.+2      	; 0xb22 <fc_consigna+0x14>
     b20:	d8 c0       	rjmp	.+432    	; 0xcd2 <fc_consigna+0x1c4>
	{
		case ':':
		switch(consignat[1])
     b22:	11 96       	adiw	r26, 0x01	; 1
     b24:	ec 91       	ld	r30, X
     b26:	11 97       	sbiw	r26, 0x01	; 1
     b28:	4e 2f       	mov	r20, r30
     b2a:	50 e0       	ldi	r21, 0x00	; 0
     b2c:	fa 01       	movw	r30, r20
     b2e:	e4 54       	subi	r30, 0x44	; 68
     b30:	f1 09       	sbc	r31, r1
     b32:	e4 33       	cpi	r30, 0x34	; 52
     b34:	f1 05       	cpc	r31, r1
     b36:	08 f0       	brcs	.+2      	; 0xb3a <fc_consigna+0x2c>
     b38:	c6 c0       	rjmp	.+396    	; 0xcc6 <fc_consigna+0x1b8>
     b3a:	ec 01       	movw	r28, r24
     b3c:	e4 5b       	subi	r30, 0xB4	; 180
     b3e:	ff 4f       	sbci	r31, 0xFF	; 255
     b40:	0c 94 92 0f 	jmp	0x1f24	; 0x1f24 <__tablejump2__>
		{
			case 'D':
			case 'd':
			
				estado='A';
     b44:	81 e4       	ldi	r24, 0x41	; 65
     b46:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <estado>
			
				for(int c=0;c<=i;c++)
     b4a:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <i>
     b4e:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <i+0x1>
     b52:	99 23       	and	r25, r25
     b54:	e4 f0       	brlt	.+56     	; 0xb8e <fc_consigna+0x80>
     b56:	fd 01       	movw	r30, r26
     b58:	20 e0       	ldi	r18, 0x00	; 0
     b5a:	30 e0       	ldi	r19, 0x00	; 0
				{
					if(consignat[c]==',')
     b5c:	80 81       	ld	r24, Z
     b5e:	8c 32       	cpi	r24, 0x2C	; 44
     b60:	61 f4       	brne	.+24     	; 0xb7a <fc_consigna+0x6c>
					{
						consignat[c]='\0';
     b62:	10 82       	st	Z, r1
						consignap[i]='\0';
     b64:	a0 91 9c 01 	lds	r26, 0x019C	; 0x80019c <i>
     b68:	b0 91 9d 01 	lds	r27, 0x019D	; 0x80019d <i+0x1>
     b6c:	a0 0f       	add	r26, r16
     b6e:	b1 1f       	adc	r27, r17
     b70:	1c 92       	st	X, r1
						aux=c;
     b72:	30 93 9b 01 	sts	0x019B, r19	; 0x80019b <aux+0x1>
     b76:	20 93 9a 01 	sts	0x019A, r18	; 0x80019a <aux>
			case 'D':
			case 'd':
			
				estado='A';
			
				for(int c=0;c<=i;c++)
     b7a:	2f 5f       	subi	r18, 0xFF	; 255
     b7c:	3f 4f       	sbci	r19, 0xFF	; 255
     b7e:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <i>
     b82:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <i+0x1>
     b86:	31 96       	adiw	r30, 0x01	; 1
     b88:	82 17       	cp	r24, r18
     b8a:	93 07       	cpc	r25, r19
     b8c:	3c f7       	brge	.-50     	; 0xb5c <fc_consigna+0x4e>
						consignap[i]='\0';
						aux=c;
					}
				}
				
				Periodo_pwm= atof(&consignat[2]);
     b8e:	ce 01       	movw	r24, r28
     b90:	02 96       	adiw	r24, 0x02	; 2
     b92:	0e 94 cf 0f 	call	0x1f9e	; 0x1f9e <atof>
     b96:	60 93 18 01 	sts	0x0118, r22	; 0x800118 <Periodo_pwm>
     b9a:	70 93 19 01 	sts	0x0119, r23	; 0x800119 <Periodo_pwm+0x1>
     b9e:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <Periodo_pwm+0x2>
     ba2:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <Periodo_pwm+0x3>
				DUTY_CYCLE= atof(&consignap[aux+1]);
     ba6:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <aux>
     baa:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <aux+0x1>
     bae:	01 96       	adiw	r24, 0x01	; 1
     bb0:	80 0f       	add	r24, r16
     bb2:	91 1f       	adc	r25, r17
     bb4:	0e 94 cf 0f 	call	0x1f9e	; 0x1f9e <atof>
     bb8:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <DUTY_CYCLE>
     bbc:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <DUTY_CYCLE+0x1>
     bc0:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <DUTY_CYCLE+0x2>
     bc4:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <DUTY_CYCLE+0x3>
				printf("P: %f, D: %f\n",Periodo_pwm,DUTY_CYCLE);
     bc8:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <DUTY_CYCLE>
     bcc:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <DUTY_CYCLE+0x1>
     bd0:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <DUTY_CYCLE+0x2>
     bd4:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <DUTY_CYCLE+0x3>
     bd8:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <Periodo_pwm>
     bdc:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <Periodo_pwm+0x1>
     be0:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <Periodo_pwm+0x2>
     be4:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <Periodo_pwm+0x3>
     be8:	7f 93       	push	r23
     bea:	6f 93       	push	r22
     bec:	5f 93       	push	r21
     bee:	4f 93       	push	r20
     bf0:	bf 93       	push	r27
     bf2:	af 93       	push	r26
     bf4:	9f 93       	push	r25
     bf6:	8f 93       	push	r24
     bf8:	81 e4       	ldi	r24, 0x41	; 65
     bfa:	91 e0       	ldi	r25, 0x01	; 1
     bfc:	9f 93       	push	r25
     bfe:	8f 93       	push	r24
     c00:	0e 94 23 11 	call	0x2246	; 0x2246 <printf>
				PWM_14(Periodo_pwm,DUTY_CYCLE);
     c04:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <DUTY_CYCLE>
     c08:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <DUTY_CYCLE+0x1>
     c0c:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <DUTY_CYCLE+0x2>
     c10:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <DUTY_CYCLE+0x3>
     c14:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <Periodo_pwm>
     c18:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <Periodo_pwm+0x1>
     c1c:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <Periodo_pwm+0x2>
     c20:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <Periodo_pwm+0x3>
     c24:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <PWM_14>
				i=-1;
     c28:	8f ef       	ldi	r24, 0xFF	; 255
     c2a:	9f ef       	ldi	r25, 0xFF	; 255
     c2c:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <i+0x1>
     c30:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <i>
				break;
     c34:	ed b7       	in	r30, 0x3d	; 61
     c36:	fe b7       	in	r31, 0x3e	; 62
     c38:	3a 96       	adiw	r30, 0x0a	; 10
     c3a:	0f b6       	in	r0, 0x3f	; 63
     c3c:	f8 94       	cli
     c3e:	fe bf       	out	0x3e, r31	; 62
     c40:	0f be       	out	0x3f, r0	; 63
     c42:	ed bf       	out	0x3d, r30	; 61
     c44:	46 c0       	rjmp	.+140    	; 0xcd2 <fc_consigna+0x1c4>
			
			case 'w':
			case 'W':
				estado='C';
     c46:	83 e4       	ldi	r24, 0x43	; 67
     c48:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <estado>
				printf("Lazo Cerrado\n");
     c4c:	8f e4       	ldi	r24, 0x4F	; 79
     c4e:	91 e0       	ldi	r25, 0x01	; 1
     c50:	0e 94 39 11 	call	0x2272	; 0x2272 <puts>
				w_deseado= atoi(&consignat[2]);
     c54:	ce 01       	movw	r24, r28
     c56:	02 96       	adiw	r24, 0x02	; 2
     c58:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <atoi>
     c5c:	bc 01       	movw	r22, r24
     c5e:	99 0f       	add	r25, r25
     c60:	88 0b       	sbc	r24, r24
     c62:	99 0b       	sbc	r25, r25
     c64:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__floatsisf>
     c68:	60 93 14 01 	sts	0x0114, r22	; 0x800114 <w_deseado>
     c6c:	70 93 15 01 	sts	0x0115, r23	; 0x800115 <w_deseado+0x1>
     c70:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <w_deseado+0x2>
     c74:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <w_deseado+0x3>
								
				i=-1;
     c78:	8f ef       	ldi	r24, 0xFF	; 255
     c7a:	9f ef       	ldi	r25, 0xFF	; 255
     c7c:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <i+0x1>
     c80:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <i>
				break;
     c84:	26 c0       	rjmp	.+76     	; 0xcd2 <fc_consigna+0x1c4>
			case 'V':
			case 'v':
				printf("Velocidad: %f rpm\n",vel_revmin);
     c86:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <vel_revmin>
     c8a:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <vel_revmin+0x1>
     c8e:	a0 91 a6 01 	lds	r26, 0x01A6	; 0x8001a6 <vel_revmin+0x2>
     c92:	b0 91 a7 01 	lds	r27, 0x01A7	; 0x8001a7 <vel_revmin+0x3>
     c96:	bf 93       	push	r27
     c98:	af 93       	push	r26
     c9a:	9f 93       	push	r25
     c9c:	8f 93       	push	r24
     c9e:	8c e5       	ldi	r24, 0x5C	; 92
     ca0:	91 e0       	ldi	r25, 0x01	; 1
     ca2:	9f 93       	push	r25
     ca4:	8f 93       	push	r24
     ca6:	0e 94 23 11 	call	0x2246	; 0x2246 <printf>
				break;
     caa:	0f 90       	pop	r0
     cac:	0f 90       	pop	r0
     cae:	0f 90       	pop	r0
     cb0:	0f 90       	pop	r0
     cb2:	0f 90       	pop	r0
     cb4:	0f 90       	pop	r0
     cb6:	0d c0       	rjmp	.+26     	; 0xcd2 <fc_consigna+0x1c4>
			
			case 'I':
			case 'i':
				flag_corrent=1;
     cb8:	81 e0       	ldi	r24, 0x01	; 1
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <flag_corrent+0x1>
     cc0:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <flag_corrent>
				break;
     cc4:	06 c0       	rjmp	.+12     	; 0xcd2 <fc_consigna+0x1c4>
						
			default:
				i=-1;
     cc6:	8f ef       	ldi	r24, 0xFF	; 255
     cc8:	9f ef       	ldi	r25, 0xFF	; 255
     cca:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <i+0x1>
     cce:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <i>
	
				
			
		}
		default:
		i=-1;
     cd2:	8f ef       	ldi	r24, 0xFF	; 255
     cd4:	9f ef       	ldi	r25, 0xFF	; 255
     cd6:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <i+0x1>
     cda:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <i>
		break;
		
	}
	//podria devolver un mensaje de error

}
     cde:	df 91       	pop	r29
     ce0:	cf 91       	pop	r28
     ce2:	1f 91       	pop	r17
     ce4:	0f 91       	pop	r16
     ce6:	08 95       	ret

00000ce8 <__vector_2>:


//HABILITACION INTERRUPCIONES

//Contador de flancos de subida, esta configurado de tal forma.
ISR(INT1_vect){
     ce8:	1f 92       	push	r1
     cea:	0f 92       	push	r0
     cec:	0f b6       	in	r0, 0x3f	; 63
     cee:	0f 92       	push	r0
     cf0:	11 24       	eor	r1, r1
     cf2:	8f 93       	push	r24
     cf4:	9f 93       	push	r25
		
		contador++;		
     cf6:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <contador>
     cfa:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <contador+0x1>
     cfe:	01 96       	adiw	r24, 0x01	; 1
     d00:	90 93 9f 01 	sts	0x019F, r25	; 0x80019f <contador+0x1>
     d04:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <contador>
}
     d08:	9f 91       	pop	r25
     d0a:	8f 91       	pop	r24
     d0c:	0f 90       	pop	r0
     d0e:	0f be       	out	0x3f, r0	; 63
     d10:	0f 90       	pop	r0
     d12:	1f 90       	pop	r1
     d14:	18 95       	reti

00000d16 <__vector_18>:

//Servicio de interrupcion para lectura de caracter de la UART
ISR(USART_RX_vect){
     d16:	1f 92       	push	r1
     d18:	0f 92       	push	r0
     d1a:	0f b6       	in	r0, 0x3f	; 63
     d1c:	0f 92       	push	r0
     d1e:	11 24       	eor	r1, r1
     d20:	2f 93       	push	r18
     d22:	3f 93       	push	r19
     d24:	4f 93       	push	r20
     d26:	5f 93       	push	r21
     d28:	6f 93       	push	r22
     d2a:	7f 93       	push	r23
     d2c:	8f 93       	push	r24
     d2e:	9f 93       	push	r25
     d30:	af 93       	push	r26
     d32:	bf 93       	push	r27
     d34:	cf 93       	push	r28
     d36:	df 93       	push	r29
     d38:	ef 93       	push	r30
     d3a:	ff 93       	push	r31

entrada[i]=fgetc();
     d3c:	c0 91 9c 01 	lds	r28, 0x019C	; 0x80019c <i>
     d40:	d0 91 9d 01 	lds	r29, 0x019D	; 0x80019d <i+0x1>
     d44:	8d e1       	ldi	r24, 0x1D	; 29
     d46:	91 e0       	ldi	r25, 0x01	; 1
     d48:	0e 94 48 01 	call	0x290	; 0x290 <mi_getc>
     d4c:	c0 55       	subi	r28, 0x50	; 80
     d4e:	de 4f       	sbci	r29, 0xFE	; 254
     d50:	88 83       	st	Y, r24
if(entrada[i] == 8){
     d52:	e0 91 9c 01 	lds	r30, 0x019C	; 0x80019c <i>
     d56:	f0 91 9d 01 	lds	r31, 0x019D	; 0x80019d <i+0x1>
     d5a:	e0 55       	subi	r30, 0x50	; 80
     d5c:	fe 4f       	sbci	r31, 0xFE	; 254
     d5e:	80 81       	ld	r24, Z
     d60:	88 30       	cpi	r24, 0x08	; 8
     d62:	49 f4       	brne	.+18     	; 0xd76 <__vector_18+0x60>
	i--;
     d64:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <i>
     d68:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <i+0x1>
     d6c:	01 97       	sbiw	r24, 0x01	; 1
     d6e:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <i+0x1>
     d72:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <i>
}


if(entrada[i] =='\r' || entrada[i]== '\n')
     d76:	e0 91 9c 01 	lds	r30, 0x019C	; 0x80019c <i>
     d7a:	f0 91 9d 01 	lds	r31, 0x019D	; 0x80019d <i+0x1>
     d7e:	e0 55       	subi	r30, 0x50	; 80
     d80:	fe 4f       	sbci	r31, 0xFE	; 254
     d82:	80 81       	ld	r24, Z
     d84:	8d 30       	cpi	r24, 0x0D	; 13
     d86:	39 f4       	brne	.+14     	; 0xd96 <__vector_18+0x80>
{
	
	for(int u=0;u<=i;u++)
     d88:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <i>
     d8c:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <i+0x1>
     d90:	99 23       	and	r25, r25
     d92:	5c f4       	brge	.+22     	; 0xdaa <__vector_18+0x94>
     d94:	1f c0       	rjmp	.+62     	; 0xdd4 <__vector_18+0xbe>
if(entrada[i] == 8){
	i--;
}


if(entrada[i] =='\r' || entrada[i]== '\n')
     d96:	e0 91 9c 01 	lds	r30, 0x019C	; 0x80019c <i>
     d9a:	f0 91 9d 01 	lds	r31, 0x019D	; 0x80019d <i+0x1>
     d9e:	e0 55       	subi	r30, 0x50	; 80
     da0:	fe 4f       	sbci	r31, 0xFE	; 254
     da2:	80 81       	ld	r24, Z
     da4:	8a 30       	cpi	r24, 0x0A	; 10
     da6:	e1 f4       	brne	.+56     	; 0xde0 <__vector_18+0xca>
     da8:	ef cf       	rjmp	.-34     	; 0xd88 <__vector_18+0x72>
     daa:	c7 ed       	ldi	r28, 0xD7	; 215
     dac:	d1 e0       	ldi	r29, 0x01	; 1
     dae:	a5 ef       	ldi	r26, 0xF5	; 245
     db0:	b1 e0       	ldi	r27, 0x01	; 1
{
	
	for(int u=0;u<=i;u++)
     db2:	80 e0       	ldi	r24, 0x00	; 0
     db4:	90 e0       	ldi	r25, 0x00	; 0
	{
		consignat[u]=entrada[u];
     db6:	fc 01       	movw	r30, r24
     db8:	e0 55       	subi	r30, 0x50	; 80
     dba:	fe 4f       	sbci	r31, 0xFE	; 254
     dbc:	20 81       	ld	r18, Z
     dbe:	29 93       	st	Y+, r18
		consignap[u]=entrada[u];
     dc0:	20 81       	ld	r18, Z
     dc2:	2d 93       	st	X+, r18


if(entrada[i] =='\r' || entrada[i]== '\n')
{
	
	for(int u=0;u<=i;u++)
     dc4:	01 96       	adiw	r24, 0x01	; 1
     dc6:	20 91 9c 01 	lds	r18, 0x019C	; 0x80019c <i>
     dca:	30 91 9d 01 	lds	r19, 0x019D	; 0x80019d <i+0x1>
     dce:	28 17       	cp	r18, r24
     dd0:	39 07       	cpc	r19, r25
     dd2:	8c f7       	brge	.-30     	; 0xdb6 <__vector_18+0xa0>
		consignat[u]=entrada[u];
		consignap[u]=entrada[u];
	}
	
	
	fc_consigna(consignat,consignap);
     dd4:	65 ef       	ldi	r22, 0xF5	; 245
     dd6:	71 e0       	ldi	r23, 0x01	; 1
     dd8:	87 ed       	ldi	r24, 0xD7	; 215
     dda:	91 e0       	ldi	r25, 0x01	; 1
     ddc:	0e 94 87 05 	call	0xb0e	; 0xb0e <fc_consigna>
	
}
i++;
     de0:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <i>
     de4:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <i+0x1>
     de8:	01 96       	adiw	r24, 0x01	; 1
     dea:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <i+0x1>
     dee:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <i>
}
     df2:	ff 91       	pop	r31
     df4:	ef 91       	pop	r30
     df6:	df 91       	pop	r29
     df8:	cf 91       	pop	r28
     dfa:	bf 91       	pop	r27
     dfc:	af 91       	pop	r26
     dfe:	9f 91       	pop	r25
     e00:	8f 91       	pop	r24
     e02:	7f 91       	pop	r23
     e04:	6f 91       	pop	r22
     e06:	5f 91       	pop	r21
     e08:	4f 91       	pop	r20
     e0a:	3f 91       	pop	r19
     e0c:	2f 91       	pop	r18
     e0e:	0f 90       	pop	r0
     e10:	0f be       	out	0x3f, r0	; 63
     e12:	0f 90       	pop	r0
     e14:	1f 90       	pop	r1
     e16:	18 95       	reti

00000e18 <__vector_16>:


//Servicio de interrupcion de timer0 por overflow
ISR(TIMER0_OVF_vect){
     e18:	1f 92       	push	r1
     e1a:	0f 92       	push	r0
     e1c:	0f b6       	in	r0, 0x3f	; 63
     e1e:	0f 92       	push	r0
     e20:	11 24       	eor	r1, r1
     e22:	2f 93       	push	r18
     e24:	3f 93       	push	r19
     e26:	4f 93       	push	r20
     e28:	5f 93       	push	r21
     e2a:	6f 93       	push	r22
     e2c:	7f 93       	push	r23
     e2e:	8f 93       	push	r24
     e30:	9f 93       	push	r25
     e32:	af 93       	push	r26
     e34:	bf 93       	push	r27
     e36:	ef 93       	push	r30
     e38:	ff 93       	push	r31
flag_corriente=1;
     e3a:	81 e0       	ldi	r24, 0x01	; 1
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <flag_corriente+0x1>
     e42:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <flag_corriente>
contador2++;
     e46:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <contador2>
     e4a:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <contador2+0x1>
     e4e:	01 96       	adiw	r24, 0x01	; 1
     e50:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <contador2+0x1>
     e54:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <contador2>
if(contador2==20){
     e58:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <contador2>
     e5c:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <contador2+0x1>
     e60:	44 97       	sbiw	r24, 0x14	; 20
     e62:	41 f4       	brne	.+16     	; 0xe74 <__vector_16+0x5c>
	calcular_w();
     e64:	0e 94 51 05 	call	0xaa2	; 0xaa2 <calcular_w>
	//printf("v:%f\n",vel_revmin);
	flag_vel=1;
     e68:	81 e0       	ldi	r24, 0x01	; 1
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	90 93 97 01 	sts	0x0197, r25	; 0x800197 <flag_vel+0x1>
     e70:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <flag_vel>
}
}
     e74:	ff 91       	pop	r31
     e76:	ef 91       	pop	r30
     e78:	bf 91       	pop	r27
     e7a:	af 91       	pop	r26
     e7c:	9f 91       	pop	r25
     e7e:	8f 91       	pop	r24
     e80:	7f 91       	pop	r23
     e82:	6f 91       	pop	r22
     e84:	5f 91       	pop	r21
     e86:	4f 91       	pop	r20
     e88:	3f 91       	pop	r19
     e8a:	2f 91       	pop	r18
     e8c:	0f 90       	pop	r0
     e8e:	0f be       	out	0x3f, r0	; 63
     e90:	0f 90       	pop	r0
     e92:	1f 90       	pop	r1
     e94:	18 95       	reti

00000e96 <__vector_10>:





ISR(TIMER1_CAPT_vect){
     e96:	1f 92       	push	r1
     e98:	0f 92       	push	r0
     e9a:	0f b6       	in	r0, 0x3f	; 63
     e9c:	0f 92       	push	r0
     e9e:	11 24       	eor	r1, r1
	//PORTB &=~(1<<4);
	
	}
     ea0:	0f 90       	pop	r0
     ea2:	0f be       	out	0x3f, r0	; 63
     ea4:	0f 90       	pop	r0
     ea6:	1f 90       	pop	r1
     ea8:	18 95       	reti

00000eaa <__vector_11>:
	
	ISR(TIMER1_COMPA_vect){
     eaa:	1f 92       	push	r1
     eac:	0f 92       	push	r0
     eae:	0f b6       	in	r0, 0x3f	; 63
     eb0:	0f 92       	push	r0
     eb2:	11 24       	eor	r1, r1
	//PORTB |=(1<<4);
	
	}	
     eb4:	0f 90       	pop	r0
     eb6:	0f be       	out	0x3f, r0	; 63
     eb8:	0f 90       	pop	r0
     eba:	1f 90       	pop	r1
     ebc:	18 95       	reti

00000ebe <iniciarAD>:
	uint8_t disDIs;
	}tADconfig;


tADconfig pruebaADconfig; //Defino una variable del tipo tADconfig
void iniciarAD(tADconfig * ADconfig){
     ebe:	dc 01       	movw	r26, r24
	DIDR0 |= ADconfig->disDIs;
     ec0:	ee e7       	ldi	r30, 0x7E	; 126
     ec2:	f0 e0       	ldi	r31, 0x00	; 0
     ec4:	90 81       	ld	r25, Z
     ec6:	16 96       	adiw	r26, 0x06	; 6
     ec8:	8c 91       	ld	r24, X
     eca:	16 97       	sbiw	r26, 0x06	; 6
     ecc:	89 2b       	or	r24, r25
     ece:	80 83       	st	Z, r24
	ADMUX |= (ADconfig->tensionRef<<REFS0);
     ed0:	ec e7       	ldi	r30, 0x7C	; 124
     ed2:	f0 e0       	ldi	r31, 0x00	; 0
     ed4:	20 81       	ld	r18, Z
     ed6:	11 96       	adiw	r26, 0x01	; 1
     ed8:	9c 91       	ld	r25, X
     eda:	11 97       	sbiw	r26, 0x01	; 1
     edc:	30 e4       	ldi	r19, 0x40	; 64
     ede:	93 9f       	mul	r25, r19
     ee0:	c0 01       	movw	r24, r0
     ee2:	11 24       	eor	r1, r1
     ee4:	82 2b       	or	r24, r18
     ee6:	80 83       	st	Z, r24
	enerAD;
     ee8:	e4 e6       	ldi	r30, 0x64	; 100
     eea:	f0 e0       	ldi	r31, 0x00	; 0
     eec:	80 81       	ld	r24, Z
     eee:	8e 7f       	andi	r24, 0xFE	; 254
     ef0:	80 83       	st	Z, r24
	ADCSRA =0;
     ef2:	ea e7       	ldi	r30, 0x7A	; 122
     ef4:	f0 e0       	ldi	r31, 0x00	; 0
     ef6:	10 82       	st	Z, r1
	ADCSRA |= (1<<ADEN);
     ef8:	80 81       	ld	r24, Z
     efa:	80 68       	ori	r24, 0x80	; 128
     efc:	80 83       	st	Z, r24
	ADCSRA |= (ADconfig->autoTrigger<<ADATE);
     efe:	20 81       	ld	r18, Z
     f00:	14 96       	adiw	r26, 0x04	; 4
     f02:	9c 91       	ld	r25, X
     f04:	14 97       	sbiw	r26, 0x04	; 4
     f06:	30 e2       	ldi	r19, 0x20	; 32
     f08:	93 9f       	mul	r25, r19
     f0a:	c0 01       	movw	r24, r0
     f0c:	11 24       	eor	r1, r1
     f0e:	82 2b       	or	r24, r18
     f10:	80 83       	st	Z, r24
	ADCSRA |= (ADconfig->prescaler<<ADPS0);
     f12:	90 81       	ld	r25, Z
     f14:	12 96       	adiw	r26, 0x02	; 2
     f16:	8c 91       	ld	r24, X
     f18:	12 97       	sbiw	r26, 0x02	; 2
     f1a:	89 2b       	or	r24, r25
     f1c:	80 83       	st	Z, r24
	ADCSRA |= (ADconfig->interrupcion<<ADIE);
     f1e:	90 81       	ld	r25, Z
     f20:	13 96       	adiw	r26, 0x03	; 3
     f22:	8c 91       	ld	r24, X
     f24:	88 0f       	add	r24, r24
     f26:	88 0f       	add	r24, r24
     f28:	88 0f       	add	r24, r24
     f2a:	89 2b       	or	r24, r25
     f2c:	80 83       	st	Z, r24
     f2e:	08 95       	ret

00000f30 <conf_AD>:

//implementacion de la funcion confAD(), aqui se definen todos los paramentros
//para despues modificar los registros del modulo AD.

void conf_AD(){
	pruebaADconfig.prescaler = AD_pres_128;
     f30:	e0 ed       	ldi	r30, 0xD0	; 208
     f32:	f1 e0       	ldi	r31, 0x01	; 1
     f34:	87 e0       	ldi	r24, 0x07	; 7
     f36:	82 83       	std	Z+2, r24	; 0x02
	pruebaADconfig.interrupcion = intNO;
     f38:	13 82       	std	Z+3, r1	; 0x03
	pruebaADconfig.autoTrigger = atNO;
     f3a:	14 82       	std	Z+4, r1	; 0x04
	pruebaADconfig.tensionRef = Avcc;
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	81 83       	std	Z+1, r24	; 0x01
	pruebaADconfig.disDIs = 0b00111111; //Esto es para deshabilitar los pines digitales de los 6 canales analogicos
     f40:	8f e3       	ldi	r24, 0x3F	; 63
     f42:	86 83       	std	Z+6, r24	; 0x06
	
	
	iniciarAD(&pruebaADconfig);
     f44:	cf 01       	movw	r24, r30
     f46:	0e 94 5f 07 	call	0xebe	; 0xebe <iniciarAD>
     f4a:	08 95       	ret

00000f4c <ReadAD>:
}


uint16_t ReadAD(uint8_t canal){
	uint8_t aux;
	aux = ADMUX&0xF0;
     f4c:	ec e7       	ldi	r30, 0x7C	; 124
     f4e:	f0 e0       	ldi	r31, 0x00	; 0
     f50:	90 81       	ld	r25, Z
	aux |= (canal&0x0F);
     f52:	8f 70       	andi	r24, 0x0F	; 15
     f54:	90 7f       	andi	r25, 0xF0	; 240
     f56:	89 2b       	or	r24, r25
	ADMUX =aux;
     f58:	80 83       	st	Z, r24
	flagAD_OFF;
     f5a:	ea e7       	ldi	r30, 0x7A	; 122
     f5c:	f0 e0       	ldi	r31, 0x00	; 0
     f5e:	80 81       	ld	r24, Z
     f60:	8e 7f       	andi	r24, 0xFE	; 254
     f62:	80 83       	st	Z, r24
	init_ConversionAD;
     f64:	80 81       	ld	r24, Z
     f66:	80 64       	ori	r24, 0x40	; 64
     f68:	80 83       	st	Z, r24
	while(!verif_F_AD);
     f6a:	80 81       	ld	r24, Z
     f6c:	84 ff       	sbrs	r24, 4
     f6e:	fd cf       	rjmp	.-6      	; 0xf6a <ReadAD+0x1e>
	return ADC;
     f70:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     f74:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
     f78:	08 95       	ret

00000f7a <C_corriente>:

float C_corriente(uint16_t auxAD[10]){
     f7a:	fc 01       	movw	r30, r24

	float promedio =(float) ((auxAD[0]+auxAD[1]+auxAD[2]+auxAD[3]+auxAD[4]+auxAD[5]+auxAD[6]+auxAD[7]+auxAD[8]+auxAD[9])/10.0);
		
	return (float) (((promedio*5.0)/1023.0)*10.0);
     f7c:	60 81       	ld	r22, Z
     f7e:	71 81       	ldd	r23, Z+1	; 0x01
     f80:	82 81       	ldd	r24, Z+2	; 0x02
     f82:	93 81       	ldd	r25, Z+3	; 0x03
     f84:	68 0f       	add	r22, r24
     f86:	79 1f       	adc	r23, r25
     f88:	84 81       	ldd	r24, Z+4	; 0x04
     f8a:	95 81       	ldd	r25, Z+5	; 0x05
     f8c:	68 0f       	add	r22, r24
     f8e:	79 1f       	adc	r23, r25
     f90:	86 81       	ldd	r24, Z+6	; 0x06
     f92:	97 81       	ldd	r25, Z+7	; 0x07
     f94:	68 0f       	add	r22, r24
     f96:	79 1f       	adc	r23, r25
     f98:	80 85       	ldd	r24, Z+8	; 0x08
     f9a:	91 85       	ldd	r25, Z+9	; 0x09
     f9c:	68 0f       	add	r22, r24
     f9e:	79 1f       	adc	r23, r25
     fa0:	82 85       	ldd	r24, Z+10	; 0x0a
     fa2:	93 85       	ldd	r25, Z+11	; 0x0b
     fa4:	68 0f       	add	r22, r24
     fa6:	79 1f       	adc	r23, r25
     fa8:	84 85       	ldd	r24, Z+12	; 0x0c
     faa:	95 85       	ldd	r25, Z+13	; 0x0d
     fac:	68 0f       	add	r22, r24
     fae:	79 1f       	adc	r23, r25
     fb0:	86 85       	ldd	r24, Z+14	; 0x0e
     fb2:	97 85       	ldd	r25, Z+15	; 0x0f
     fb4:	68 0f       	add	r22, r24
     fb6:	79 1f       	adc	r23, r25
     fb8:	80 89       	ldd	r24, Z+16	; 0x10
     fba:	91 89       	ldd	r25, Z+17	; 0x11
     fbc:	68 0f       	add	r22, r24
     fbe:	79 1f       	adc	r23, r25
     fc0:	82 89       	ldd	r24, Z+18	; 0x12
     fc2:	93 89       	ldd	r25, Z+19	; 0x13
     fc4:	68 0f       	add	r22, r24
     fc6:	79 1f       	adc	r23, r25
     fc8:	80 e0       	ldi	r24, 0x00	; 0
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	0e 94 b0 0a 	call	0x1560	; 0x1560 <__floatunsisf>
     fd0:	20 e0       	ldi	r18, 0x00	; 0
     fd2:	30 e0       	ldi	r19, 0x00	; 0
     fd4:	40 e2       	ldi	r20, 0x20	; 32
     fd6:	51 e4       	ldi	r21, 0x41	; 65
     fd8:	0e 94 0f 0a 	call	0x141e	; 0x141e <__divsf3>
     fdc:	20 e0       	ldi	r18, 0x00	; 0
     fde:	30 e0       	ldi	r19, 0x00	; 0
     fe0:	40 ea       	ldi	r20, 0xA0	; 160
     fe2:	50 e4       	ldi	r21, 0x40	; 64
     fe4:	0e 94 67 0b 	call	0x16ce	; 0x16ce <__mulsf3>
     fe8:	20 e0       	ldi	r18, 0x00	; 0
     fea:	30 ec       	ldi	r19, 0xC0	; 192
     fec:	4f e7       	ldi	r20, 0x7F	; 127
     fee:	54 e4       	ldi	r21, 0x44	; 68
     ff0:	0e 94 0f 0a 	call	0x141e	; 0x141e <__divsf3>
     ff4:	20 e0       	ldi	r18, 0x00	; 0
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	40 e2       	ldi	r20, 0x20	; 32
     ffa:	51 e4       	ldi	r21, 0x41	; 65
     ffc:	0e 94 67 0b 	call	0x16ce	; 0x16ce <__mulsf3>
		
}
    1000:	08 95       	ret

00001002 <main>:
float Ei=0;
float Uf=0;
float Kpi=0.01;

int main(void)
{	
    1002:	cf 93       	push	r28
    1004:	df 93       	push	r29
    1006:	cd b7       	in	r28, 0x3d	; 61
    1008:	de b7       	in	r29, 0x3e	; 62
    100a:	68 97       	sbiw	r28, 0x18	; 24
    100c:	0f b6       	in	r0, 0x3f	; 63
    100e:	f8 94       	cli
    1010:	de bf       	out	0x3e, r29	; 62
    1012:	0f be       	out	0x3f, r0	; 63
    1014:	cd bf       	out	0x3d, r28	; 61
	DDRD &=~(1<<DDD3);
    1016:	53 98       	cbi	0x0a, 3	; 10
	DDRB|=(1<<DDB4);
    1018:	24 9a       	sbi	0x04, 4	; 4
	DDRB|=(1<<DDB1);
    101a:	21 9a       	sbi	0x04, 1	; 4
	PORTB|=(1<<4);
    101c:	2c 9a       	sbi	0x05, 4	; 5
	PORTB|=(1<<DDB1);
    101e:	29 9a       	sbi	0x05, 1	; 5
	
	mi_UART_Init(BRATE,1,0);
    1020:	20 e0       	ldi	r18, 0x00	; 0
    1022:	30 e0       	ldi	r19, 0x00	; 0
    1024:	41 e0       	ldi	r20, 0x01	; 1
    1026:	50 e0       	ldi	r21, 0x00	; 0
    1028:	60 e8       	ldi	r22, 0x80	; 128
    102a:	75 e2       	ldi	r23, 0x25	; 37
    102c:	80 e0       	ldi	r24, 0x00	; 0
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	0e 94 0e 05 	call	0xa1c	; 0xa1c <mi_UART_Init>
	conf_AD();
    1034:	0e 94 98 07 	call	0xf30	; 0xf30 <conf_AD>
	uint16_t auxAD[10]={0,0,0,0,0,0,0,0,0,0};
    1038:	fe 01       	movw	r30, r28
    103a:	31 96       	adiw	r30, 0x01	; 1
    103c:	84 e1       	ldi	r24, 0x14	; 20
    103e:	df 01       	movw	r26, r30
    1040:	1d 92       	st	X+, r1
    1042:	8a 95       	dec	r24
    1044:	e9 f7       	brne	.-6      	; 0x1040 <main+0x3e>
	
	int cont_vect=0;

	volatile float CORRIENTE;
	configuracion_interrupcion_Externa(0,0,1,2);
    1046:	22 e0       	ldi	r18, 0x02	; 2
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	41 e0       	ldi	r20, 0x01	; 1
    104c:	50 e0       	ldi	r21, 0x00	; 0
    104e:	60 e0       	ldi	r22, 0x00	; 0
    1050:	70 e0       	ldi	r23, 0x00	; 0
    1052:	80 e0       	ldi	r24, 0x00	; 0
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	0e 94 51 01 	call	0x2a2	; 0x2a2 <configuracion_interrupcion_Externa>
	interrupciones_TC0(0,0,1);	
    105a:	41 e0       	ldi	r20, 0x01	; 1
    105c:	60 e0       	ldi	r22, 0x00	; 0
    105e:	80 e0       	ldi	r24, 0x00	; 0
    1060:	0e 94 51 04 	call	0x8a2	; 0x8a2 <interrupciones_TC0>
	conf_modo_TC0(0);
    1064:	80 e0       	ldi	r24, 0x00	; 0
    1066:	0e 94 9f 03 	call	0x73e	; 0x73e <conf_modo_TC0>
	config_Prescaler_TC0(1000.0);
    106a:	60 e0       	ldi	r22, 0x00	; 0
    106c:	70 e0       	ldi	r23, 0x00	; 0
    106e:	8a e7       	ldi	r24, 0x7A	; 122
    1070:	94 e4       	ldi	r25, 0x44	; 68
    1072:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <config_Prescaler_TC0>

	sei();
    1076:	78 94       	sei
	
	mi_UART_Init(BRATE,1,0);
	conf_AD();
	uint16_t auxAD[10]={0,0,0,0,0,0,0,0,0,0};
	
	int cont_vect=0;
    1078:	00 e0       	ldi	r16, 0x00	; 0
    107a:	10 e0       	ldi	r17, 0x00	; 0
			cont_vect++;
			flag_corriente=0;			
		}
		
		if(flag_corrent==1){
			printf("Corriente: %fA\n",CORRIENTE);
    107c:	0f 2e       	mov	r0, r31
    107e:	ff e6       	ldi	r31, 0x6F	; 111
    1080:	2f 2e       	mov	r2, r31
    1082:	f1 e0       	ldi	r31, 0x01	; 1
    1084:	3f 2e       	mov	r3, r31
    1086:	f0 2d       	mov	r31, r0
				Uf = Kpi*Ei;
				//printf("Vel:  %f\n",vel_revmin);
				
				if ((DUTY_CYCLE+Uf)>=97)
				{
					DUTY_CYCLE=99;
    1088:	0f 2e       	mov	r0, r31
    108a:	41 2c       	mov	r4, r1
    108c:	51 2c       	mov	r5, r1
    108e:	f6 ec       	ldi	r31, 0xC6	; 198
    1090:	6f 2e       	mov	r6, r31
    1092:	f2 e4       	ldi	r31, 0x42	; 66
    1094:	7f 2e       	mov	r7, r31
    1096:	f0 2d       	mov	r31, r0
	sei();

while (1) 
    {
		
		if(flag_corriente){
    1098:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <flag_corriente>
    109c:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <flag_corriente+0x1>
    10a0:	89 2b       	or	r24, r25
    10a2:	01 f1       	breq	.+64     	; 0x10e4 <main+0xe2>
			auxAD[cont_vect] = ReadAD(0);
    10a4:	80 e0       	ldi	r24, 0x00	; 0
    10a6:	0e 94 a6 07 	call	0xf4c	; 0xf4c <ReadAD>
    10aa:	f8 01       	movw	r30, r16
    10ac:	ee 0f       	add	r30, r30
    10ae:	ff 1f       	adc	r31, r31
    10b0:	21 e0       	ldi	r18, 0x01	; 1
    10b2:	30 e0       	ldi	r19, 0x00	; 0
    10b4:	2c 0f       	add	r18, r28
    10b6:	3d 1f       	adc	r19, r29
    10b8:	e2 0f       	add	r30, r18
    10ba:	f3 1f       	adc	r31, r19
    10bc:	91 83       	std	Z+1, r25	; 0x01
    10be:	80 83       	st	Z, r24
			if(cont_vect==9){
    10c0:	09 30       	cpi	r16, 0x09	; 9
    10c2:	11 05       	cpc	r17, r1
    10c4:	49 f4       	brne	.+18     	; 0x10d8 <main+0xd6>
				CORRIENTE = C_corriente(auxAD);
    10c6:	c9 01       	movw	r24, r18
    10c8:	0e 94 bd 07 	call	0xf7a	; 0xf7a <C_corriente>
    10cc:	6d 8b       	std	Y+21, r22	; 0x15
    10ce:	7e 8b       	std	Y+22, r23	; 0x16
    10d0:	8f 8b       	std	Y+23, r24	; 0x17
    10d2:	98 8f       	std	Y+24, r25	; 0x18
				//printf("%f A\n",CORRIENTE);
				cont_vect = -1;
    10d4:	0f ef       	ldi	r16, 0xFF	; 255
    10d6:	1f ef       	ldi	r17, 0xFF	; 255
			}		
			cont_vect++;
    10d8:	0f 5f       	subi	r16, 0xFF	; 255
    10da:	1f 4f       	sbci	r17, 0xFF	; 255
			flag_corriente=0;			
    10dc:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <flag_corriente+0x1>
    10e0:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <flag_corriente>
		}
		
		if(flag_corrent==1){
    10e4:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <flag_corrent>
    10e8:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <flag_corrent+0x1>
    10ec:	01 97       	sbiw	r24, 0x01	; 1
    10ee:	b1 f4       	brne	.+44     	; 0x111c <main+0x11a>
			printf("Corriente: %fA\n",CORRIENTE);
    10f0:	8d 89       	ldd	r24, Y+21	; 0x15
    10f2:	9e 89       	ldd	r25, Y+22	; 0x16
    10f4:	af 89       	ldd	r26, Y+23	; 0x17
    10f6:	b8 8d       	ldd	r27, Y+24	; 0x18
    10f8:	bf 93       	push	r27
    10fa:	af 93       	push	r26
    10fc:	9f 93       	push	r25
    10fe:	8f 93       	push	r24
    1100:	3f 92       	push	r3
    1102:	2f 92       	push	r2
    1104:	0e 94 23 11 	call	0x2246	; 0x2246 <printf>
			flag_corrent=0;
    1108:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <flag_corrent+0x1>
    110c:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <flag_corrent>
    1110:	0f 90       	pop	r0
    1112:	0f 90       	pop	r0
    1114:	0f 90       	pop	r0
    1116:	0f 90       	pop	r0
    1118:	0f 90       	pop	r0
    111a:	0f 90       	pop	r0
		}

		if (estado=='C')
    111c:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <estado>
    1120:	83 34       	cpi	r24, 0x43	; 67
    1122:	09 f0       	breq	.+2      	; 0x1126 <main+0x124>
    1124:	b9 cf       	rjmp	.-142    	; 0x1098 <main+0x96>
			{	
				if (flag_vel)
    1126:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <flag_vel>
    112a:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <flag_vel+0x1>
    112e:	89 2b       	or	r24, r25
    1130:	09 f4       	brne	.+2      	; 0x1134 <main+0x132>
    1132:	b2 cf       	rjmp	.-156    	; 0x1098 <main+0x96>
				{
				
				err=(w_deseado-vel_revmin);
    1134:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <w_deseado>
    1138:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <w_deseado+0x1>
    113c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <w_deseado+0x2>
    1140:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <w_deseado+0x3>
    1144:	20 91 a4 01 	lds	r18, 0x01A4	; 0x8001a4 <vel_revmin>
    1148:	30 91 a5 01 	lds	r19, 0x01A5	; 0x8001a5 <vel_revmin+0x1>
    114c:	40 91 a6 01 	lds	r20, 0x01A6	; 0x8001a6 <vel_revmin+0x2>
    1150:	50 91 a7 01 	lds	r21, 0x01A7	; 0x8001a7 <vel_revmin+0x3>
    1154:	0e 94 9d 09 	call	0x133a	; 0x133a <__subsf3>
    1158:	60 93 90 01 	sts	0x0190, r22	; 0x800190 <err>
    115c:	70 93 91 01 	sts	0x0191, r23	; 0x800191 <err+0x1>
    1160:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <err+0x2>
    1164:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <err+0x3>
				//printf("%f\n",err);
				//printf("vel, %f\n",vel_revmin);
				I=I+err;
    1168:	60 91 8c 01 	lds	r22, 0x018C	; 0x80018c <I>
    116c:	70 91 8d 01 	lds	r23, 0x018D	; 0x80018d <I+0x1>
    1170:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <I+0x2>
    1174:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <I+0x3>
    1178:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <err>
    117c:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <err+0x1>
    1180:	40 91 92 01 	lds	r20, 0x0192	; 0x800192 <err+0x2>
    1184:	50 91 93 01 	lds	r21, 0x0193	; 0x800193 <err+0x3>
    1188:	0e 94 9e 09 	call	0x133c	; 0x133c <__addsf3>
    118c:	60 93 8c 01 	sts	0x018C, r22	; 0x80018c <I>
    1190:	70 93 8d 01 	sts	0x018D, r23	; 0x80018d <I+0x1>
    1194:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <I+0x2>
    1198:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <I+0x3>
				U=kp*err+ki*I;
    119c:	60 91 90 01 	lds	r22, 0x0190	; 0x800190 <err>
    11a0:	70 91 91 01 	lds	r23, 0x0191	; 0x800191 <err+0x1>
    11a4:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <err+0x2>
    11a8:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <err+0x3>
    11ac:	80 90 8c 01 	lds	r8, 0x018C	; 0x80018c <I>
    11b0:	90 90 8d 01 	lds	r9, 0x018D	; 0x80018d <I+0x1>
    11b4:	a0 90 8e 01 	lds	r10, 0x018E	; 0x80018e <I+0x2>
    11b8:	b0 90 8f 01 	lds	r11, 0x018F	; 0x80018f <I+0x3>
    11bc:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <kp>
    11c0:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <kp+0x1>
    11c4:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <kp+0x2>
    11c8:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <kp+0x3>
    11cc:	0e 94 67 0b 	call	0x16ce	; 0x16ce <__mulsf3>
    11d0:	6b 01       	movw	r12, r22
    11d2:	7c 01       	movw	r14, r24
    11d4:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <ki>
    11d8:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <ki+0x1>
    11dc:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <ki+0x2>
    11e0:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <ki+0x3>
    11e4:	c5 01       	movw	r24, r10
    11e6:	b4 01       	movw	r22, r8
    11e8:	0e 94 67 0b 	call	0x16ce	; 0x16ce <__mulsf3>
    11ec:	9b 01       	movw	r18, r22
    11ee:	ac 01       	movw	r20, r24
    11f0:	c7 01       	movw	r24, r14
    11f2:	b6 01       	movw	r22, r12
    11f4:	0e 94 9e 09 	call	0x133c	; 0x133c <__addsf3>
    11f8:	60 93 88 01 	sts	0x0188, r22	; 0x800188 <U>
    11fc:	70 93 89 01 	sts	0x0189, r23	; 0x800189 <U+0x1>
    1200:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <U+0x2>
    1204:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <U+0x3>
				Ei = (float) ((U/KT) - CORRIENTE);
    1208:	60 91 88 01 	lds	r22, 0x0188	; 0x800188 <U>
    120c:	70 91 89 01 	lds	r23, 0x0189	; 0x800189 <U+0x1>
    1210:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <U+0x2>
    1214:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <U+0x3>
    1218:	cd 88       	ldd	r12, Y+21	; 0x15
    121a:	de 88       	ldd	r13, Y+22	; 0x16
    121c:	ef 88       	ldd	r14, Y+23	; 0x17
    121e:	f8 8c       	ldd	r15, Y+24	; 0x18
    1220:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <KT>
    1224:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <KT+0x1>
    1228:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <KT+0x2>
    122c:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <KT+0x3>
    1230:	0e 94 0f 0a 	call	0x141e	; 0x141e <__divsf3>
    1234:	a7 01       	movw	r20, r14
    1236:	96 01       	movw	r18, r12
    1238:	0e 94 9d 09 	call	0x133a	; 0x133a <__subsf3>
    123c:	60 93 84 01 	sts	0x0184, r22	; 0x800184 <Ei>
    1240:	70 93 85 01 	sts	0x0185, r23	; 0x800185 <Ei+0x1>
    1244:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <Ei+0x2>
    1248:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <Ei+0x3>
				//printf("%f\n",CORRIENTE);
				Uf = Kpi*Ei;
    124c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <Kpi>
    1250:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <Kpi+0x1>
    1254:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <Kpi+0x2>
    1258:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <Kpi+0x3>
    125c:	0e 94 67 0b 	call	0x16ce	; 0x16ce <__mulsf3>
    1260:	6b 01       	movw	r12, r22
    1262:	7c 01       	movw	r14, r24
    1264:	60 93 80 01 	sts	0x0180, r22	; 0x800180 <__data_end>
    1268:	70 93 81 01 	sts	0x0181, r23	; 0x800181 <__data_end+0x1>
    126c:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <__data_end+0x2>
    1270:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <__data_end+0x3>
				//printf("Vel:  %f\n",vel_revmin);
				
				if ((DUTY_CYCLE+Uf)>=97)
    1274:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <DUTY_CYCLE>
    1278:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <DUTY_CYCLE+0x1>
    127c:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <DUTY_CYCLE+0x2>
    1280:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <DUTY_CYCLE+0x3>
    1284:	0e 94 9e 09 	call	0x133c	; 0x133c <__addsf3>
    1288:	20 e0       	ldi	r18, 0x00	; 0
    128a:	30 e0       	ldi	r19, 0x00	; 0
    128c:	42 ec       	ldi	r20, 0xC2	; 194
    128e:	52 e4       	ldi	r21, 0x42	; 66
    1290:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__gesf2>
    1294:	88 23       	and	r24, r24
    1296:	4c f0       	brlt	.+18     	; 0x12aa <main+0x2a8>
				{
					DUTY_CYCLE=99;
    1298:	40 92 10 01 	sts	0x0110, r4	; 0x800110 <DUTY_CYCLE>
    129c:	50 92 11 01 	sts	0x0111, r5	; 0x800111 <DUTY_CYCLE+0x1>
    12a0:	60 92 12 01 	sts	0x0112, r6	; 0x800112 <DUTY_CYCLE+0x2>
    12a4:	70 92 13 01 	sts	0x0113, r7	; 0x800113 <DUTY_CYCLE+0x3>
    12a8:	35 c0       	rjmp	.+106    	; 0x1314 <main+0x312>
				}
				else if ((DUTY_CYCLE+Uf)<=3)
    12aa:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <DUTY_CYCLE>
    12ae:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <DUTY_CYCLE+0x1>
    12b2:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <DUTY_CYCLE+0x2>
    12b6:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <DUTY_CYCLE+0x3>
    12ba:	c7 01       	movw	r24, r14
    12bc:	b6 01       	movw	r22, r12
    12be:	0e 94 9e 09 	call	0x133c	; 0x133c <__addsf3>
    12c2:	20 e0       	ldi	r18, 0x00	; 0
    12c4:	30 e0       	ldi	r19, 0x00	; 0
    12c6:	40 e4       	ldi	r20, 0x40	; 64
    12c8:	50 e4       	ldi	r21, 0x40	; 64
    12ca:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__cmpsf2>
    12ce:	18 16       	cp	r1, r24
    12d0:	6c f0       	brlt	.+26     	; 0x12ec <main+0x2ea>
				{
					DUTY_CYCLE=2;
    12d2:	80 e0       	ldi	r24, 0x00	; 0
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	a0 e0       	ldi	r26, 0x00	; 0
    12d8:	b0 e4       	ldi	r27, 0x40	; 64
    12da:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <DUTY_CYCLE>
    12de:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <DUTY_CYCLE+0x1>
    12e2:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <DUTY_CYCLE+0x2>
    12e6:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <DUTY_CYCLE+0x3>
    12ea:	14 c0       	rjmp	.+40     	; 0x1314 <main+0x312>
				}
				else
				{
					DUTY_CYCLE=DUTY_CYCLE+Uf;
    12ec:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <DUTY_CYCLE>
    12f0:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <DUTY_CYCLE+0x1>
    12f4:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <DUTY_CYCLE+0x2>
    12f8:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <DUTY_CYCLE+0x3>
    12fc:	c7 01       	movw	r24, r14
    12fe:	b6 01       	movw	r22, r12
    1300:	0e 94 9e 09 	call	0x133c	; 0x133c <__addsf3>
    1304:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <DUTY_CYCLE>
    1308:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <DUTY_CYCLE+0x1>
    130c:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <DUTY_CYCLE+0x2>
    1310:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <DUTY_CYCLE+0x3>
				}
				
				
				PWM_14(1,DUTY_CYCLE);
    1314:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <DUTY_CYCLE>
    1318:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <DUTY_CYCLE+0x1>
    131c:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <DUTY_CYCLE+0x2>
    1320:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <DUTY_CYCLE+0x3>
    1324:	60 e0       	ldi	r22, 0x00	; 0
    1326:	70 e0       	ldi	r23, 0x00	; 0
    1328:	80 e8       	ldi	r24, 0x80	; 128
    132a:	9f e3       	ldi	r25, 0x3F	; 63
    132c:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <PWM_14>

				flag_vel=0;
    1330:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <flag_vel+0x1>
    1334:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <flag_vel>
    1338:	af ce       	rjmp	.-674    	; 0x1098 <main+0x96>

0000133a <__subsf3>:
    133a:	50 58       	subi	r21, 0x80	; 128

0000133c <__addsf3>:
    133c:	bb 27       	eor	r27, r27
    133e:	aa 27       	eor	r26, r26
    1340:	0e 94 b5 09 	call	0x136a	; 0x136a <__addsf3x>
    1344:	0c 94 28 0b 	jmp	0x1650	; 0x1650 <__fp_round>
    1348:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__fp_pscA>
    134c:	38 f0       	brcs	.+14     	; 0x135c <__addsf3+0x20>
    134e:	0e 94 21 0b 	call	0x1642	; 0x1642 <__fp_pscB>
    1352:	20 f0       	brcs	.+8      	; 0x135c <__addsf3+0x20>
    1354:	39 f4       	brne	.+14     	; 0x1364 <__addsf3+0x28>
    1356:	9f 3f       	cpi	r25, 0xFF	; 255
    1358:	19 f4       	brne	.+6      	; 0x1360 <__addsf3+0x24>
    135a:	26 f4       	brtc	.+8      	; 0x1364 <__addsf3+0x28>
    135c:	0c 94 17 0b 	jmp	0x162e	; 0x162e <__fp_nan>
    1360:	0e f4       	brtc	.+2      	; 0x1364 <__addsf3+0x28>
    1362:	e0 95       	com	r30
    1364:	e7 fb       	bst	r30, 7
    1366:	0c 94 11 0b 	jmp	0x1622	; 0x1622 <__fp_inf>

0000136a <__addsf3x>:
    136a:	e9 2f       	mov	r30, r25
    136c:	0e 94 39 0b 	call	0x1672	; 0x1672 <__fp_split3>
    1370:	58 f3       	brcs	.-42     	; 0x1348 <__addsf3+0xc>
    1372:	ba 17       	cp	r27, r26
    1374:	62 07       	cpc	r22, r18
    1376:	73 07       	cpc	r23, r19
    1378:	84 07       	cpc	r24, r20
    137a:	95 07       	cpc	r25, r21
    137c:	20 f0       	brcs	.+8      	; 0x1386 <__addsf3x+0x1c>
    137e:	79 f4       	brne	.+30     	; 0x139e <__addsf3x+0x34>
    1380:	a6 f5       	brtc	.+104    	; 0x13ea <__addsf3x+0x80>
    1382:	0c 94 5b 0b 	jmp	0x16b6	; 0x16b6 <__fp_zero>
    1386:	0e f4       	brtc	.+2      	; 0x138a <__addsf3x+0x20>
    1388:	e0 95       	com	r30
    138a:	0b 2e       	mov	r0, r27
    138c:	ba 2f       	mov	r27, r26
    138e:	a0 2d       	mov	r26, r0
    1390:	0b 01       	movw	r0, r22
    1392:	b9 01       	movw	r22, r18
    1394:	90 01       	movw	r18, r0
    1396:	0c 01       	movw	r0, r24
    1398:	ca 01       	movw	r24, r20
    139a:	a0 01       	movw	r20, r0
    139c:	11 24       	eor	r1, r1
    139e:	ff 27       	eor	r31, r31
    13a0:	59 1b       	sub	r21, r25
    13a2:	99 f0       	breq	.+38     	; 0x13ca <__addsf3x+0x60>
    13a4:	59 3f       	cpi	r21, 0xF9	; 249
    13a6:	50 f4       	brcc	.+20     	; 0x13bc <__addsf3x+0x52>
    13a8:	50 3e       	cpi	r21, 0xE0	; 224
    13aa:	68 f1       	brcs	.+90     	; 0x1406 <__addsf3x+0x9c>
    13ac:	1a 16       	cp	r1, r26
    13ae:	f0 40       	sbci	r31, 0x00	; 0
    13b0:	a2 2f       	mov	r26, r18
    13b2:	23 2f       	mov	r18, r19
    13b4:	34 2f       	mov	r19, r20
    13b6:	44 27       	eor	r20, r20
    13b8:	58 5f       	subi	r21, 0xF8	; 248
    13ba:	f3 cf       	rjmp	.-26     	; 0x13a2 <__addsf3x+0x38>
    13bc:	46 95       	lsr	r20
    13be:	37 95       	ror	r19
    13c0:	27 95       	ror	r18
    13c2:	a7 95       	ror	r26
    13c4:	f0 40       	sbci	r31, 0x00	; 0
    13c6:	53 95       	inc	r21
    13c8:	c9 f7       	brne	.-14     	; 0x13bc <__addsf3x+0x52>
    13ca:	7e f4       	brtc	.+30     	; 0x13ea <__addsf3x+0x80>
    13cc:	1f 16       	cp	r1, r31
    13ce:	ba 0b       	sbc	r27, r26
    13d0:	62 0b       	sbc	r22, r18
    13d2:	73 0b       	sbc	r23, r19
    13d4:	84 0b       	sbc	r24, r20
    13d6:	ba f0       	brmi	.+46     	; 0x1406 <__addsf3x+0x9c>
    13d8:	91 50       	subi	r25, 0x01	; 1
    13da:	a1 f0       	breq	.+40     	; 0x1404 <__addsf3x+0x9a>
    13dc:	ff 0f       	add	r31, r31
    13de:	bb 1f       	adc	r27, r27
    13e0:	66 1f       	adc	r22, r22
    13e2:	77 1f       	adc	r23, r23
    13e4:	88 1f       	adc	r24, r24
    13e6:	c2 f7       	brpl	.-16     	; 0x13d8 <__addsf3x+0x6e>
    13e8:	0e c0       	rjmp	.+28     	; 0x1406 <__addsf3x+0x9c>
    13ea:	ba 0f       	add	r27, r26
    13ec:	62 1f       	adc	r22, r18
    13ee:	73 1f       	adc	r23, r19
    13f0:	84 1f       	adc	r24, r20
    13f2:	48 f4       	brcc	.+18     	; 0x1406 <__addsf3x+0x9c>
    13f4:	87 95       	ror	r24
    13f6:	77 95       	ror	r23
    13f8:	67 95       	ror	r22
    13fa:	b7 95       	ror	r27
    13fc:	f7 95       	ror	r31
    13fe:	9e 3f       	cpi	r25, 0xFE	; 254
    1400:	08 f0       	brcs	.+2      	; 0x1404 <__addsf3x+0x9a>
    1402:	b0 cf       	rjmp	.-160    	; 0x1364 <__addsf3+0x28>
    1404:	93 95       	inc	r25
    1406:	88 0f       	add	r24, r24
    1408:	08 f0       	brcs	.+2      	; 0x140c <__addsf3x+0xa2>
    140a:	99 27       	eor	r25, r25
    140c:	ee 0f       	add	r30, r30
    140e:	97 95       	ror	r25
    1410:	87 95       	ror	r24
    1412:	08 95       	ret

00001414 <__cmpsf2>:
    1414:	0e 94 ed 0a 	call	0x15da	; 0x15da <__fp_cmp>
    1418:	08 f4       	brcc	.+2      	; 0x141c <__cmpsf2+0x8>
    141a:	81 e0       	ldi	r24, 0x01	; 1
    141c:	08 95       	ret

0000141e <__divsf3>:
    141e:	0e 94 23 0a 	call	0x1446	; 0x1446 <__divsf3x>
    1422:	0c 94 28 0b 	jmp	0x1650	; 0x1650 <__fp_round>
    1426:	0e 94 21 0b 	call	0x1642	; 0x1642 <__fp_pscB>
    142a:	58 f0       	brcs	.+22     	; 0x1442 <__divsf3+0x24>
    142c:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__fp_pscA>
    1430:	40 f0       	brcs	.+16     	; 0x1442 <__divsf3+0x24>
    1432:	29 f4       	brne	.+10     	; 0x143e <__divsf3+0x20>
    1434:	5f 3f       	cpi	r21, 0xFF	; 255
    1436:	29 f0       	breq	.+10     	; 0x1442 <__divsf3+0x24>
    1438:	0c 94 11 0b 	jmp	0x1622	; 0x1622 <__fp_inf>
    143c:	51 11       	cpse	r21, r1
    143e:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__fp_szero>
    1442:	0c 94 17 0b 	jmp	0x162e	; 0x162e <__fp_nan>

00001446 <__divsf3x>:
    1446:	0e 94 39 0b 	call	0x1672	; 0x1672 <__fp_split3>
    144a:	68 f3       	brcs	.-38     	; 0x1426 <__divsf3+0x8>

0000144c <__divsf3_pse>:
    144c:	99 23       	and	r25, r25
    144e:	b1 f3       	breq	.-20     	; 0x143c <__divsf3+0x1e>
    1450:	55 23       	and	r21, r21
    1452:	91 f3       	breq	.-28     	; 0x1438 <__divsf3+0x1a>
    1454:	95 1b       	sub	r25, r21
    1456:	55 0b       	sbc	r21, r21
    1458:	bb 27       	eor	r27, r27
    145a:	aa 27       	eor	r26, r26
    145c:	62 17       	cp	r22, r18
    145e:	73 07       	cpc	r23, r19
    1460:	84 07       	cpc	r24, r20
    1462:	38 f0       	brcs	.+14     	; 0x1472 <__divsf3_pse+0x26>
    1464:	9f 5f       	subi	r25, 0xFF	; 255
    1466:	5f 4f       	sbci	r21, 0xFF	; 255
    1468:	22 0f       	add	r18, r18
    146a:	33 1f       	adc	r19, r19
    146c:	44 1f       	adc	r20, r20
    146e:	aa 1f       	adc	r26, r26
    1470:	a9 f3       	breq	.-22     	; 0x145c <__divsf3_pse+0x10>
    1472:	35 d0       	rcall	.+106    	; 0x14de <__divsf3_pse+0x92>
    1474:	0e 2e       	mov	r0, r30
    1476:	3a f0       	brmi	.+14     	; 0x1486 <__divsf3_pse+0x3a>
    1478:	e0 e8       	ldi	r30, 0x80	; 128
    147a:	32 d0       	rcall	.+100    	; 0x14e0 <__divsf3_pse+0x94>
    147c:	91 50       	subi	r25, 0x01	; 1
    147e:	50 40       	sbci	r21, 0x00	; 0
    1480:	e6 95       	lsr	r30
    1482:	00 1c       	adc	r0, r0
    1484:	ca f7       	brpl	.-14     	; 0x1478 <__divsf3_pse+0x2c>
    1486:	2b d0       	rcall	.+86     	; 0x14de <__divsf3_pse+0x92>
    1488:	fe 2f       	mov	r31, r30
    148a:	29 d0       	rcall	.+82     	; 0x14de <__divsf3_pse+0x92>
    148c:	66 0f       	add	r22, r22
    148e:	77 1f       	adc	r23, r23
    1490:	88 1f       	adc	r24, r24
    1492:	bb 1f       	adc	r27, r27
    1494:	26 17       	cp	r18, r22
    1496:	37 07       	cpc	r19, r23
    1498:	48 07       	cpc	r20, r24
    149a:	ab 07       	cpc	r26, r27
    149c:	b0 e8       	ldi	r27, 0x80	; 128
    149e:	09 f0       	breq	.+2      	; 0x14a2 <__divsf3_pse+0x56>
    14a0:	bb 0b       	sbc	r27, r27
    14a2:	80 2d       	mov	r24, r0
    14a4:	bf 01       	movw	r22, r30
    14a6:	ff 27       	eor	r31, r31
    14a8:	93 58       	subi	r25, 0x83	; 131
    14aa:	5f 4f       	sbci	r21, 0xFF	; 255
    14ac:	3a f0       	brmi	.+14     	; 0x14bc <__divsf3_pse+0x70>
    14ae:	9e 3f       	cpi	r25, 0xFE	; 254
    14b0:	51 05       	cpc	r21, r1
    14b2:	78 f0       	brcs	.+30     	; 0x14d2 <__divsf3_pse+0x86>
    14b4:	0c 94 11 0b 	jmp	0x1622	; 0x1622 <__fp_inf>
    14b8:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__fp_szero>
    14bc:	5f 3f       	cpi	r21, 0xFF	; 255
    14be:	e4 f3       	brlt	.-8      	; 0x14b8 <__divsf3_pse+0x6c>
    14c0:	98 3e       	cpi	r25, 0xE8	; 232
    14c2:	d4 f3       	brlt	.-12     	; 0x14b8 <__divsf3_pse+0x6c>
    14c4:	86 95       	lsr	r24
    14c6:	77 95       	ror	r23
    14c8:	67 95       	ror	r22
    14ca:	b7 95       	ror	r27
    14cc:	f7 95       	ror	r31
    14ce:	9f 5f       	subi	r25, 0xFF	; 255
    14d0:	c9 f7       	brne	.-14     	; 0x14c4 <__divsf3_pse+0x78>
    14d2:	88 0f       	add	r24, r24
    14d4:	91 1d       	adc	r25, r1
    14d6:	96 95       	lsr	r25
    14d8:	87 95       	ror	r24
    14da:	97 f9       	bld	r25, 7
    14dc:	08 95       	ret
    14de:	e1 e0       	ldi	r30, 0x01	; 1
    14e0:	66 0f       	add	r22, r22
    14e2:	77 1f       	adc	r23, r23
    14e4:	88 1f       	adc	r24, r24
    14e6:	bb 1f       	adc	r27, r27
    14e8:	62 17       	cp	r22, r18
    14ea:	73 07       	cpc	r23, r19
    14ec:	84 07       	cpc	r24, r20
    14ee:	ba 07       	cpc	r27, r26
    14f0:	20 f0       	brcs	.+8      	; 0x14fa <__divsf3_pse+0xae>
    14f2:	62 1b       	sub	r22, r18
    14f4:	73 0b       	sbc	r23, r19
    14f6:	84 0b       	sbc	r24, r20
    14f8:	ba 0b       	sbc	r27, r26
    14fa:	ee 1f       	adc	r30, r30
    14fc:	88 f7       	brcc	.-30     	; 0x14e0 <__divsf3_pse+0x94>
    14fe:	e0 95       	com	r30
    1500:	08 95       	ret

00001502 <__fixunssfsi>:
    1502:	0e 94 41 0b 	call	0x1682	; 0x1682 <__fp_splitA>
    1506:	88 f0       	brcs	.+34     	; 0x152a <__fixunssfsi+0x28>
    1508:	9f 57       	subi	r25, 0x7F	; 127
    150a:	98 f0       	brcs	.+38     	; 0x1532 <__fixunssfsi+0x30>
    150c:	b9 2f       	mov	r27, r25
    150e:	99 27       	eor	r25, r25
    1510:	b7 51       	subi	r27, 0x17	; 23
    1512:	b0 f0       	brcs	.+44     	; 0x1540 <__fixunssfsi+0x3e>
    1514:	e1 f0       	breq	.+56     	; 0x154e <__fixunssfsi+0x4c>
    1516:	66 0f       	add	r22, r22
    1518:	77 1f       	adc	r23, r23
    151a:	88 1f       	adc	r24, r24
    151c:	99 1f       	adc	r25, r25
    151e:	1a f0       	brmi	.+6      	; 0x1526 <__fixunssfsi+0x24>
    1520:	ba 95       	dec	r27
    1522:	c9 f7       	brne	.-14     	; 0x1516 <__fixunssfsi+0x14>
    1524:	14 c0       	rjmp	.+40     	; 0x154e <__fixunssfsi+0x4c>
    1526:	b1 30       	cpi	r27, 0x01	; 1
    1528:	91 f0       	breq	.+36     	; 0x154e <__fixunssfsi+0x4c>
    152a:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <__fp_zero>
    152e:	b1 e0       	ldi	r27, 0x01	; 1
    1530:	08 95       	ret
    1532:	0c 94 5b 0b 	jmp	0x16b6	; 0x16b6 <__fp_zero>
    1536:	67 2f       	mov	r22, r23
    1538:	78 2f       	mov	r23, r24
    153a:	88 27       	eor	r24, r24
    153c:	b8 5f       	subi	r27, 0xF8	; 248
    153e:	39 f0       	breq	.+14     	; 0x154e <__fixunssfsi+0x4c>
    1540:	b9 3f       	cpi	r27, 0xF9	; 249
    1542:	cc f3       	brlt	.-14     	; 0x1536 <__fixunssfsi+0x34>
    1544:	86 95       	lsr	r24
    1546:	77 95       	ror	r23
    1548:	67 95       	ror	r22
    154a:	b3 95       	inc	r27
    154c:	d9 f7       	brne	.-10     	; 0x1544 <__fixunssfsi+0x42>
    154e:	3e f4       	brtc	.+14     	; 0x155e <__fixunssfsi+0x5c>
    1550:	90 95       	com	r25
    1552:	80 95       	com	r24
    1554:	70 95       	com	r23
    1556:	61 95       	neg	r22
    1558:	7f 4f       	sbci	r23, 0xFF	; 255
    155a:	8f 4f       	sbci	r24, 0xFF	; 255
    155c:	9f 4f       	sbci	r25, 0xFF	; 255
    155e:	08 95       	ret

00001560 <__floatunsisf>:
    1560:	e8 94       	clt
    1562:	09 c0       	rjmp	.+18     	; 0x1576 <__floatsisf+0x12>

00001564 <__floatsisf>:
    1564:	97 fb       	bst	r25, 7
    1566:	3e f4       	brtc	.+14     	; 0x1576 <__floatsisf+0x12>
    1568:	90 95       	com	r25
    156a:	80 95       	com	r24
    156c:	70 95       	com	r23
    156e:	61 95       	neg	r22
    1570:	7f 4f       	sbci	r23, 0xFF	; 255
    1572:	8f 4f       	sbci	r24, 0xFF	; 255
    1574:	9f 4f       	sbci	r25, 0xFF	; 255
    1576:	99 23       	and	r25, r25
    1578:	a9 f0       	breq	.+42     	; 0x15a4 <__floatsisf+0x40>
    157a:	f9 2f       	mov	r31, r25
    157c:	96 e9       	ldi	r25, 0x96	; 150
    157e:	bb 27       	eor	r27, r27
    1580:	93 95       	inc	r25
    1582:	f6 95       	lsr	r31
    1584:	87 95       	ror	r24
    1586:	77 95       	ror	r23
    1588:	67 95       	ror	r22
    158a:	b7 95       	ror	r27
    158c:	f1 11       	cpse	r31, r1
    158e:	f8 cf       	rjmp	.-16     	; 0x1580 <__floatsisf+0x1c>
    1590:	fa f4       	brpl	.+62     	; 0x15d0 <__floatsisf+0x6c>
    1592:	bb 0f       	add	r27, r27
    1594:	11 f4       	brne	.+4      	; 0x159a <__floatsisf+0x36>
    1596:	60 ff       	sbrs	r22, 0
    1598:	1b c0       	rjmp	.+54     	; 0x15d0 <__floatsisf+0x6c>
    159a:	6f 5f       	subi	r22, 0xFF	; 255
    159c:	7f 4f       	sbci	r23, 0xFF	; 255
    159e:	8f 4f       	sbci	r24, 0xFF	; 255
    15a0:	9f 4f       	sbci	r25, 0xFF	; 255
    15a2:	16 c0       	rjmp	.+44     	; 0x15d0 <__floatsisf+0x6c>
    15a4:	88 23       	and	r24, r24
    15a6:	11 f0       	breq	.+4      	; 0x15ac <__floatsisf+0x48>
    15a8:	96 e9       	ldi	r25, 0x96	; 150
    15aa:	11 c0       	rjmp	.+34     	; 0x15ce <__floatsisf+0x6a>
    15ac:	77 23       	and	r23, r23
    15ae:	21 f0       	breq	.+8      	; 0x15b8 <__floatsisf+0x54>
    15b0:	9e e8       	ldi	r25, 0x8E	; 142
    15b2:	87 2f       	mov	r24, r23
    15b4:	76 2f       	mov	r23, r22
    15b6:	05 c0       	rjmp	.+10     	; 0x15c2 <__floatsisf+0x5e>
    15b8:	66 23       	and	r22, r22
    15ba:	71 f0       	breq	.+28     	; 0x15d8 <__floatsisf+0x74>
    15bc:	96 e8       	ldi	r25, 0x86	; 134
    15be:	86 2f       	mov	r24, r22
    15c0:	70 e0       	ldi	r23, 0x00	; 0
    15c2:	60 e0       	ldi	r22, 0x00	; 0
    15c4:	2a f0       	brmi	.+10     	; 0x15d0 <__floatsisf+0x6c>
    15c6:	9a 95       	dec	r25
    15c8:	66 0f       	add	r22, r22
    15ca:	77 1f       	adc	r23, r23
    15cc:	88 1f       	adc	r24, r24
    15ce:	da f7       	brpl	.-10     	; 0x15c6 <__floatsisf+0x62>
    15d0:	88 0f       	add	r24, r24
    15d2:	96 95       	lsr	r25
    15d4:	87 95       	ror	r24
    15d6:	97 f9       	bld	r25, 7
    15d8:	08 95       	ret

000015da <__fp_cmp>:
    15da:	99 0f       	add	r25, r25
    15dc:	00 08       	sbc	r0, r0
    15de:	55 0f       	add	r21, r21
    15e0:	aa 0b       	sbc	r26, r26
    15e2:	e0 e8       	ldi	r30, 0x80	; 128
    15e4:	fe ef       	ldi	r31, 0xFE	; 254
    15e6:	16 16       	cp	r1, r22
    15e8:	17 06       	cpc	r1, r23
    15ea:	e8 07       	cpc	r30, r24
    15ec:	f9 07       	cpc	r31, r25
    15ee:	c0 f0       	brcs	.+48     	; 0x1620 <__fp_cmp+0x46>
    15f0:	12 16       	cp	r1, r18
    15f2:	13 06       	cpc	r1, r19
    15f4:	e4 07       	cpc	r30, r20
    15f6:	f5 07       	cpc	r31, r21
    15f8:	98 f0       	brcs	.+38     	; 0x1620 <__fp_cmp+0x46>
    15fa:	62 1b       	sub	r22, r18
    15fc:	73 0b       	sbc	r23, r19
    15fe:	84 0b       	sbc	r24, r20
    1600:	95 0b       	sbc	r25, r21
    1602:	39 f4       	brne	.+14     	; 0x1612 <__fp_cmp+0x38>
    1604:	0a 26       	eor	r0, r26
    1606:	61 f0       	breq	.+24     	; 0x1620 <__fp_cmp+0x46>
    1608:	23 2b       	or	r18, r19
    160a:	24 2b       	or	r18, r20
    160c:	25 2b       	or	r18, r21
    160e:	21 f4       	brne	.+8      	; 0x1618 <__fp_cmp+0x3e>
    1610:	08 95       	ret
    1612:	0a 26       	eor	r0, r26
    1614:	09 f4       	brne	.+2      	; 0x1618 <__fp_cmp+0x3e>
    1616:	a1 40       	sbci	r26, 0x01	; 1
    1618:	a6 95       	lsr	r26
    161a:	8f ef       	ldi	r24, 0xFF	; 255
    161c:	81 1d       	adc	r24, r1
    161e:	81 1d       	adc	r24, r1
    1620:	08 95       	ret

00001622 <__fp_inf>:
    1622:	97 f9       	bld	r25, 7
    1624:	9f 67       	ori	r25, 0x7F	; 127
    1626:	80 e8       	ldi	r24, 0x80	; 128
    1628:	70 e0       	ldi	r23, 0x00	; 0
    162a:	60 e0       	ldi	r22, 0x00	; 0
    162c:	08 95       	ret

0000162e <__fp_nan>:
    162e:	9f ef       	ldi	r25, 0xFF	; 255
    1630:	80 ec       	ldi	r24, 0xC0	; 192
    1632:	08 95       	ret

00001634 <__fp_pscA>:
    1634:	00 24       	eor	r0, r0
    1636:	0a 94       	dec	r0
    1638:	16 16       	cp	r1, r22
    163a:	17 06       	cpc	r1, r23
    163c:	18 06       	cpc	r1, r24
    163e:	09 06       	cpc	r0, r25
    1640:	08 95       	ret

00001642 <__fp_pscB>:
    1642:	00 24       	eor	r0, r0
    1644:	0a 94       	dec	r0
    1646:	12 16       	cp	r1, r18
    1648:	13 06       	cpc	r1, r19
    164a:	14 06       	cpc	r1, r20
    164c:	05 06       	cpc	r0, r21
    164e:	08 95       	ret

00001650 <__fp_round>:
    1650:	09 2e       	mov	r0, r25
    1652:	03 94       	inc	r0
    1654:	00 0c       	add	r0, r0
    1656:	11 f4       	brne	.+4      	; 0x165c <__fp_round+0xc>
    1658:	88 23       	and	r24, r24
    165a:	52 f0       	brmi	.+20     	; 0x1670 <__fp_round+0x20>
    165c:	bb 0f       	add	r27, r27
    165e:	40 f4       	brcc	.+16     	; 0x1670 <__fp_round+0x20>
    1660:	bf 2b       	or	r27, r31
    1662:	11 f4       	brne	.+4      	; 0x1668 <__fp_round+0x18>
    1664:	60 ff       	sbrs	r22, 0
    1666:	04 c0       	rjmp	.+8      	; 0x1670 <__fp_round+0x20>
    1668:	6f 5f       	subi	r22, 0xFF	; 255
    166a:	7f 4f       	sbci	r23, 0xFF	; 255
    166c:	8f 4f       	sbci	r24, 0xFF	; 255
    166e:	9f 4f       	sbci	r25, 0xFF	; 255
    1670:	08 95       	ret

00001672 <__fp_split3>:
    1672:	57 fd       	sbrc	r21, 7
    1674:	90 58       	subi	r25, 0x80	; 128
    1676:	44 0f       	add	r20, r20
    1678:	55 1f       	adc	r21, r21
    167a:	59 f0       	breq	.+22     	; 0x1692 <__fp_splitA+0x10>
    167c:	5f 3f       	cpi	r21, 0xFF	; 255
    167e:	71 f0       	breq	.+28     	; 0x169c <__fp_splitA+0x1a>
    1680:	47 95       	ror	r20

00001682 <__fp_splitA>:
    1682:	88 0f       	add	r24, r24
    1684:	97 fb       	bst	r25, 7
    1686:	99 1f       	adc	r25, r25
    1688:	61 f0       	breq	.+24     	; 0x16a2 <__fp_splitA+0x20>
    168a:	9f 3f       	cpi	r25, 0xFF	; 255
    168c:	79 f0       	breq	.+30     	; 0x16ac <__fp_splitA+0x2a>
    168e:	87 95       	ror	r24
    1690:	08 95       	ret
    1692:	12 16       	cp	r1, r18
    1694:	13 06       	cpc	r1, r19
    1696:	14 06       	cpc	r1, r20
    1698:	55 1f       	adc	r21, r21
    169a:	f2 cf       	rjmp	.-28     	; 0x1680 <__fp_split3+0xe>
    169c:	46 95       	lsr	r20
    169e:	f1 df       	rcall	.-30     	; 0x1682 <__fp_splitA>
    16a0:	08 c0       	rjmp	.+16     	; 0x16b2 <__fp_splitA+0x30>
    16a2:	16 16       	cp	r1, r22
    16a4:	17 06       	cpc	r1, r23
    16a6:	18 06       	cpc	r1, r24
    16a8:	99 1f       	adc	r25, r25
    16aa:	f1 cf       	rjmp	.-30     	; 0x168e <__fp_splitA+0xc>
    16ac:	86 95       	lsr	r24
    16ae:	71 05       	cpc	r23, r1
    16b0:	61 05       	cpc	r22, r1
    16b2:	08 94       	sec
    16b4:	08 95       	ret

000016b6 <__fp_zero>:
    16b6:	e8 94       	clt

000016b8 <__fp_szero>:
    16b8:	bb 27       	eor	r27, r27
    16ba:	66 27       	eor	r22, r22
    16bc:	77 27       	eor	r23, r23
    16be:	cb 01       	movw	r24, r22
    16c0:	97 f9       	bld	r25, 7
    16c2:	08 95       	ret

000016c4 <__gesf2>:
    16c4:	0e 94 ed 0a 	call	0x15da	; 0x15da <__fp_cmp>
    16c8:	08 f4       	brcc	.+2      	; 0x16cc <__gesf2+0x8>
    16ca:	8f ef       	ldi	r24, 0xFF	; 255
    16cc:	08 95       	ret

000016ce <__mulsf3>:
    16ce:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3x>
    16d2:	0c 94 28 0b 	jmp	0x1650	; 0x1650 <__fp_round>
    16d6:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__fp_pscA>
    16da:	38 f0       	brcs	.+14     	; 0x16ea <__mulsf3+0x1c>
    16dc:	0e 94 21 0b 	call	0x1642	; 0x1642 <__fp_pscB>
    16e0:	20 f0       	brcs	.+8      	; 0x16ea <__mulsf3+0x1c>
    16e2:	95 23       	and	r25, r21
    16e4:	11 f0       	breq	.+4      	; 0x16ea <__mulsf3+0x1c>
    16e6:	0c 94 11 0b 	jmp	0x1622	; 0x1622 <__fp_inf>
    16ea:	0c 94 17 0b 	jmp	0x162e	; 0x162e <__fp_nan>
    16ee:	11 24       	eor	r1, r1
    16f0:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__fp_szero>

000016f4 <__mulsf3x>:
    16f4:	0e 94 39 0b 	call	0x1672	; 0x1672 <__fp_split3>
    16f8:	70 f3       	brcs	.-36     	; 0x16d6 <__mulsf3+0x8>

000016fa <__mulsf3_pse>:
    16fa:	95 9f       	mul	r25, r21
    16fc:	c1 f3       	breq	.-16     	; 0x16ee <__mulsf3+0x20>
    16fe:	95 0f       	add	r25, r21
    1700:	50 e0       	ldi	r21, 0x00	; 0
    1702:	55 1f       	adc	r21, r21
    1704:	62 9f       	mul	r22, r18
    1706:	f0 01       	movw	r30, r0
    1708:	72 9f       	mul	r23, r18
    170a:	bb 27       	eor	r27, r27
    170c:	f0 0d       	add	r31, r0
    170e:	b1 1d       	adc	r27, r1
    1710:	63 9f       	mul	r22, r19
    1712:	aa 27       	eor	r26, r26
    1714:	f0 0d       	add	r31, r0
    1716:	b1 1d       	adc	r27, r1
    1718:	aa 1f       	adc	r26, r26
    171a:	64 9f       	mul	r22, r20
    171c:	66 27       	eor	r22, r22
    171e:	b0 0d       	add	r27, r0
    1720:	a1 1d       	adc	r26, r1
    1722:	66 1f       	adc	r22, r22
    1724:	82 9f       	mul	r24, r18
    1726:	22 27       	eor	r18, r18
    1728:	b0 0d       	add	r27, r0
    172a:	a1 1d       	adc	r26, r1
    172c:	62 1f       	adc	r22, r18
    172e:	73 9f       	mul	r23, r19
    1730:	b0 0d       	add	r27, r0
    1732:	a1 1d       	adc	r26, r1
    1734:	62 1f       	adc	r22, r18
    1736:	83 9f       	mul	r24, r19
    1738:	a0 0d       	add	r26, r0
    173a:	61 1d       	adc	r22, r1
    173c:	22 1f       	adc	r18, r18
    173e:	74 9f       	mul	r23, r20
    1740:	33 27       	eor	r19, r19
    1742:	a0 0d       	add	r26, r0
    1744:	61 1d       	adc	r22, r1
    1746:	23 1f       	adc	r18, r19
    1748:	84 9f       	mul	r24, r20
    174a:	60 0d       	add	r22, r0
    174c:	21 1d       	adc	r18, r1
    174e:	82 2f       	mov	r24, r18
    1750:	76 2f       	mov	r23, r22
    1752:	6a 2f       	mov	r22, r26
    1754:	11 24       	eor	r1, r1
    1756:	9f 57       	subi	r25, 0x7F	; 127
    1758:	50 40       	sbci	r21, 0x00	; 0
    175a:	9a f0       	brmi	.+38     	; 0x1782 <__mulsf3_pse+0x88>
    175c:	f1 f0       	breq	.+60     	; 0x179a <__mulsf3_pse+0xa0>
    175e:	88 23       	and	r24, r24
    1760:	4a f0       	brmi	.+18     	; 0x1774 <__mulsf3_pse+0x7a>
    1762:	ee 0f       	add	r30, r30
    1764:	ff 1f       	adc	r31, r31
    1766:	bb 1f       	adc	r27, r27
    1768:	66 1f       	adc	r22, r22
    176a:	77 1f       	adc	r23, r23
    176c:	88 1f       	adc	r24, r24
    176e:	91 50       	subi	r25, 0x01	; 1
    1770:	50 40       	sbci	r21, 0x00	; 0
    1772:	a9 f7       	brne	.-22     	; 0x175e <__mulsf3_pse+0x64>
    1774:	9e 3f       	cpi	r25, 0xFE	; 254
    1776:	51 05       	cpc	r21, r1
    1778:	80 f0       	brcs	.+32     	; 0x179a <__mulsf3_pse+0xa0>
    177a:	0c 94 11 0b 	jmp	0x1622	; 0x1622 <__fp_inf>
    177e:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__fp_szero>
    1782:	5f 3f       	cpi	r21, 0xFF	; 255
    1784:	e4 f3       	brlt	.-8      	; 0x177e <__mulsf3_pse+0x84>
    1786:	98 3e       	cpi	r25, 0xE8	; 232
    1788:	d4 f3       	brlt	.-12     	; 0x177e <__mulsf3_pse+0x84>
    178a:	86 95       	lsr	r24
    178c:	77 95       	ror	r23
    178e:	67 95       	ror	r22
    1790:	b7 95       	ror	r27
    1792:	f7 95       	ror	r31
    1794:	e7 95       	ror	r30
    1796:	9f 5f       	subi	r25, 0xFF	; 255
    1798:	c1 f7       	brne	.-16     	; 0x178a <__mulsf3_pse+0x90>
    179a:	fe 2b       	or	r31, r30
    179c:	88 0f       	add	r24, r24
    179e:	91 1d       	adc	r25, r1
    17a0:	96 95       	lsr	r25
    17a2:	87 95       	ror	r24
    17a4:	97 f9       	bld	r25, 7
    17a6:	08 95       	ret

000017a8 <vfprintf>:
    17a8:	a0 e1       	ldi	r26, 0x10	; 16
    17aa:	b0 e0       	ldi	r27, 0x00	; 0
    17ac:	ea ed       	ldi	r30, 0xDA	; 218
    17ae:	fb e0       	ldi	r31, 0x0B	; 11
    17b0:	0c 94 98 0f 	jmp	0x1f30	; 0x1f30 <__prologue_saves__>
    17b4:	7c 01       	movw	r14, r24
    17b6:	1b 01       	movw	r2, r22
    17b8:	6a 01       	movw	r12, r20
    17ba:	fc 01       	movw	r30, r24
    17bc:	17 82       	std	Z+7, r1	; 0x07
    17be:	16 82       	std	Z+6, r1	; 0x06
    17c0:	83 81       	ldd	r24, Z+3	; 0x03
    17c2:	81 ff       	sbrs	r24, 1
    17c4:	44 c3       	rjmp	.+1672   	; 0x1e4e <vfprintf+0x6a6>
    17c6:	9e 01       	movw	r18, r28
    17c8:	2f 5f       	subi	r18, 0xFF	; 255
    17ca:	3f 4f       	sbci	r19, 0xFF	; 255
    17cc:	39 01       	movw	r6, r18
    17ce:	f7 01       	movw	r30, r14
    17d0:	93 81       	ldd	r25, Z+3	; 0x03
    17d2:	f1 01       	movw	r30, r2
    17d4:	93 fd       	sbrc	r25, 3
    17d6:	85 91       	lpm	r24, Z+
    17d8:	93 ff       	sbrs	r25, 3
    17da:	81 91       	ld	r24, Z+
    17dc:	1f 01       	movw	r2, r30
    17de:	88 23       	and	r24, r24
    17e0:	09 f4       	brne	.+2      	; 0x17e4 <vfprintf+0x3c>
    17e2:	31 c3       	rjmp	.+1634   	; 0x1e46 <vfprintf+0x69e>
    17e4:	85 32       	cpi	r24, 0x25	; 37
    17e6:	39 f4       	brne	.+14     	; 0x17f6 <vfprintf+0x4e>
    17e8:	93 fd       	sbrc	r25, 3
    17ea:	85 91       	lpm	r24, Z+
    17ec:	93 ff       	sbrs	r25, 3
    17ee:	81 91       	ld	r24, Z+
    17f0:	1f 01       	movw	r2, r30
    17f2:	85 32       	cpi	r24, 0x25	; 37
    17f4:	39 f4       	brne	.+14     	; 0x1804 <vfprintf+0x5c>
    17f6:	b7 01       	movw	r22, r14
    17f8:	90 e0       	ldi	r25, 0x00	; 0
    17fa:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    17fe:	56 01       	movw	r10, r12
    1800:	65 01       	movw	r12, r10
    1802:	e5 cf       	rjmp	.-54     	; 0x17ce <vfprintf+0x26>
    1804:	10 e0       	ldi	r17, 0x00	; 0
    1806:	51 2c       	mov	r5, r1
    1808:	91 2c       	mov	r9, r1
    180a:	ff e1       	ldi	r31, 0x1F	; 31
    180c:	f9 15       	cp	r31, r9
    180e:	d8 f0       	brcs	.+54     	; 0x1846 <vfprintf+0x9e>
    1810:	8b 32       	cpi	r24, 0x2B	; 43
    1812:	79 f0       	breq	.+30     	; 0x1832 <vfprintf+0x8a>
    1814:	38 f4       	brcc	.+14     	; 0x1824 <vfprintf+0x7c>
    1816:	80 32       	cpi	r24, 0x20	; 32
    1818:	79 f0       	breq	.+30     	; 0x1838 <vfprintf+0x90>
    181a:	83 32       	cpi	r24, 0x23	; 35
    181c:	a1 f4       	brne	.+40     	; 0x1846 <vfprintf+0x9e>
    181e:	f9 2d       	mov	r31, r9
    1820:	f0 61       	ori	r31, 0x10	; 16
    1822:	2e c0       	rjmp	.+92     	; 0x1880 <vfprintf+0xd8>
    1824:	8d 32       	cpi	r24, 0x2D	; 45
    1826:	61 f0       	breq	.+24     	; 0x1840 <vfprintf+0x98>
    1828:	80 33       	cpi	r24, 0x30	; 48
    182a:	69 f4       	brne	.+26     	; 0x1846 <vfprintf+0x9e>
    182c:	29 2d       	mov	r18, r9
    182e:	21 60       	ori	r18, 0x01	; 1
    1830:	2d c0       	rjmp	.+90     	; 0x188c <vfprintf+0xe4>
    1832:	39 2d       	mov	r19, r9
    1834:	32 60       	ori	r19, 0x02	; 2
    1836:	93 2e       	mov	r9, r19
    1838:	89 2d       	mov	r24, r9
    183a:	84 60       	ori	r24, 0x04	; 4
    183c:	98 2e       	mov	r9, r24
    183e:	2a c0       	rjmp	.+84     	; 0x1894 <vfprintf+0xec>
    1840:	e9 2d       	mov	r30, r9
    1842:	e8 60       	ori	r30, 0x08	; 8
    1844:	15 c0       	rjmp	.+42     	; 0x1870 <vfprintf+0xc8>
    1846:	97 fc       	sbrc	r9, 7
    1848:	2d c0       	rjmp	.+90     	; 0x18a4 <vfprintf+0xfc>
    184a:	20 ed       	ldi	r18, 0xD0	; 208
    184c:	28 0f       	add	r18, r24
    184e:	2a 30       	cpi	r18, 0x0A	; 10
    1850:	88 f4       	brcc	.+34     	; 0x1874 <vfprintf+0xcc>
    1852:	96 fe       	sbrs	r9, 6
    1854:	06 c0       	rjmp	.+12     	; 0x1862 <vfprintf+0xba>
    1856:	3a e0       	ldi	r19, 0x0A	; 10
    1858:	13 9f       	mul	r17, r19
    185a:	20 0d       	add	r18, r0
    185c:	11 24       	eor	r1, r1
    185e:	12 2f       	mov	r17, r18
    1860:	19 c0       	rjmp	.+50     	; 0x1894 <vfprintf+0xec>
    1862:	8a e0       	ldi	r24, 0x0A	; 10
    1864:	58 9e       	mul	r5, r24
    1866:	20 0d       	add	r18, r0
    1868:	11 24       	eor	r1, r1
    186a:	52 2e       	mov	r5, r18
    186c:	e9 2d       	mov	r30, r9
    186e:	e0 62       	ori	r30, 0x20	; 32
    1870:	9e 2e       	mov	r9, r30
    1872:	10 c0       	rjmp	.+32     	; 0x1894 <vfprintf+0xec>
    1874:	8e 32       	cpi	r24, 0x2E	; 46
    1876:	31 f4       	brne	.+12     	; 0x1884 <vfprintf+0xdc>
    1878:	96 fc       	sbrc	r9, 6
    187a:	e5 c2       	rjmp	.+1482   	; 0x1e46 <vfprintf+0x69e>
    187c:	f9 2d       	mov	r31, r9
    187e:	f0 64       	ori	r31, 0x40	; 64
    1880:	9f 2e       	mov	r9, r31
    1882:	08 c0       	rjmp	.+16     	; 0x1894 <vfprintf+0xec>
    1884:	8c 36       	cpi	r24, 0x6C	; 108
    1886:	21 f4       	brne	.+8      	; 0x1890 <vfprintf+0xe8>
    1888:	29 2d       	mov	r18, r9
    188a:	20 68       	ori	r18, 0x80	; 128
    188c:	92 2e       	mov	r9, r18
    188e:	02 c0       	rjmp	.+4      	; 0x1894 <vfprintf+0xec>
    1890:	88 36       	cpi	r24, 0x68	; 104
    1892:	41 f4       	brne	.+16     	; 0x18a4 <vfprintf+0xfc>
    1894:	f1 01       	movw	r30, r2
    1896:	93 fd       	sbrc	r25, 3
    1898:	85 91       	lpm	r24, Z+
    189a:	93 ff       	sbrs	r25, 3
    189c:	81 91       	ld	r24, Z+
    189e:	1f 01       	movw	r2, r30
    18a0:	81 11       	cpse	r24, r1
    18a2:	b3 cf       	rjmp	.-154    	; 0x180a <vfprintf+0x62>
    18a4:	9b eb       	ldi	r25, 0xBB	; 187
    18a6:	98 0f       	add	r25, r24
    18a8:	93 30       	cpi	r25, 0x03	; 3
    18aa:	20 f4       	brcc	.+8      	; 0x18b4 <vfprintf+0x10c>
    18ac:	99 2d       	mov	r25, r9
    18ae:	90 61       	ori	r25, 0x10	; 16
    18b0:	80 5e       	subi	r24, 0xE0	; 224
    18b2:	07 c0       	rjmp	.+14     	; 0x18c2 <vfprintf+0x11a>
    18b4:	9b e9       	ldi	r25, 0x9B	; 155
    18b6:	98 0f       	add	r25, r24
    18b8:	93 30       	cpi	r25, 0x03	; 3
    18ba:	08 f0       	brcs	.+2      	; 0x18be <vfprintf+0x116>
    18bc:	66 c1       	rjmp	.+716    	; 0x1b8a <vfprintf+0x3e2>
    18be:	99 2d       	mov	r25, r9
    18c0:	9f 7e       	andi	r25, 0xEF	; 239
    18c2:	96 ff       	sbrs	r25, 6
    18c4:	16 e0       	ldi	r17, 0x06	; 6
    18c6:	9f 73       	andi	r25, 0x3F	; 63
    18c8:	99 2e       	mov	r9, r25
    18ca:	85 36       	cpi	r24, 0x65	; 101
    18cc:	19 f4       	brne	.+6      	; 0x18d4 <vfprintf+0x12c>
    18ce:	90 64       	ori	r25, 0x40	; 64
    18d0:	99 2e       	mov	r9, r25
    18d2:	08 c0       	rjmp	.+16     	; 0x18e4 <vfprintf+0x13c>
    18d4:	86 36       	cpi	r24, 0x66	; 102
    18d6:	21 f4       	brne	.+8      	; 0x18e0 <vfprintf+0x138>
    18d8:	39 2f       	mov	r19, r25
    18da:	30 68       	ori	r19, 0x80	; 128
    18dc:	93 2e       	mov	r9, r19
    18de:	02 c0       	rjmp	.+4      	; 0x18e4 <vfprintf+0x13c>
    18e0:	11 11       	cpse	r17, r1
    18e2:	11 50       	subi	r17, 0x01	; 1
    18e4:	97 fe       	sbrs	r9, 7
    18e6:	07 c0       	rjmp	.+14     	; 0x18f6 <vfprintf+0x14e>
    18e8:	1c 33       	cpi	r17, 0x3C	; 60
    18ea:	50 f4       	brcc	.+20     	; 0x1900 <vfprintf+0x158>
    18ec:	44 24       	eor	r4, r4
    18ee:	43 94       	inc	r4
    18f0:	41 0e       	add	r4, r17
    18f2:	27 e0       	ldi	r18, 0x07	; 7
    18f4:	0b c0       	rjmp	.+22     	; 0x190c <vfprintf+0x164>
    18f6:	18 30       	cpi	r17, 0x08	; 8
    18f8:	38 f0       	brcs	.+14     	; 0x1908 <vfprintf+0x160>
    18fa:	27 e0       	ldi	r18, 0x07	; 7
    18fc:	17 e0       	ldi	r17, 0x07	; 7
    18fe:	05 c0       	rjmp	.+10     	; 0x190a <vfprintf+0x162>
    1900:	27 e0       	ldi	r18, 0x07	; 7
    1902:	9c e3       	ldi	r25, 0x3C	; 60
    1904:	49 2e       	mov	r4, r25
    1906:	02 c0       	rjmp	.+4      	; 0x190c <vfprintf+0x164>
    1908:	21 2f       	mov	r18, r17
    190a:	41 2c       	mov	r4, r1
    190c:	56 01       	movw	r10, r12
    190e:	84 e0       	ldi	r24, 0x04	; 4
    1910:	a8 0e       	add	r10, r24
    1912:	b1 1c       	adc	r11, r1
    1914:	f6 01       	movw	r30, r12
    1916:	60 81       	ld	r22, Z
    1918:	71 81       	ldd	r23, Z+1	; 0x01
    191a:	82 81       	ldd	r24, Z+2	; 0x02
    191c:	93 81       	ldd	r25, Z+3	; 0x03
    191e:	04 2d       	mov	r16, r4
    1920:	a3 01       	movw	r20, r6
    1922:	0e 94 f1 0f 	call	0x1fe2	; 0x1fe2 <__ftoa_engine>
    1926:	6c 01       	movw	r12, r24
    1928:	f9 81       	ldd	r31, Y+1	; 0x01
    192a:	fc 87       	std	Y+12, r31	; 0x0c
    192c:	f0 ff       	sbrs	r31, 0
    192e:	02 c0       	rjmp	.+4      	; 0x1934 <vfprintf+0x18c>
    1930:	f3 ff       	sbrs	r31, 3
    1932:	06 c0       	rjmp	.+12     	; 0x1940 <vfprintf+0x198>
    1934:	91 fc       	sbrc	r9, 1
    1936:	06 c0       	rjmp	.+12     	; 0x1944 <vfprintf+0x19c>
    1938:	92 fe       	sbrs	r9, 2
    193a:	06 c0       	rjmp	.+12     	; 0x1948 <vfprintf+0x1a0>
    193c:	00 e2       	ldi	r16, 0x20	; 32
    193e:	05 c0       	rjmp	.+10     	; 0x194a <vfprintf+0x1a2>
    1940:	0d e2       	ldi	r16, 0x2D	; 45
    1942:	03 c0       	rjmp	.+6      	; 0x194a <vfprintf+0x1a2>
    1944:	0b e2       	ldi	r16, 0x2B	; 43
    1946:	01 c0       	rjmp	.+2      	; 0x194a <vfprintf+0x1a2>
    1948:	00 e0       	ldi	r16, 0x00	; 0
    194a:	8c 85       	ldd	r24, Y+12	; 0x0c
    194c:	8c 70       	andi	r24, 0x0C	; 12
    194e:	19 f0       	breq	.+6      	; 0x1956 <vfprintf+0x1ae>
    1950:	01 11       	cpse	r16, r1
    1952:	5a c2       	rjmp	.+1204   	; 0x1e08 <vfprintf+0x660>
    1954:	9b c2       	rjmp	.+1334   	; 0x1e8c <vfprintf+0x6e4>
    1956:	97 fe       	sbrs	r9, 7
    1958:	10 c0       	rjmp	.+32     	; 0x197a <vfprintf+0x1d2>
    195a:	4c 0c       	add	r4, r12
    195c:	fc 85       	ldd	r31, Y+12	; 0x0c
    195e:	f4 ff       	sbrs	r31, 4
    1960:	04 c0       	rjmp	.+8      	; 0x196a <vfprintf+0x1c2>
    1962:	8a 81       	ldd	r24, Y+2	; 0x02
    1964:	81 33       	cpi	r24, 0x31	; 49
    1966:	09 f4       	brne	.+2      	; 0x196a <vfprintf+0x1c2>
    1968:	4a 94       	dec	r4
    196a:	14 14       	cp	r1, r4
    196c:	74 f5       	brge	.+92     	; 0x19ca <vfprintf+0x222>
    196e:	28 e0       	ldi	r18, 0x08	; 8
    1970:	24 15       	cp	r18, r4
    1972:	78 f5       	brcc	.+94     	; 0x19d2 <vfprintf+0x22a>
    1974:	88 e0       	ldi	r24, 0x08	; 8
    1976:	48 2e       	mov	r4, r24
    1978:	2c c0       	rjmp	.+88     	; 0x19d2 <vfprintf+0x22a>
    197a:	96 fc       	sbrc	r9, 6
    197c:	2a c0       	rjmp	.+84     	; 0x19d2 <vfprintf+0x22a>
    197e:	81 2f       	mov	r24, r17
    1980:	90 e0       	ldi	r25, 0x00	; 0
    1982:	8c 15       	cp	r24, r12
    1984:	9d 05       	cpc	r25, r13
    1986:	9c f0       	brlt	.+38     	; 0x19ae <vfprintf+0x206>
    1988:	3c ef       	ldi	r19, 0xFC	; 252
    198a:	c3 16       	cp	r12, r19
    198c:	3f ef       	ldi	r19, 0xFF	; 255
    198e:	d3 06       	cpc	r13, r19
    1990:	74 f0       	brlt	.+28     	; 0x19ae <vfprintf+0x206>
    1992:	89 2d       	mov	r24, r9
    1994:	80 68       	ori	r24, 0x80	; 128
    1996:	98 2e       	mov	r9, r24
    1998:	0a c0       	rjmp	.+20     	; 0x19ae <vfprintf+0x206>
    199a:	e2 e0       	ldi	r30, 0x02	; 2
    199c:	f0 e0       	ldi	r31, 0x00	; 0
    199e:	ec 0f       	add	r30, r28
    19a0:	fd 1f       	adc	r31, r29
    19a2:	e1 0f       	add	r30, r17
    19a4:	f1 1d       	adc	r31, r1
    19a6:	80 81       	ld	r24, Z
    19a8:	80 33       	cpi	r24, 0x30	; 48
    19aa:	19 f4       	brne	.+6      	; 0x19b2 <vfprintf+0x20a>
    19ac:	11 50       	subi	r17, 0x01	; 1
    19ae:	11 11       	cpse	r17, r1
    19b0:	f4 cf       	rjmp	.-24     	; 0x199a <vfprintf+0x1f2>
    19b2:	97 fe       	sbrs	r9, 7
    19b4:	0e c0       	rjmp	.+28     	; 0x19d2 <vfprintf+0x22a>
    19b6:	44 24       	eor	r4, r4
    19b8:	43 94       	inc	r4
    19ba:	41 0e       	add	r4, r17
    19bc:	81 2f       	mov	r24, r17
    19be:	90 e0       	ldi	r25, 0x00	; 0
    19c0:	c8 16       	cp	r12, r24
    19c2:	d9 06       	cpc	r13, r25
    19c4:	2c f4       	brge	.+10     	; 0x19d0 <vfprintf+0x228>
    19c6:	1c 19       	sub	r17, r12
    19c8:	04 c0       	rjmp	.+8      	; 0x19d2 <vfprintf+0x22a>
    19ca:	44 24       	eor	r4, r4
    19cc:	43 94       	inc	r4
    19ce:	01 c0       	rjmp	.+2      	; 0x19d2 <vfprintf+0x22a>
    19d0:	10 e0       	ldi	r17, 0x00	; 0
    19d2:	97 fe       	sbrs	r9, 7
    19d4:	06 c0       	rjmp	.+12     	; 0x19e2 <vfprintf+0x23a>
    19d6:	1c 14       	cp	r1, r12
    19d8:	1d 04       	cpc	r1, r13
    19da:	34 f4       	brge	.+12     	; 0x19e8 <vfprintf+0x240>
    19dc:	c6 01       	movw	r24, r12
    19de:	01 96       	adiw	r24, 0x01	; 1
    19e0:	05 c0       	rjmp	.+10     	; 0x19ec <vfprintf+0x244>
    19e2:	85 e0       	ldi	r24, 0x05	; 5
    19e4:	90 e0       	ldi	r25, 0x00	; 0
    19e6:	02 c0       	rjmp	.+4      	; 0x19ec <vfprintf+0x244>
    19e8:	81 e0       	ldi	r24, 0x01	; 1
    19ea:	90 e0       	ldi	r25, 0x00	; 0
    19ec:	01 11       	cpse	r16, r1
    19ee:	01 96       	adiw	r24, 0x01	; 1
    19f0:	11 23       	and	r17, r17
    19f2:	31 f0       	breq	.+12     	; 0x1a00 <vfprintf+0x258>
    19f4:	21 2f       	mov	r18, r17
    19f6:	30 e0       	ldi	r19, 0x00	; 0
    19f8:	2f 5f       	subi	r18, 0xFF	; 255
    19fa:	3f 4f       	sbci	r19, 0xFF	; 255
    19fc:	82 0f       	add	r24, r18
    19fe:	93 1f       	adc	r25, r19
    1a00:	25 2d       	mov	r18, r5
    1a02:	30 e0       	ldi	r19, 0x00	; 0
    1a04:	82 17       	cp	r24, r18
    1a06:	93 07       	cpc	r25, r19
    1a08:	14 f4       	brge	.+4      	; 0x1a0e <vfprintf+0x266>
    1a0a:	58 1a       	sub	r5, r24
    1a0c:	01 c0       	rjmp	.+2      	; 0x1a10 <vfprintf+0x268>
    1a0e:	51 2c       	mov	r5, r1
    1a10:	89 2d       	mov	r24, r9
    1a12:	89 70       	andi	r24, 0x09	; 9
    1a14:	49 f4       	brne	.+18     	; 0x1a28 <vfprintf+0x280>
    1a16:	55 20       	and	r5, r5
    1a18:	39 f0       	breq	.+14     	; 0x1a28 <vfprintf+0x280>
    1a1a:	b7 01       	movw	r22, r14
    1a1c:	80 e2       	ldi	r24, 0x20	; 32
    1a1e:	90 e0       	ldi	r25, 0x00	; 0
    1a20:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1a24:	5a 94       	dec	r5
    1a26:	f7 cf       	rjmp	.-18     	; 0x1a16 <vfprintf+0x26e>
    1a28:	00 23       	and	r16, r16
    1a2a:	29 f0       	breq	.+10     	; 0x1a36 <vfprintf+0x28e>
    1a2c:	b7 01       	movw	r22, r14
    1a2e:	80 2f       	mov	r24, r16
    1a30:	90 e0       	ldi	r25, 0x00	; 0
    1a32:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1a36:	93 fc       	sbrc	r9, 3
    1a38:	09 c0       	rjmp	.+18     	; 0x1a4c <vfprintf+0x2a4>
    1a3a:	55 20       	and	r5, r5
    1a3c:	39 f0       	breq	.+14     	; 0x1a4c <vfprintf+0x2a4>
    1a3e:	b7 01       	movw	r22, r14
    1a40:	80 e3       	ldi	r24, 0x30	; 48
    1a42:	90 e0       	ldi	r25, 0x00	; 0
    1a44:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1a48:	5a 94       	dec	r5
    1a4a:	f7 cf       	rjmp	.-18     	; 0x1a3a <vfprintf+0x292>
    1a4c:	97 fe       	sbrs	r9, 7
    1a4e:	4c c0       	rjmp	.+152    	; 0x1ae8 <vfprintf+0x340>
    1a50:	46 01       	movw	r8, r12
    1a52:	d7 fe       	sbrs	r13, 7
    1a54:	02 c0       	rjmp	.+4      	; 0x1a5a <vfprintf+0x2b2>
    1a56:	81 2c       	mov	r8, r1
    1a58:	91 2c       	mov	r9, r1
    1a5a:	c6 01       	movw	r24, r12
    1a5c:	88 19       	sub	r24, r8
    1a5e:	99 09       	sbc	r25, r9
    1a60:	f3 01       	movw	r30, r6
    1a62:	e8 0f       	add	r30, r24
    1a64:	f9 1f       	adc	r31, r25
    1a66:	fe 87       	std	Y+14, r31	; 0x0e
    1a68:	ed 87       	std	Y+13, r30	; 0x0d
    1a6a:	96 01       	movw	r18, r12
    1a6c:	24 19       	sub	r18, r4
    1a6e:	31 09       	sbc	r19, r1
    1a70:	38 8b       	std	Y+16, r19	; 0x10
    1a72:	2f 87       	std	Y+15, r18	; 0x0f
    1a74:	01 2f       	mov	r16, r17
    1a76:	10 e0       	ldi	r17, 0x00	; 0
    1a78:	11 95       	neg	r17
    1a7a:	01 95       	neg	r16
    1a7c:	11 09       	sbc	r17, r1
    1a7e:	3f ef       	ldi	r19, 0xFF	; 255
    1a80:	83 16       	cp	r8, r19
    1a82:	93 06       	cpc	r9, r19
    1a84:	29 f4       	brne	.+10     	; 0x1a90 <vfprintf+0x2e8>
    1a86:	b7 01       	movw	r22, r14
    1a88:	8e e2       	ldi	r24, 0x2E	; 46
    1a8a:	90 e0       	ldi	r25, 0x00	; 0
    1a8c:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1a90:	c8 14       	cp	r12, r8
    1a92:	d9 04       	cpc	r13, r9
    1a94:	4c f0       	brlt	.+18     	; 0x1aa8 <vfprintf+0x300>
    1a96:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a98:	98 89       	ldd	r25, Y+16	; 0x10
    1a9a:	88 15       	cp	r24, r8
    1a9c:	99 05       	cpc	r25, r9
    1a9e:	24 f4       	brge	.+8      	; 0x1aa8 <vfprintf+0x300>
    1aa0:	ed 85       	ldd	r30, Y+13	; 0x0d
    1aa2:	fe 85       	ldd	r31, Y+14	; 0x0e
    1aa4:	81 81       	ldd	r24, Z+1	; 0x01
    1aa6:	01 c0       	rjmp	.+2      	; 0x1aaa <vfprintf+0x302>
    1aa8:	80 e3       	ldi	r24, 0x30	; 48
    1aaa:	f1 e0       	ldi	r31, 0x01	; 1
    1aac:	8f 1a       	sub	r8, r31
    1aae:	91 08       	sbc	r9, r1
    1ab0:	2d 85       	ldd	r18, Y+13	; 0x0d
    1ab2:	3e 85       	ldd	r19, Y+14	; 0x0e
    1ab4:	2f 5f       	subi	r18, 0xFF	; 255
    1ab6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ab8:	3e 87       	std	Y+14, r19	; 0x0e
    1aba:	2d 87       	std	Y+13, r18	; 0x0d
    1abc:	80 16       	cp	r8, r16
    1abe:	91 06       	cpc	r9, r17
    1ac0:	2c f0       	brlt	.+10     	; 0x1acc <vfprintf+0x324>
    1ac2:	b7 01       	movw	r22, r14
    1ac4:	90 e0       	ldi	r25, 0x00	; 0
    1ac6:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1aca:	d9 cf       	rjmp	.-78     	; 0x1a7e <vfprintf+0x2d6>
    1acc:	c8 14       	cp	r12, r8
    1ace:	d9 04       	cpc	r13, r9
    1ad0:	41 f4       	brne	.+16     	; 0x1ae2 <vfprintf+0x33a>
    1ad2:	9a 81       	ldd	r25, Y+2	; 0x02
    1ad4:	96 33       	cpi	r25, 0x36	; 54
    1ad6:	20 f4       	brcc	.+8      	; 0x1ae0 <vfprintf+0x338>
    1ad8:	95 33       	cpi	r25, 0x35	; 53
    1ada:	19 f4       	brne	.+6      	; 0x1ae2 <vfprintf+0x33a>
    1adc:	3c 85       	ldd	r19, Y+12	; 0x0c
    1ade:	34 ff       	sbrs	r19, 4
    1ae0:	81 e3       	ldi	r24, 0x31	; 49
    1ae2:	b7 01       	movw	r22, r14
    1ae4:	90 e0       	ldi	r25, 0x00	; 0
    1ae6:	4e c0       	rjmp	.+156    	; 0x1b84 <vfprintf+0x3dc>
    1ae8:	8a 81       	ldd	r24, Y+2	; 0x02
    1aea:	81 33       	cpi	r24, 0x31	; 49
    1aec:	19 f0       	breq	.+6      	; 0x1af4 <vfprintf+0x34c>
    1aee:	9c 85       	ldd	r25, Y+12	; 0x0c
    1af0:	9f 7e       	andi	r25, 0xEF	; 239
    1af2:	9c 87       	std	Y+12, r25	; 0x0c
    1af4:	b7 01       	movw	r22, r14
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1afc:	11 11       	cpse	r17, r1
    1afe:	05 c0       	rjmp	.+10     	; 0x1b0a <vfprintf+0x362>
    1b00:	94 fc       	sbrc	r9, 4
    1b02:	18 c0       	rjmp	.+48     	; 0x1b34 <vfprintf+0x38c>
    1b04:	85 e6       	ldi	r24, 0x65	; 101
    1b06:	90 e0       	ldi	r25, 0x00	; 0
    1b08:	17 c0       	rjmp	.+46     	; 0x1b38 <vfprintf+0x390>
    1b0a:	b7 01       	movw	r22, r14
    1b0c:	8e e2       	ldi	r24, 0x2E	; 46
    1b0e:	90 e0       	ldi	r25, 0x00	; 0
    1b10:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1b14:	1e 5f       	subi	r17, 0xFE	; 254
    1b16:	82 e0       	ldi	r24, 0x02	; 2
    1b18:	01 e0       	ldi	r16, 0x01	; 1
    1b1a:	08 0f       	add	r16, r24
    1b1c:	f3 01       	movw	r30, r6
    1b1e:	e8 0f       	add	r30, r24
    1b20:	f1 1d       	adc	r31, r1
    1b22:	80 81       	ld	r24, Z
    1b24:	b7 01       	movw	r22, r14
    1b26:	90 e0       	ldi	r25, 0x00	; 0
    1b28:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1b2c:	80 2f       	mov	r24, r16
    1b2e:	01 13       	cpse	r16, r17
    1b30:	f3 cf       	rjmp	.-26     	; 0x1b18 <vfprintf+0x370>
    1b32:	e6 cf       	rjmp	.-52     	; 0x1b00 <vfprintf+0x358>
    1b34:	85 e4       	ldi	r24, 0x45	; 69
    1b36:	90 e0       	ldi	r25, 0x00	; 0
    1b38:	b7 01       	movw	r22, r14
    1b3a:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1b3e:	d7 fc       	sbrc	r13, 7
    1b40:	06 c0       	rjmp	.+12     	; 0x1b4e <vfprintf+0x3a6>
    1b42:	c1 14       	cp	r12, r1
    1b44:	d1 04       	cpc	r13, r1
    1b46:	41 f4       	brne	.+16     	; 0x1b58 <vfprintf+0x3b0>
    1b48:	ec 85       	ldd	r30, Y+12	; 0x0c
    1b4a:	e4 ff       	sbrs	r30, 4
    1b4c:	05 c0       	rjmp	.+10     	; 0x1b58 <vfprintf+0x3b0>
    1b4e:	d1 94       	neg	r13
    1b50:	c1 94       	neg	r12
    1b52:	d1 08       	sbc	r13, r1
    1b54:	8d e2       	ldi	r24, 0x2D	; 45
    1b56:	01 c0       	rjmp	.+2      	; 0x1b5a <vfprintf+0x3b2>
    1b58:	8b e2       	ldi	r24, 0x2B	; 43
    1b5a:	b7 01       	movw	r22, r14
    1b5c:	90 e0       	ldi	r25, 0x00	; 0
    1b5e:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1b62:	80 e3       	ldi	r24, 0x30	; 48
    1b64:	2a e0       	ldi	r18, 0x0A	; 10
    1b66:	c2 16       	cp	r12, r18
    1b68:	d1 04       	cpc	r13, r1
    1b6a:	2c f0       	brlt	.+10     	; 0x1b76 <vfprintf+0x3ce>
    1b6c:	8f 5f       	subi	r24, 0xFF	; 255
    1b6e:	fa e0       	ldi	r31, 0x0A	; 10
    1b70:	cf 1a       	sub	r12, r31
    1b72:	d1 08       	sbc	r13, r1
    1b74:	f7 cf       	rjmp	.-18     	; 0x1b64 <vfprintf+0x3bc>
    1b76:	b7 01       	movw	r22, r14
    1b78:	90 e0       	ldi	r25, 0x00	; 0
    1b7a:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1b7e:	b7 01       	movw	r22, r14
    1b80:	c6 01       	movw	r24, r12
    1b82:	c0 96       	adiw	r24, 0x30	; 48
    1b84:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1b88:	54 c1       	rjmp	.+680    	; 0x1e32 <vfprintf+0x68a>
    1b8a:	83 36       	cpi	r24, 0x63	; 99
    1b8c:	31 f0       	breq	.+12     	; 0x1b9a <vfprintf+0x3f2>
    1b8e:	83 37       	cpi	r24, 0x73	; 115
    1b90:	79 f0       	breq	.+30     	; 0x1bb0 <vfprintf+0x408>
    1b92:	83 35       	cpi	r24, 0x53	; 83
    1b94:	09 f0       	breq	.+2      	; 0x1b98 <vfprintf+0x3f0>
    1b96:	56 c0       	rjmp	.+172    	; 0x1c44 <vfprintf+0x49c>
    1b98:	20 c0       	rjmp	.+64     	; 0x1bda <vfprintf+0x432>
    1b9a:	56 01       	movw	r10, r12
    1b9c:	32 e0       	ldi	r19, 0x02	; 2
    1b9e:	a3 0e       	add	r10, r19
    1ba0:	b1 1c       	adc	r11, r1
    1ba2:	f6 01       	movw	r30, r12
    1ba4:	80 81       	ld	r24, Z
    1ba6:	89 83       	std	Y+1, r24	; 0x01
    1ba8:	01 e0       	ldi	r16, 0x01	; 1
    1baa:	10 e0       	ldi	r17, 0x00	; 0
    1bac:	63 01       	movw	r12, r6
    1bae:	12 c0       	rjmp	.+36     	; 0x1bd4 <vfprintf+0x42c>
    1bb0:	56 01       	movw	r10, r12
    1bb2:	f2 e0       	ldi	r31, 0x02	; 2
    1bb4:	af 0e       	add	r10, r31
    1bb6:	b1 1c       	adc	r11, r1
    1bb8:	f6 01       	movw	r30, r12
    1bba:	c0 80       	ld	r12, Z
    1bbc:	d1 80       	ldd	r13, Z+1	; 0x01
    1bbe:	96 fe       	sbrs	r9, 6
    1bc0:	03 c0       	rjmp	.+6      	; 0x1bc8 <vfprintf+0x420>
    1bc2:	61 2f       	mov	r22, r17
    1bc4:	70 e0       	ldi	r23, 0x00	; 0
    1bc6:	02 c0       	rjmp	.+4      	; 0x1bcc <vfprintf+0x424>
    1bc8:	6f ef       	ldi	r22, 0xFF	; 255
    1bca:	7f ef       	ldi	r23, 0xFF	; 255
    1bcc:	c6 01       	movw	r24, r12
    1bce:	0e 94 d4 10 	call	0x21a8	; 0x21a8 <strnlen>
    1bd2:	8c 01       	movw	r16, r24
    1bd4:	f9 2d       	mov	r31, r9
    1bd6:	ff 77       	andi	r31, 0x7F	; 127
    1bd8:	14 c0       	rjmp	.+40     	; 0x1c02 <vfprintf+0x45a>
    1bda:	56 01       	movw	r10, r12
    1bdc:	22 e0       	ldi	r18, 0x02	; 2
    1bde:	a2 0e       	add	r10, r18
    1be0:	b1 1c       	adc	r11, r1
    1be2:	f6 01       	movw	r30, r12
    1be4:	c0 80       	ld	r12, Z
    1be6:	d1 80       	ldd	r13, Z+1	; 0x01
    1be8:	96 fe       	sbrs	r9, 6
    1bea:	03 c0       	rjmp	.+6      	; 0x1bf2 <vfprintf+0x44a>
    1bec:	61 2f       	mov	r22, r17
    1bee:	70 e0       	ldi	r23, 0x00	; 0
    1bf0:	02 c0       	rjmp	.+4      	; 0x1bf6 <vfprintf+0x44e>
    1bf2:	6f ef       	ldi	r22, 0xFF	; 255
    1bf4:	7f ef       	ldi	r23, 0xFF	; 255
    1bf6:	c6 01       	movw	r24, r12
    1bf8:	0e 94 c9 10 	call	0x2192	; 0x2192 <strnlen_P>
    1bfc:	8c 01       	movw	r16, r24
    1bfe:	f9 2d       	mov	r31, r9
    1c00:	f0 68       	ori	r31, 0x80	; 128
    1c02:	9f 2e       	mov	r9, r31
    1c04:	f3 fd       	sbrc	r31, 3
    1c06:	1a c0       	rjmp	.+52     	; 0x1c3c <vfprintf+0x494>
    1c08:	85 2d       	mov	r24, r5
    1c0a:	90 e0       	ldi	r25, 0x00	; 0
    1c0c:	08 17       	cp	r16, r24
    1c0e:	19 07       	cpc	r17, r25
    1c10:	a8 f4       	brcc	.+42     	; 0x1c3c <vfprintf+0x494>
    1c12:	b7 01       	movw	r22, r14
    1c14:	80 e2       	ldi	r24, 0x20	; 32
    1c16:	90 e0       	ldi	r25, 0x00	; 0
    1c18:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1c1c:	5a 94       	dec	r5
    1c1e:	f4 cf       	rjmp	.-24     	; 0x1c08 <vfprintf+0x460>
    1c20:	f6 01       	movw	r30, r12
    1c22:	97 fc       	sbrc	r9, 7
    1c24:	85 91       	lpm	r24, Z+
    1c26:	97 fe       	sbrs	r9, 7
    1c28:	81 91       	ld	r24, Z+
    1c2a:	6f 01       	movw	r12, r30
    1c2c:	b7 01       	movw	r22, r14
    1c2e:	90 e0       	ldi	r25, 0x00	; 0
    1c30:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1c34:	51 10       	cpse	r5, r1
    1c36:	5a 94       	dec	r5
    1c38:	01 50       	subi	r16, 0x01	; 1
    1c3a:	11 09       	sbc	r17, r1
    1c3c:	01 15       	cp	r16, r1
    1c3e:	11 05       	cpc	r17, r1
    1c40:	79 f7       	brne	.-34     	; 0x1c20 <vfprintf+0x478>
    1c42:	f7 c0       	rjmp	.+494    	; 0x1e32 <vfprintf+0x68a>
    1c44:	84 36       	cpi	r24, 0x64	; 100
    1c46:	11 f0       	breq	.+4      	; 0x1c4c <vfprintf+0x4a4>
    1c48:	89 36       	cpi	r24, 0x69	; 105
    1c4a:	61 f5       	brne	.+88     	; 0x1ca4 <vfprintf+0x4fc>
    1c4c:	56 01       	movw	r10, r12
    1c4e:	97 fe       	sbrs	r9, 7
    1c50:	09 c0       	rjmp	.+18     	; 0x1c64 <vfprintf+0x4bc>
    1c52:	24 e0       	ldi	r18, 0x04	; 4
    1c54:	a2 0e       	add	r10, r18
    1c56:	b1 1c       	adc	r11, r1
    1c58:	f6 01       	movw	r30, r12
    1c5a:	60 81       	ld	r22, Z
    1c5c:	71 81       	ldd	r23, Z+1	; 0x01
    1c5e:	82 81       	ldd	r24, Z+2	; 0x02
    1c60:	93 81       	ldd	r25, Z+3	; 0x03
    1c62:	0a c0       	rjmp	.+20     	; 0x1c78 <vfprintf+0x4d0>
    1c64:	f2 e0       	ldi	r31, 0x02	; 2
    1c66:	af 0e       	add	r10, r31
    1c68:	b1 1c       	adc	r11, r1
    1c6a:	f6 01       	movw	r30, r12
    1c6c:	60 81       	ld	r22, Z
    1c6e:	71 81       	ldd	r23, Z+1	; 0x01
    1c70:	07 2e       	mov	r0, r23
    1c72:	00 0c       	add	r0, r0
    1c74:	88 0b       	sbc	r24, r24
    1c76:	99 0b       	sbc	r25, r25
    1c78:	f9 2d       	mov	r31, r9
    1c7a:	ff 76       	andi	r31, 0x6F	; 111
    1c7c:	9f 2e       	mov	r9, r31
    1c7e:	97 ff       	sbrs	r25, 7
    1c80:	09 c0       	rjmp	.+18     	; 0x1c94 <vfprintf+0x4ec>
    1c82:	90 95       	com	r25
    1c84:	80 95       	com	r24
    1c86:	70 95       	com	r23
    1c88:	61 95       	neg	r22
    1c8a:	7f 4f       	sbci	r23, 0xFF	; 255
    1c8c:	8f 4f       	sbci	r24, 0xFF	; 255
    1c8e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c90:	f0 68       	ori	r31, 0x80	; 128
    1c92:	9f 2e       	mov	r9, r31
    1c94:	2a e0       	ldi	r18, 0x0A	; 10
    1c96:	30 e0       	ldi	r19, 0x00	; 0
    1c98:	a3 01       	movw	r20, r6
    1c9a:	0e 94 69 11 	call	0x22d2	; 0x22d2 <__ultoa_invert>
    1c9e:	c8 2e       	mov	r12, r24
    1ca0:	c6 18       	sub	r12, r6
    1ca2:	3f c0       	rjmp	.+126    	; 0x1d22 <vfprintf+0x57a>
    1ca4:	09 2d       	mov	r16, r9
    1ca6:	85 37       	cpi	r24, 0x75	; 117
    1ca8:	21 f4       	brne	.+8      	; 0x1cb2 <vfprintf+0x50a>
    1caa:	0f 7e       	andi	r16, 0xEF	; 239
    1cac:	2a e0       	ldi	r18, 0x0A	; 10
    1cae:	30 e0       	ldi	r19, 0x00	; 0
    1cb0:	1d c0       	rjmp	.+58     	; 0x1cec <vfprintf+0x544>
    1cb2:	09 7f       	andi	r16, 0xF9	; 249
    1cb4:	8f 36       	cpi	r24, 0x6F	; 111
    1cb6:	91 f0       	breq	.+36     	; 0x1cdc <vfprintf+0x534>
    1cb8:	18 f4       	brcc	.+6      	; 0x1cc0 <vfprintf+0x518>
    1cba:	88 35       	cpi	r24, 0x58	; 88
    1cbc:	59 f0       	breq	.+22     	; 0x1cd4 <vfprintf+0x52c>
    1cbe:	c3 c0       	rjmp	.+390    	; 0x1e46 <vfprintf+0x69e>
    1cc0:	80 37       	cpi	r24, 0x70	; 112
    1cc2:	19 f0       	breq	.+6      	; 0x1cca <vfprintf+0x522>
    1cc4:	88 37       	cpi	r24, 0x78	; 120
    1cc6:	11 f0       	breq	.+4      	; 0x1ccc <vfprintf+0x524>
    1cc8:	be c0       	rjmp	.+380    	; 0x1e46 <vfprintf+0x69e>
    1cca:	00 61       	ori	r16, 0x10	; 16
    1ccc:	04 ff       	sbrs	r16, 4
    1cce:	09 c0       	rjmp	.+18     	; 0x1ce2 <vfprintf+0x53a>
    1cd0:	04 60       	ori	r16, 0x04	; 4
    1cd2:	07 c0       	rjmp	.+14     	; 0x1ce2 <vfprintf+0x53a>
    1cd4:	94 fe       	sbrs	r9, 4
    1cd6:	08 c0       	rjmp	.+16     	; 0x1ce8 <vfprintf+0x540>
    1cd8:	06 60       	ori	r16, 0x06	; 6
    1cda:	06 c0       	rjmp	.+12     	; 0x1ce8 <vfprintf+0x540>
    1cdc:	28 e0       	ldi	r18, 0x08	; 8
    1cde:	30 e0       	ldi	r19, 0x00	; 0
    1ce0:	05 c0       	rjmp	.+10     	; 0x1cec <vfprintf+0x544>
    1ce2:	20 e1       	ldi	r18, 0x10	; 16
    1ce4:	30 e0       	ldi	r19, 0x00	; 0
    1ce6:	02 c0       	rjmp	.+4      	; 0x1cec <vfprintf+0x544>
    1ce8:	20 e1       	ldi	r18, 0x10	; 16
    1cea:	32 e0       	ldi	r19, 0x02	; 2
    1cec:	56 01       	movw	r10, r12
    1cee:	07 ff       	sbrs	r16, 7
    1cf0:	09 c0       	rjmp	.+18     	; 0x1d04 <vfprintf+0x55c>
    1cf2:	84 e0       	ldi	r24, 0x04	; 4
    1cf4:	a8 0e       	add	r10, r24
    1cf6:	b1 1c       	adc	r11, r1
    1cf8:	f6 01       	movw	r30, r12
    1cfa:	60 81       	ld	r22, Z
    1cfc:	71 81       	ldd	r23, Z+1	; 0x01
    1cfe:	82 81       	ldd	r24, Z+2	; 0x02
    1d00:	93 81       	ldd	r25, Z+3	; 0x03
    1d02:	08 c0       	rjmp	.+16     	; 0x1d14 <vfprintf+0x56c>
    1d04:	f2 e0       	ldi	r31, 0x02	; 2
    1d06:	af 0e       	add	r10, r31
    1d08:	b1 1c       	adc	r11, r1
    1d0a:	f6 01       	movw	r30, r12
    1d0c:	60 81       	ld	r22, Z
    1d0e:	71 81       	ldd	r23, Z+1	; 0x01
    1d10:	80 e0       	ldi	r24, 0x00	; 0
    1d12:	90 e0       	ldi	r25, 0x00	; 0
    1d14:	a3 01       	movw	r20, r6
    1d16:	0e 94 69 11 	call	0x22d2	; 0x22d2 <__ultoa_invert>
    1d1a:	c8 2e       	mov	r12, r24
    1d1c:	c6 18       	sub	r12, r6
    1d1e:	0f 77       	andi	r16, 0x7F	; 127
    1d20:	90 2e       	mov	r9, r16
    1d22:	96 fe       	sbrs	r9, 6
    1d24:	0b c0       	rjmp	.+22     	; 0x1d3c <vfprintf+0x594>
    1d26:	09 2d       	mov	r16, r9
    1d28:	0e 7f       	andi	r16, 0xFE	; 254
    1d2a:	c1 16       	cp	r12, r17
    1d2c:	50 f4       	brcc	.+20     	; 0x1d42 <vfprintf+0x59a>
    1d2e:	94 fe       	sbrs	r9, 4
    1d30:	0a c0       	rjmp	.+20     	; 0x1d46 <vfprintf+0x59e>
    1d32:	92 fc       	sbrc	r9, 2
    1d34:	08 c0       	rjmp	.+16     	; 0x1d46 <vfprintf+0x59e>
    1d36:	09 2d       	mov	r16, r9
    1d38:	0e 7e       	andi	r16, 0xEE	; 238
    1d3a:	05 c0       	rjmp	.+10     	; 0x1d46 <vfprintf+0x59e>
    1d3c:	dc 2c       	mov	r13, r12
    1d3e:	09 2d       	mov	r16, r9
    1d40:	03 c0       	rjmp	.+6      	; 0x1d48 <vfprintf+0x5a0>
    1d42:	dc 2c       	mov	r13, r12
    1d44:	01 c0       	rjmp	.+2      	; 0x1d48 <vfprintf+0x5a0>
    1d46:	d1 2e       	mov	r13, r17
    1d48:	04 ff       	sbrs	r16, 4
    1d4a:	0d c0       	rjmp	.+26     	; 0x1d66 <vfprintf+0x5be>
    1d4c:	fe 01       	movw	r30, r28
    1d4e:	ec 0d       	add	r30, r12
    1d50:	f1 1d       	adc	r31, r1
    1d52:	80 81       	ld	r24, Z
    1d54:	80 33       	cpi	r24, 0x30	; 48
    1d56:	11 f4       	brne	.+4      	; 0x1d5c <vfprintf+0x5b4>
    1d58:	09 7e       	andi	r16, 0xE9	; 233
    1d5a:	09 c0       	rjmp	.+18     	; 0x1d6e <vfprintf+0x5c6>
    1d5c:	02 ff       	sbrs	r16, 2
    1d5e:	06 c0       	rjmp	.+12     	; 0x1d6c <vfprintf+0x5c4>
    1d60:	d3 94       	inc	r13
    1d62:	d3 94       	inc	r13
    1d64:	04 c0       	rjmp	.+8      	; 0x1d6e <vfprintf+0x5c6>
    1d66:	80 2f       	mov	r24, r16
    1d68:	86 78       	andi	r24, 0x86	; 134
    1d6a:	09 f0       	breq	.+2      	; 0x1d6e <vfprintf+0x5c6>
    1d6c:	d3 94       	inc	r13
    1d6e:	03 fd       	sbrc	r16, 3
    1d70:	11 c0       	rjmp	.+34     	; 0x1d94 <vfprintf+0x5ec>
    1d72:	00 ff       	sbrs	r16, 0
    1d74:	06 c0       	rjmp	.+12     	; 0x1d82 <vfprintf+0x5da>
    1d76:	1c 2d       	mov	r17, r12
    1d78:	d5 14       	cp	r13, r5
    1d7a:	80 f4       	brcc	.+32     	; 0x1d9c <vfprintf+0x5f4>
    1d7c:	15 0d       	add	r17, r5
    1d7e:	1d 19       	sub	r17, r13
    1d80:	0d c0       	rjmp	.+26     	; 0x1d9c <vfprintf+0x5f4>
    1d82:	d5 14       	cp	r13, r5
    1d84:	58 f4       	brcc	.+22     	; 0x1d9c <vfprintf+0x5f4>
    1d86:	b7 01       	movw	r22, r14
    1d88:	80 e2       	ldi	r24, 0x20	; 32
    1d8a:	90 e0       	ldi	r25, 0x00	; 0
    1d8c:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1d90:	d3 94       	inc	r13
    1d92:	f7 cf       	rjmp	.-18     	; 0x1d82 <vfprintf+0x5da>
    1d94:	d5 14       	cp	r13, r5
    1d96:	10 f4       	brcc	.+4      	; 0x1d9c <vfprintf+0x5f4>
    1d98:	5d 18       	sub	r5, r13
    1d9a:	01 c0       	rjmp	.+2      	; 0x1d9e <vfprintf+0x5f6>
    1d9c:	51 2c       	mov	r5, r1
    1d9e:	04 ff       	sbrs	r16, 4
    1da0:	10 c0       	rjmp	.+32     	; 0x1dc2 <vfprintf+0x61a>
    1da2:	b7 01       	movw	r22, r14
    1da4:	80 e3       	ldi	r24, 0x30	; 48
    1da6:	90 e0       	ldi	r25, 0x00	; 0
    1da8:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1dac:	02 ff       	sbrs	r16, 2
    1dae:	17 c0       	rjmp	.+46     	; 0x1dde <vfprintf+0x636>
    1db0:	01 fd       	sbrc	r16, 1
    1db2:	03 c0       	rjmp	.+6      	; 0x1dba <vfprintf+0x612>
    1db4:	88 e7       	ldi	r24, 0x78	; 120
    1db6:	90 e0       	ldi	r25, 0x00	; 0
    1db8:	02 c0       	rjmp	.+4      	; 0x1dbe <vfprintf+0x616>
    1dba:	88 e5       	ldi	r24, 0x58	; 88
    1dbc:	90 e0       	ldi	r25, 0x00	; 0
    1dbe:	b7 01       	movw	r22, r14
    1dc0:	0c c0       	rjmp	.+24     	; 0x1dda <vfprintf+0x632>
    1dc2:	80 2f       	mov	r24, r16
    1dc4:	86 78       	andi	r24, 0x86	; 134
    1dc6:	59 f0       	breq	.+22     	; 0x1dde <vfprintf+0x636>
    1dc8:	01 ff       	sbrs	r16, 1
    1dca:	02 c0       	rjmp	.+4      	; 0x1dd0 <vfprintf+0x628>
    1dcc:	8b e2       	ldi	r24, 0x2B	; 43
    1dce:	01 c0       	rjmp	.+2      	; 0x1dd2 <vfprintf+0x62a>
    1dd0:	80 e2       	ldi	r24, 0x20	; 32
    1dd2:	07 fd       	sbrc	r16, 7
    1dd4:	8d e2       	ldi	r24, 0x2D	; 45
    1dd6:	b7 01       	movw	r22, r14
    1dd8:	90 e0       	ldi	r25, 0x00	; 0
    1dda:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1dde:	c1 16       	cp	r12, r17
    1de0:	38 f4       	brcc	.+14     	; 0x1df0 <vfprintf+0x648>
    1de2:	b7 01       	movw	r22, r14
    1de4:	80 e3       	ldi	r24, 0x30	; 48
    1de6:	90 e0       	ldi	r25, 0x00	; 0
    1de8:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1dec:	11 50       	subi	r17, 0x01	; 1
    1dee:	f7 cf       	rjmp	.-18     	; 0x1dde <vfprintf+0x636>
    1df0:	ca 94       	dec	r12
    1df2:	f3 01       	movw	r30, r6
    1df4:	ec 0d       	add	r30, r12
    1df6:	f1 1d       	adc	r31, r1
    1df8:	80 81       	ld	r24, Z
    1dfa:	b7 01       	movw	r22, r14
    1dfc:	90 e0       	ldi	r25, 0x00	; 0
    1dfe:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1e02:	c1 10       	cpse	r12, r1
    1e04:	f5 cf       	rjmp	.-22     	; 0x1df0 <vfprintf+0x648>
    1e06:	15 c0       	rjmp	.+42     	; 0x1e32 <vfprintf+0x68a>
    1e08:	f4 e0       	ldi	r31, 0x04	; 4
    1e0a:	f5 15       	cp	r31, r5
    1e0c:	60 f5       	brcc	.+88     	; 0x1e66 <vfprintf+0x6be>
    1e0e:	84 e0       	ldi	r24, 0x04	; 4
    1e10:	58 1a       	sub	r5, r24
    1e12:	93 fe       	sbrs	r9, 3
    1e14:	1f c0       	rjmp	.+62     	; 0x1e54 <vfprintf+0x6ac>
    1e16:	01 11       	cpse	r16, r1
    1e18:	27 c0       	rjmp	.+78     	; 0x1e68 <vfprintf+0x6c0>
    1e1a:	2c 85       	ldd	r18, Y+12	; 0x0c
    1e1c:	23 ff       	sbrs	r18, 3
    1e1e:	2a c0       	rjmp	.+84     	; 0x1e74 <vfprintf+0x6cc>
    1e20:	00 e0       	ldi	r16, 0x00	; 0
    1e22:	11 e0       	ldi	r17, 0x01	; 1
    1e24:	39 2d       	mov	r19, r9
    1e26:	30 71       	andi	r19, 0x10	; 16
    1e28:	93 2e       	mov	r9, r19
    1e2a:	f8 01       	movw	r30, r16
    1e2c:	84 91       	lpm	r24, Z
    1e2e:	81 11       	cpse	r24, r1
    1e30:	24 c0       	rjmp	.+72     	; 0x1e7a <vfprintf+0x6d2>
    1e32:	55 20       	and	r5, r5
    1e34:	09 f4       	brne	.+2      	; 0x1e38 <vfprintf+0x690>
    1e36:	e4 cc       	rjmp	.-1592   	; 0x1800 <vfprintf+0x58>
    1e38:	b7 01       	movw	r22, r14
    1e3a:	80 e2       	ldi	r24, 0x20	; 32
    1e3c:	90 e0       	ldi	r25, 0x00	; 0
    1e3e:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1e42:	5a 94       	dec	r5
    1e44:	f6 cf       	rjmp	.-20     	; 0x1e32 <vfprintf+0x68a>
    1e46:	f7 01       	movw	r30, r14
    1e48:	86 81       	ldd	r24, Z+6	; 0x06
    1e4a:	97 81       	ldd	r25, Z+7	; 0x07
    1e4c:	26 c0       	rjmp	.+76     	; 0x1e9a <vfprintf+0x6f2>
    1e4e:	8f ef       	ldi	r24, 0xFF	; 255
    1e50:	9f ef       	ldi	r25, 0xFF	; 255
    1e52:	23 c0       	rjmp	.+70     	; 0x1e9a <vfprintf+0x6f2>
    1e54:	b7 01       	movw	r22, r14
    1e56:	80 e2       	ldi	r24, 0x20	; 32
    1e58:	90 e0       	ldi	r25, 0x00	; 0
    1e5a:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1e5e:	5a 94       	dec	r5
    1e60:	51 10       	cpse	r5, r1
    1e62:	f8 cf       	rjmp	.-16     	; 0x1e54 <vfprintf+0x6ac>
    1e64:	d8 cf       	rjmp	.-80     	; 0x1e16 <vfprintf+0x66e>
    1e66:	51 2c       	mov	r5, r1
    1e68:	b7 01       	movw	r22, r14
    1e6a:	80 2f       	mov	r24, r16
    1e6c:	90 e0       	ldi	r25, 0x00	; 0
    1e6e:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1e72:	d3 cf       	rjmp	.-90     	; 0x1e1a <vfprintf+0x672>
    1e74:	04 e0       	ldi	r16, 0x04	; 4
    1e76:	11 e0       	ldi	r17, 0x01	; 1
    1e78:	d5 cf       	rjmp	.-86     	; 0x1e24 <vfprintf+0x67c>
    1e7a:	91 10       	cpse	r9, r1
    1e7c:	80 52       	subi	r24, 0x20	; 32
    1e7e:	b7 01       	movw	r22, r14
    1e80:	90 e0       	ldi	r25, 0x00	; 0
    1e82:	0e 94 e7 10 	call	0x21ce	; 0x21ce <fputc>
    1e86:	0f 5f       	subi	r16, 0xFF	; 255
    1e88:	1f 4f       	sbci	r17, 0xFF	; 255
    1e8a:	cf cf       	rjmp	.-98     	; 0x1e2a <vfprintf+0x682>
    1e8c:	23 e0       	ldi	r18, 0x03	; 3
    1e8e:	25 15       	cp	r18, r5
    1e90:	10 f4       	brcc	.+4      	; 0x1e96 <vfprintf+0x6ee>
    1e92:	83 e0       	ldi	r24, 0x03	; 3
    1e94:	bd cf       	rjmp	.-134    	; 0x1e10 <vfprintf+0x668>
    1e96:	51 2c       	mov	r5, r1
    1e98:	c0 cf       	rjmp	.-128    	; 0x1e1a <vfprintf+0x672>
    1e9a:	60 96       	adiw	r28, 0x10	; 16
    1e9c:	e2 e1       	ldi	r30, 0x12	; 18
    1e9e:	0c 94 b4 0f 	jmp	0x1f68	; 0x1f68 <__epilogue_restores__>

00001ea2 <__udivmodsi4>:
    1ea2:	a1 e2       	ldi	r26, 0x21	; 33
    1ea4:	1a 2e       	mov	r1, r26
    1ea6:	aa 1b       	sub	r26, r26
    1ea8:	bb 1b       	sub	r27, r27
    1eaa:	fd 01       	movw	r30, r26
    1eac:	0d c0       	rjmp	.+26     	; 0x1ec8 <__udivmodsi4_ep>

00001eae <__udivmodsi4_loop>:
    1eae:	aa 1f       	adc	r26, r26
    1eb0:	bb 1f       	adc	r27, r27
    1eb2:	ee 1f       	adc	r30, r30
    1eb4:	ff 1f       	adc	r31, r31
    1eb6:	a2 17       	cp	r26, r18
    1eb8:	b3 07       	cpc	r27, r19
    1eba:	e4 07       	cpc	r30, r20
    1ebc:	f5 07       	cpc	r31, r21
    1ebe:	20 f0       	brcs	.+8      	; 0x1ec8 <__udivmodsi4_ep>
    1ec0:	a2 1b       	sub	r26, r18
    1ec2:	b3 0b       	sbc	r27, r19
    1ec4:	e4 0b       	sbc	r30, r20
    1ec6:	f5 0b       	sbc	r31, r21

00001ec8 <__udivmodsi4_ep>:
    1ec8:	66 1f       	adc	r22, r22
    1eca:	77 1f       	adc	r23, r23
    1ecc:	88 1f       	adc	r24, r24
    1ece:	99 1f       	adc	r25, r25
    1ed0:	1a 94       	dec	r1
    1ed2:	69 f7       	brne	.-38     	; 0x1eae <__udivmodsi4_loop>
    1ed4:	60 95       	com	r22
    1ed6:	70 95       	com	r23
    1ed8:	80 95       	com	r24
    1eda:	90 95       	com	r25
    1edc:	9b 01       	movw	r18, r22
    1ede:	ac 01       	movw	r20, r24
    1ee0:	bd 01       	movw	r22, r26
    1ee2:	cf 01       	movw	r24, r30
    1ee4:	08 95       	ret

00001ee6 <__divmodsi4>:
    1ee6:	05 2e       	mov	r0, r21
    1ee8:	97 fb       	bst	r25, 7
    1eea:	1e f4       	brtc	.+6      	; 0x1ef2 <__divmodsi4+0xc>
    1eec:	00 94       	com	r0
    1eee:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <__negsi2>
    1ef2:	57 fd       	sbrc	r21, 7
    1ef4:	07 d0       	rcall	.+14     	; 0x1f04 <__divmodsi4_neg2>
    1ef6:	0e 94 51 0f 	call	0x1ea2	; 0x1ea2 <__udivmodsi4>
    1efa:	07 fc       	sbrc	r0, 7
    1efc:	03 d0       	rcall	.+6      	; 0x1f04 <__divmodsi4_neg2>
    1efe:	4e f4       	brtc	.+18     	; 0x1f12 <__divmodsi4_exit>
    1f00:	0c 94 8a 0f 	jmp	0x1f14	; 0x1f14 <__negsi2>

00001f04 <__divmodsi4_neg2>:
    1f04:	50 95       	com	r21
    1f06:	40 95       	com	r20
    1f08:	30 95       	com	r19
    1f0a:	21 95       	neg	r18
    1f0c:	3f 4f       	sbci	r19, 0xFF	; 255
    1f0e:	4f 4f       	sbci	r20, 0xFF	; 255
    1f10:	5f 4f       	sbci	r21, 0xFF	; 255

00001f12 <__divmodsi4_exit>:
    1f12:	08 95       	ret

00001f14 <__negsi2>:
    1f14:	90 95       	com	r25
    1f16:	80 95       	com	r24
    1f18:	70 95       	com	r23
    1f1a:	61 95       	neg	r22
    1f1c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f1e:	8f 4f       	sbci	r24, 0xFF	; 255
    1f20:	9f 4f       	sbci	r25, 0xFF	; 255
    1f22:	08 95       	ret

00001f24 <__tablejump2__>:
    1f24:	ee 0f       	add	r30, r30
    1f26:	ff 1f       	adc	r31, r31
    1f28:	05 90       	lpm	r0, Z+
    1f2a:	f4 91       	lpm	r31, Z
    1f2c:	e0 2d       	mov	r30, r0
    1f2e:	09 94       	ijmp

00001f30 <__prologue_saves__>:
    1f30:	2f 92       	push	r2
    1f32:	3f 92       	push	r3
    1f34:	4f 92       	push	r4
    1f36:	5f 92       	push	r5
    1f38:	6f 92       	push	r6
    1f3a:	7f 92       	push	r7
    1f3c:	8f 92       	push	r8
    1f3e:	9f 92       	push	r9
    1f40:	af 92       	push	r10
    1f42:	bf 92       	push	r11
    1f44:	cf 92       	push	r12
    1f46:	df 92       	push	r13
    1f48:	ef 92       	push	r14
    1f4a:	ff 92       	push	r15
    1f4c:	0f 93       	push	r16
    1f4e:	1f 93       	push	r17
    1f50:	cf 93       	push	r28
    1f52:	df 93       	push	r29
    1f54:	cd b7       	in	r28, 0x3d	; 61
    1f56:	de b7       	in	r29, 0x3e	; 62
    1f58:	ca 1b       	sub	r28, r26
    1f5a:	db 0b       	sbc	r29, r27
    1f5c:	0f b6       	in	r0, 0x3f	; 63
    1f5e:	f8 94       	cli
    1f60:	de bf       	out	0x3e, r29	; 62
    1f62:	0f be       	out	0x3f, r0	; 63
    1f64:	cd bf       	out	0x3d, r28	; 61
    1f66:	09 94       	ijmp

00001f68 <__epilogue_restores__>:
    1f68:	2a 88       	ldd	r2, Y+18	; 0x12
    1f6a:	39 88       	ldd	r3, Y+17	; 0x11
    1f6c:	48 88       	ldd	r4, Y+16	; 0x10
    1f6e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f70:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f72:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f74:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f76:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f78:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f7a:	b9 84       	ldd	r11, Y+9	; 0x09
    1f7c:	c8 84       	ldd	r12, Y+8	; 0x08
    1f7e:	df 80       	ldd	r13, Y+7	; 0x07
    1f80:	ee 80       	ldd	r14, Y+6	; 0x06
    1f82:	fd 80       	ldd	r15, Y+5	; 0x05
    1f84:	0c 81       	ldd	r16, Y+4	; 0x04
    1f86:	1b 81       	ldd	r17, Y+3	; 0x03
    1f88:	aa 81       	ldd	r26, Y+2	; 0x02
    1f8a:	b9 81       	ldd	r27, Y+1	; 0x01
    1f8c:	ce 0f       	add	r28, r30
    1f8e:	d1 1d       	adc	r29, r1
    1f90:	0f b6       	in	r0, 0x3f	; 63
    1f92:	f8 94       	cli
    1f94:	de bf       	out	0x3e, r29	; 62
    1f96:	0f be       	out	0x3f, r0	; 63
    1f98:	cd bf       	out	0x3d, r28	; 61
    1f9a:	ed 01       	movw	r28, r26
    1f9c:	08 95       	ret

00001f9e <atof>:
    1f9e:	66 27       	eor	r22, r22
    1fa0:	77 27       	eor	r23, r23
    1fa2:	0c 94 c7 11 	jmp	0x238e	; 0x238e <strtod>

00001fa6 <atoi>:
    1fa6:	fc 01       	movw	r30, r24
    1fa8:	88 27       	eor	r24, r24
    1faa:	99 27       	eor	r25, r25
    1fac:	e8 94       	clt
    1fae:	21 91       	ld	r18, Z+
    1fb0:	20 32       	cpi	r18, 0x20	; 32
    1fb2:	e9 f3       	breq	.-6      	; 0x1fae <atoi+0x8>
    1fb4:	29 30       	cpi	r18, 0x09	; 9
    1fb6:	10 f0       	brcs	.+4      	; 0x1fbc <atoi+0x16>
    1fb8:	2e 30       	cpi	r18, 0x0E	; 14
    1fba:	c8 f3       	brcs	.-14     	; 0x1fae <atoi+0x8>
    1fbc:	2b 32       	cpi	r18, 0x2B	; 43
    1fbe:	41 f0       	breq	.+16     	; 0x1fd0 <atoi+0x2a>
    1fc0:	2d 32       	cpi	r18, 0x2D	; 45
    1fc2:	39 f4       	brne	.+14     	; 0x1fd2 <atoi+0x2c>
    1fc4:	68 94       	set
    1fc6:	04 c0       	rjmp	.+8      	; 0x1fd0 <atoi+0x2a>
    1fc8:	0e 94 df 10 	call	0x21be	; 0x21be <__mulhi_const_10>
    1fcc:	82 0f       	add	r24, r18
    1fce:	91 1d       	adc	r25, r1
    1fd0:	21 91       	ld	r18, Z+
    1fd2:	20 53       	subi	r18, 0x30	; 48
    1fd4:	2a 30       	cpi	r18, 0x0A	; 10
    1fd6:	c0 f3       	brcs	.-16     	; 0x1fc8 <atoi+0x22>
    1fd8:	1e f4       	brtc	.+6      	; 0x1fe0 <atoi+0x3a>
    1fda:	90 95       	com	r25
    1fdc:	81 95       	neg	r24
    1fde:	9f 4f       	sbci	r25, 0xFF	; 255
    1fe0:	08 95       	ret

00001fe2 <__ftoa_engine>:
    1fe2:	28 30       	cpi	r18, 0x08	; 8
    1fe4:	08 f0       	brcs	.+2      	; 0x1fe8 <__ftoa_engine+0x6>
    1fe6:	27 e0       	ldi	r18, 0x07	; 7
    1fe8:	33 27       	eor	r19, r19
    1fea:	da 01       	movw	r26, r20
    1fec:	99 0f       	add	r25, r25
    1fee:	31 1d       	adc	r19, r1
    1ff0:	87 fd       	sbrc	r24, 7
    1ff2:	91 60       	ori	r25, 0x01	; 1
    1ff4:	00 96       	adiw	r24, 0x00	; 0
    1ff6:	61 05       	cpc	r22, r1
    1ff8:	71 05       	cpc	r23, r1
    1ffa:	39 f4       	brne	.+14     	; 0x200a <__ftoa_engine+0x28>
    1ffc:	32 60       	ori	r19, 0x02	; 2
    1ffe:	2e 5f       	subi	r18, 0xFE	; 254
    2000:	3d 93       	st	X+, r19
    2002:	30 e3       	ldi	r19, 0x30	; 48
    2004:	2a 95       	dec	r18
    2006:	e1 f7       	brne	.-8      	; 0x2000 <__ftoa_engine+0x1e>
    2008:	08 95       	ret
    200a:	9f 3f       	cpi	r25, 0xFF	; 255
    200c:	30 f0       	brcs	.+12     	; 0x201a <__ftoa_engine+0x38>
    200e:	80 38       	cpi	r24, 0x80	; 128
    2010:	71 05       	cpc	r23, r1
    2012:	61 05       	cpc	r22, r1
    2014:	09 f0       	breq	.+2      	; 0x2018 <__ftoa_engine+0x36>
    2016:	3c 5f       	subi	r19, 0xFC	; 252
    2018:	3c 5f       	subi	r19, 0xFC	; 252
    201a:	3d 93       	st	X+, r19
    201c:	91 30       	cpi	r25, 0x01	; 1
    201e:	08 f0       	brcs	.+2      	; 0x2022 <__ftoa_engine+0x40>
    2020:	80 68       	ori	r24, 0x80	; 128
    2022:	91 1d       	adc	r25, r1
    2024:	df 93       	push	r29
    2026:	cf 93       	push	r28
    2028:	1f 93       	push	r17
    202a:	0f 93       	push	r16
    202c:	ff 92       	push	r15
    202e:	ef 92       	push	r14
    2030:	19 2f       	mov	r17, r25
    2032:	98 7f       	andi	r25, 0xF8	; 248
    2034:	96 95       	lsr	r25
    2036:	e9 2f       	mov	r30, r25
    2038:	96 95       	lsr	r25
    203a:	96 95       	lsr	r25
    203c:	e9 0f       	add	r30, r25
    203e:	ff 27       	eor	r31, r31
    2040:	ee 59       	subi	r30, 0x9E	; 158
    2042:	fe 4f       	sbci	r31, 0xFE	; 254
    2044:	99 27       	eor	r25, r25
    2046:	33 27       	eor	r19, r19
    2048:	ee 24       	eor	r14, r14
    204a:	ff 24       	eor	r15, r15
    204c:	a7 01       	movw	r20, r14
    204e:	e7 01       	movw	r28, r14
    2050:	05 90       	lpm	r0, Z+
    2052:	08 94       	sec
    2054:	07 94       	ror	r0
    2056:	28 f4       	brcc	.+10     	; 0x2062 <__ftoa_engine+0x80>
    2058:	36 0f       	add	r19, r22
    205a:	e7 1e       	adc	r14, r23
    205c:	f8 1e       	adc	r15, r24
    205e:	49 1f       	adc	r20, r25
    2060:	51 1d       	adc	r21, r1
    2062:	66 0f       	add	r22, r22
    2064:	77 1f       	adc	r23, r23
    2066:	88 1f       	adc	r24, r24
    2068:	99 1f       	adc	r25, r25
    206a:	06 94       	lsr	r0
    206c:	a1 f7       	brne	.-24     	; 0x2056 <__ftoa_engine+0x74>
    206e:	05 90       	lpm	r0, Z+
    2070:	07 94       	ror	r0
    2072:	28 f4       	brcc	.+10     	; 0x207e <__ftoa_engine+0x9c>
    2074:	e7 0e       	add	r14, r23
    2076:	f8 1e       	adc	r15, r24
    2078:	49 1f       	adc	r20, r25
    207a:	56 1f       	adc	r21, r22
    207c:	c1 1d       	adc	r28, r1
    207e:	77 0f       	add	r23, r23
    2080:	88 1f       	adc	r24, r24
    2082:	99 1f       	adc	r25, r25
    2084:	66 1f       	adc	r22, r22
    2086:	06 94       	lsr	r0
    2088:	a1 f7       	brne	.-24     	; 0x2072 <__ftoa_engine+0x90>
    208a:	05 90       	lpm	r0, Z+
    208c:	07 94       	ror	r0
    208e:	28 f4       	brcc	.+10     	; 0x209a <__ftoa_engine+0xb8>
    2090:	f8 0e       	add	r15, r24
    2092:	49 1f       	adc	r20, r25
    2094:	56 1f       	adc	r21, r22
    2096:	c7 1f       	adc	r28, r23
    2098:	d1 1d       	adc	r29, r1
    209a:	88 0f       	add	r24, r24
    209c:	99 1f       	adc	r25, r25
    209e:	66 1f       	adc	r22, r22
    20a0:	77 1f       	adc	r23, r23
    20a2:	06 94       	lsr	r0
    20a4:	a1 f7       	brne	.-24     	; 0x208e <__ftoa_engine+0xac>
    20a6:	05 90       	lpm	r0, Z+
    20a8:	07 94       	ror	r0
    20aa:	20 f4       	brcc	.+8      	; 0x20b4 <__ftoa_engine+0xd2>
    20ac:	49 0f       	add	r20, r25
    20ae:	56 1f       	adc	r21, r22
    20b0:	c7 1f       	adc	r28, r23
    20b2:	d8 1f       	adc	r29, r24
    20b4:	99 0f       	add	r25, r25
    20b6:	66 1f       	adc	r22, r22
    20b8:	77 1f       	adc	r23, r23
    20ba:	88 1f       	adc	r24, r24
    20bc:	06 94       	lsr	r0
    20be:	a9 f7       	brne	.-22     	; 0x20aa <__ftoa_engine+0xc8>
    20c0:	84 91       	lpm	r24, Z
    20c2:	10 95       	com	r17
    20c4:	17 70       	andi	r17, 0x07	; 7
    20c6:	41 f0       	breq	.+16     	; 0x20d8 <__ftoa_engine+0xf6>
    20c8:	d6 95       	lsr	r29
    20ca:	c7 95       	ror	r28
    20cc:	57 95       	ror	r21
    20ce:	47 95       	ror	r20
    20d0:	f7 94       	ror	r15
    20d2:	e7 94       	ror	r14
    20d4:	1a 95       	dec	r17
    20d6:	c1 f7       	brne	.-16     	; 0x20c8 <__ftoa_engine+0xe6>
    20d8:	e8 e0       	ldi	r30, 0x08	; 8
    20da:	f1 e0       	ldi	r31, 0x01	; 1
    20dc:	68 94       	set
    20de:	15 90       	lpm	r1, Z+
    20e0:	15 91       	lpm	r17, Z+
    20e2:	35 91       	lpm	r19, Z+
    20e4:	65 91       	lpm	r22, Z+
    20e6:	95 91       	lpm	r25, Z+
    20e8:	05 90       	lpm	r0, Z+
    20ea:	7f e2       	ldi	r23, 0x2F	; 47
    20ec:	73 95       	inc	r23
    20ee:	e1 18       	sub	r14, r1
    20f0:	f1 0a       	sbc	r15, r17
    20f2:	43 0b       	sbc	r20, r19
    20f4:	56 0b       	sbc	r21, r22
    20f6:	c9 0b       	sbc	r28, r25
    20f8:	d0 09       	sbc	r29, r0
    20fa:	c0 f7       	brcc	.-16     	; 0x20ec <__ftoa_engine+0x10a>
    20fc:	e1 0c       	add	r14, r1
    20fe:	f1 1e       	adc	r15, r17
    2100:	43 1f       	adc	r20, r19
    2102:	56 1f       	adc	r21, r22
    2104:	c9 1f       	adc	r28, r25
    2106:	d0 1d       	adc	r29, r0
    2108:	7e f4       	brtc	.+30     	; 0x2128 <__ftoa_engine+0x146>
    210a:	70 33       	cpi	r23, 0x30	; 48
    210c:	11 f4       	brne	.+4      	; 0x2112 <__ftoa_engine+0x130>
    210e:	8a 95       	dec	r24
    2110:	e6 cf       	rjmp	.-52     	; 0x20de <__ftoa_engine+0xfc>
    2112:	e8 94       	clt
    2114:	01 50       	subi	r16, 0x01	; 1
    2116:	30 f0       	brcs	.+12     	; 0x2124 <__ftoa_engine+0x142>
    2118:	08 0f       	add	r16, r24
    211a:	0a f4       	brpl	.+2      	; 0x211e <__ftoa_engine+0x13c>
    211c:	00 27       	eor	r16, r16
    211e:	02 17       	cp	r16, r18
    2120:	08 f4       	brcc	.+2      	; 0x2124 <__ftoa_engine+0x142>
    2122:	20 2f       	mov	r18, r16
    2124:	23 95       	inc	r18
    2126:	02 2f       	mov	r16, r18
    2128:	7a 33       	cpi	r23, 0x3A	; 58
    212a:	28 f0       	brcs	.+10     	; 0x2136 <__ftoa_engine+0x154>
    212c:	79 e3       	ldi	r23, 0x39	; 57
    212e:	7d 93       	st	X+, r23
    2130:	2a 95       	dec	r18
    2132:	e9 f7       	brne	.-6      	; 0x212e <__ftoa_engine+0x14c>
    2134:	10 c0       	rjmp	.+32     	; 0x2156 <__ftoa_engine+0x174>
    2136:	7d 93       	st	X+, r23
    2138:	2a 95       	dec	r18
    213a:	89 f6       	brne	.-94     	; 0x20de <__ftoa_engine+0xfc>
    213c:	06 94       	lsr	r0
    213e:	97 95       	ror	r25
    2140:	67 95       	ror	r22
    2142:	37 95       	ror	r19
    2144:	17 95       	ror	r17
    2146:	17 94       	ror	r1
    2148:	e1 18       	sub	r14, r1
    214a:	f1 0a       	sbc	r15, r17
    214c:	43 0b       	sbc	r20, r19
    214e:	56 0b       	sbc	r21, r22
    2150:	c9 0b       	sbc	r28, r25
    2152:	d0 09       	sbc	r29, r0
    2154:	98 f0       	brcs	.+38     	; 0x217c <__ftoa_engine+0x19a>
    2156:	23 95       	inc	r18
    2158:	7e 91       	ld	r23, -X
    215a:	73 95       	inc	r23
    215c:	7a 33       	cpi	r23, 0x3A	; 58
    215e:	08 f0       	brcs	.+2      	; 0x2162 <__ftoa_engine+0x180>
    2160:	70 e3       	ldi	r23, 0x30	; 48
    2162:	7c 93       	st	X, r23
    2164:	20 13       	cpse	r18, r16
    2166:	b8 f7       	brcc	.-18     	; 0x2156 <__ftoa_engine+0x174>
    2168:	7e 91       	ld	r23, -X
    216a:	70 61       	ori	r23, 0x10	; 16
    216c:	7d 93       	st	X+, r23
    216e:	30 f0       	brcs	.+12     	; 0x217c <__ftoa_engine+0x19a>
    2170:	83 95       	inc	r24
    2172:	71 e3       	ldi	r23, 0x31	; 49
    2174:	7d 93       	st	X+, r23
    2176:	70 e3       	ldi	r23, 0x30	; 48
    2178:	2a 95       	dec	r18
    217a:	e1 f7       	brne	.-8      	; 0x2174 <__ftoa_engine+0x192>
    217c:	11 24       	eor	r1, r1
    217e:	ef 90       	pop	r14
    2180:	ff 90       	pop	r15
    2182:	0f 91       	pop	r16
    2184:	1f 91       	pop	r17
    2186:	cf 91       	pop	r28
    2188:	df 91       	pop	r29
    218a:	99 27       	eor	r25, r25
    218c:	87 fd       	sbrc	r24, 7
    218e:	90 95       	com	r25
    2190:	08 95       	ret

00002192 <strnlen_P>:
    2192:	fc 01       	movw	r30, r24
    2194:	05 90       	lpm	r0, Z+
    2196:	61 50       	subi	r22, 0x01	; 1
    2198:	70 40       	sbci	r23, 0x00	; 0
    219a:	01 10       	cpse	r0, r1
    219c:	d8 f7       	brcc	.-10     	; 0x2194 <strnlen_P+0x2>
    219e:	80 95       	com	r24
    21a0:	90 95       	com	r25
    21a2:	8e 0f       	add	r24, r30
    21a4:	9f 1f       	adc	r25, r31
    21a6:	08 95       	ret

000021a8 <strnlen>:
    21a8:	fc 01       	movw	r30, r24
    21aa:	61 50       	subi	r22, 0x01	; 1
    21ac:	70 40       	sbci	r23, 0x00	; 0
    21ae:	01 90       	ld	r0, Z+
    21b0:	01 10       	cpse	r0, r1
    21b2:	d8 f7       	brcc	.-10     	; 0x21aa <strnlen+0x2>
    21b4:	80 95       	com	r24
    21b6:	90 95       	com	r25
    21b8:	8e 0f       	add	r24, r30
    21ba:	9f 1f       	adc	r25, r31
    21bc:	08 95       	ret

000021be <__mulhi_const_10>:
    21be:	7a e0       	ldi	r23, 0x0A	; 10
    21c0:	97 9f       	mul	r25, r23
    21c2:	90 2d       	mov	r25, r0
    21c4:	87 9f       	mul	r24, r23
    21c6:	80 2d       	mov	r24, r0
    21c8:	91 0d       	add	r25, r1
    21ca:	11 24       	eor	r1, r1
    21cc:	08 95       	ret

000021ce <fputc>:
    21ce:	0f 93       	push	r16
    21d0:	1f 93       	push	r17
    21d2:	cf 93       	push	r28
    21d4:	df 93       	push	r29
    21d6:	fb 01       	movw	r30, r22
    21d8:	23 81       	ldd	r18, Z+3	; 0x03
    21da:	21 fd       	sbrc	r18, 1
    21dc:	03 c0       	rjmp	.+6      	; 0x21e4 <fputc+0x16>
    21de:	8f ef       	ldi	r24, 0xFF	; 255
    21e0:	9f ef       	ldi	r25, 0xFF	; 255
    21e2:	2c c0       	rjmp	.+88     	; 0x223c <fputc+0x6e>
    21e4:	22 ff       	sbrs	r18, 2
    21e6:	16 c0       	rjmp	.+44     	; 0x2214 <fputc+0x46>
    21e8:	46 81       	ldd	r20, Z+6	; 0x06
    21ea:	57 81       	ldd	r21, Z+7	; 0x07
    21ec:	24 81       	ldd	r18, Z+4	; 0x04
    21ee:	35 81       	ldd	r19, Z+5	; 0x05
    21f0:	42 17       	cp	r20, r18
    21f2:	53 07       	cpc	r21, r19
    21f4:	44 f4       	brge	.+16     	; 0x2206 <fputc+0x38>
    21f6:	a0 81       	ld	r26, Z
    21f8:	b1 81       	ldd	r27, Z+1	; 0x01
    21fa:	9d 01       	movw	r18, r26
    21fc:	2f 5f       	subi	r18, 0xFF	; 255
    21fe:	3f 4f       	sbci	r19, 0xFF	; 255
    2200:	31 83       	std	Z+1, r19	; 0x01
    2202:	20 83       	st	Z, r18
    2204:	8c 93       	st	X, r24
    2206:	26 81       	ldd	r18, Z+6	; 0x06
    2208:	37 81       	ldd	r19, Z+7	; 0x07
    220a:	2f 5f       	subi	r18, 0xFF	; 255
    220c:	3f 4f       	sbci	r19, 0xFF	; 255
    220e:	37 83       	std	Z+7, r19	; 0x07
    2210:	26 83       	std	Z+6, r18	; 0x06
    2212:	14 c0       	rjmp	.+40     	; 0x223c <fputc+0x6e>
    2214:	8b 01       	movw	r16, r22
    2216:	ec 01       	movw	r28, r24
    2218:	fb 01       	movw	r30, r22
    221a:	00 84       	ldd	r0, Z+8	; 0x08
    221c:	f1 85       	ldd	r31, Z+9	; 0x09
    221e:	e0 2d       	mov	r30, r0
    2220:	09 95       	icall
    2222:	89 2b       	or	r24, r25
    2224:	e1 f6       	brne	.-72     	; 0x21de <fputc+0x10>
    2226:	d8 01       	movw	r26, r16
    2228:	16 96       	adiw	r26, 0x06	; 6
    222a:	8d 91       	ld	r24, X+
    222c:	9c 91       	ld	r25, X
    222e:	17 97       	sbiw	r26, 0x07	; 7
    2230:	01 96       	adiw	r24, 0x01	; 1
    2232:	17 96       	adiw	r26, 0x07	; 7
    2234:	9c 93       	st	X, r25
    2236:	8e 93       	st	-X, r24
    2238:	16 97       	sbiw	r26, 0x06	; 6
    223a:	ce 01       	movw	r24, r28
    223c:	df 91       	pop	r29
    223e:	cf 91       	pop	r28
    2240:	1f 91       	pop	r17
    2242:	0f 91       	pop	r16
    2244:	08 95       	ret

00002246 <printf>:
    2246:	a0 e0       	ldi	r26, 0x00	; 0
    2248:	b0 e0       	ldi	r27, 0x00	; 0
    224a:	e9 e2       	ldi	r30, 0x29	; 41
    224c:	f1 e1       	ldi	r31, 0x11	; 17
    224e:	0c 94 a8 0f 	jmp	0x1f50	; 0x1f50 <__prologue_saves__+0x20>
    2252:	ae 01       	movw	r20, r28
    2254:	4b 5f       	subi	r20, 0xFB	; 251
    2256:	5f 4f       	sbci	r21, 0xFF	; 255
    2258:	fa 01       	movw	r30, r20
    225a:	61 91       	ld	r22, Z+
    225c:	71 91       	ld	r23, Z+
    225e:	af 01       	movw	r20, r30
    2260:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <__iob+0x2>
    2264:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <__iob+0x3>
    2268:	0e 94 d4 0b 	call	0x17a8	; 0x17a8 <vfprintf>
    226c:	e2 e0       	ldi	r30, 0x02	; 2
    226e:	0c 94 c4 0f 	jmp	0x1f88	; 0x1f88 <__epilogue_restores__+0x20>

00002272 <puts>:
    2272:	0f 93       	push	r16
    2274:	1f 93       	push	r17
    2276:	cf 93       	push	r28
    2278:	df 93       	push	r29
    227a:	e0 91 15 02 	lds	r30, 0x0215	; 0x800215 <__iob+0x2>
    227e:	f0 91 16 02 	lds	r31, 0x0216	; 0x800216 <__iob+0x3>
    2282:	23 81       	ldd	r18, Z+3	; 0x03
    2284:	21 ff       	sbrs	r18, 1
    2286:	1b c0       	rjmp	.+54     	; 0x22be <puts+0x4c>
    2288:	8c 01       	movw	r16, r24
    228a:	d0 e0       	ldi	r29, 0x00	; 0
    228c:	c0 e0       	ldi	r28, 0x00	; 0
    228e:	f8 01       	movw	r30, r16
    2290:	81 91       	ld	r24, Z+
    2292:	8f 01       	movw	r16, r30
    2294:	60 91 15 02 	lds	r22, 0x0215	; 0x800215 <__iob+0x2>
    2298:	70 91 16 02 	lds	r23, 0x0216	; 0x800216 <__iob+0x3>
    229c:	db 01       	movw	r26, r22
    229e:	18 96       	adiw	r26, 0x08	; 8
    22a0:	ed 91       	ld	r30, X+
    22a2:	fc 91       	ld	r31, X
    22a4:	19 97       	sbiw	r26, 0x09	; 9
    22a6:	88 23       	and	r24, r24
    22a8:	31 f0       	breq	.+12     	; 0x22b6 <puts+0x44>
    22aa:	09 95       	icall
    22ac:	89 2b       	or	r24, r25
    22ae:	79 f3       	breq	.-34     	; 0x228e <puts+0x1c>
    22b0:	df ef       	ldi	r29, 0xFF	; 255
    22b2:	cf ef       	ldi	r28, 0xFF	; 255
    22b4:	ec cf       	rjmp	.-40     	; 0x228e <puts+0x1c>
    22b6:	8a e0       	ldi	r24, 0x0A	; 10
    22b8:	09 95       	icall
    22ba:	89 2b       	or	r24, r25
    22bc:	19 f0       	breq	.+6      	; 0x22c4 <puts+0x52>
    22be:	8f ef       	ldi	r24, 0xFF	; 255
    22c0:	9f ef       	ldi	r25, 0xFF	; 255
    22c2:	02 c0       	rjmp	.+4      	; 0x22c8 <puts+0x56>
    22c4:	8d 2f       	mov	r24, r29
    22c6:	9c 2f       	mov	r25, r28
    22c8:	df 91       	pop	r29
    22ca:	cf 91       	pop	r28
    22cc:	1f 91       	pop	r17
    22ce:	0f 91       	pop	r16
    22d0:	08 95       	ret

000022d2 <__ultoa_invert>:
    22d2:	fa 01       	movw	r30, r20
    22d4:	aa 27       	eor	r26, r26
    22d6:	28 30       	cpi	r18, 0x08	; 8
    22d8:	51 f1       	breq	.+84     	; 0x232e <__ultoa_invert+0x5c>
    22da:	20 31       	cpi	r18, 0x10	; 16
    22dc:	81 f1       	breq	.+96     	; 0x233e <__ultoa_invert+0x6c>
    22de:	e8 94       	clt
    22e0:	6f 93       	push	r22
    22e2:	6e 7f       	andi	r22, 0xFE	; 254
    22e4:	6e 5f       	subi	r22, 0xFE	; 254
    22e6:	7f 4f       	sbci	r23, 0xFF	; 255
    22e8:	8f 4f       	sbci	r24, 0xFF	; 255
    22ea:	9f 4f       	sbci	r25, 0xFF	; 255
    22ec:	af 4f       	sbci	r26, 0xFF	; 255
    22ee:	b1 e0       	ldi	r27, 0x01	; 1
    22f0:	3e d0       	rcall	.+124    	; 0x236e <__ultoa_invert+0x9c>
    22f2:	b4 e0       	ldi	r27, 0x04	; 4
    22f4:	3c d0       	rcall	.+120    	; 0x236e <__ultoa_invert+0x9c>
    22f6:	67 0f       	add	r22, r23
    22f8:	78 1f       	adc	r23, r24
    22fa:	89 1f       	adc	r24, r25
    22fc:	9a 1f       	adc	r25, r26
    22fe:	a1 1d       	adc	r26, r1
    2300:	68 0f       	add	r22, r24
    2302:	79 1f       	adc	r23, r25
    2304:	8a 1f       	adc	r24, r26
    2306:	91 1d       	adc	r25, r1
    2308:	a1 1d       	adc	r26, r1
    230a:	6a 0f       	add	r22, r26
    230c:	71 1d       	adc	r23, r1
    230e:	81 1d       	adc	r24, r1
    2310:	91 1d       	adc	r25, r1
    2312:	a1 1d       	adc	r26, r1
    2314:	20 d0       	rcall	.+64     	; 0x2356 <__ultoa_invert+0x84>
    2316:	09 f4       	brne	.+2      	; 0x231a <__ultoa_invert+0x48>
    2318:	68 94       	set
    231a:	3f 91       	pop	r19
    231c:	2a e0       	ldi	r18, 0x0A	; 10
    231e:	26 9f       	mul	r18, r22
    2320:	11 24       	eor	r1, r1
    2322:	30 19       	sub	r19, r0
    2324:	30 5d       	subi	r19, 0xD0	; 208
    2326:	31 93       	st	Z+, r19
    2328:	de f6       	brtc	.-74     	; 0x22e0 <__ultoa_invert+0xe>
    232a:	cf 01       	movw	r24, r30
    232c:	08 95       	ret
    232e:	46 2f       	mov	r20, r22
    2330:	47 70       	andi	r20, 0x07	; 7
    2332:	40 5d       	subi	r20, 0xD0	; 208
    2334:	41 93       	st	Z+, r20
    2336:	b3 e0       	ldi	r27, 0x03	; 3
    2338:	0f d0       	rcall	.+30     	; 0x2358 <__ultoa_invert+0x86>
    233a:	c9 f7       	brne	.-14     	; 0x232e <__ultoa_invert+0x5c>
    233c:	f6 cf       	rjmp	.-20     	; 0x232a <__ultoa_invert+0x58>
    233e:	46 2f       	mov	r20, r22
    2340:	4f 70       	andi	r20, 0x0F	; 15
    2342:	40 5d       	subi	r20, 0xD0	; 208
    2344:	4a 33       	cpi	r20, 0x3A	; 58
    2346:	18 f0       	brcs	.+6      	; 0x234e <__ultoa_invert+0x7c>
    2348:	49 5d       	subi	r20, 0xD9	; 217
    234a:	31 fd       	sbrc	r19, 1
    234c:	40 52       	subi	r20, 0x20	; 32
    234e:	41 93       	st	Z+, r20
    2350:	02 d0       	rcall	.+4      	; 0x2356 <__ultoa_invert+0x84>
    2352:	a9 f7       	brne	.-22     	; 0x233e <__ultoa_invert+0x6c>
    2354:	ea cf       	rjmp	.-44     	; 0x232a <__ultoa_invert+0x58>
    2356:	b4 e0       	ldi	r27, 0x04	; 4
    2358:	a6 95       	lsr	r26
    235a:	97 95       	ror	r25
    235c:	87 95       	ror	r24
    235e:	77 95       	ror	r23
    2360:	67 95       	ror	r22
    2362:	ba 95       	dec	r27
    2364:	c9 f7       	brne	.-14     	; 0x2358 <__ultoa_invert+0x86>
    2366:	00 97       	sbiw	r24, 0x00	; 0
    2368:	61 05       	cpc	r22, r1
    236a:	71 05       	cpc	r23, r1
    236c:	08 95       	ret
    236e:	9b 01       	movw	r18, r22
    2370:	ac 01       	movw	r20, r24
    2372:	0a 2e       	mov	r0, r26
    2374:	06 94       	lsr	r0
    2376:	57 95       	ror	r21
    2378:	47 95       	ror	r20
    237a:	37 95       	ror	r19
    237c:	27 95       	ror	r18
    237e:	ba 95       	dec	r27
    2380:	c9 f7       	brne	.-14     	; 0x2374 <__ultoa_invert+0xa2>
    2382:	62 0f       	add	r22, r18
    2384:	73 1f       	adc	r23, r19
    2386:	84 1f       	adc	r24, r20
    2388:	95 1f       	adc	r25, r21
    238a:	a0 1d       	adc	r26, r0
    238c:	08 95       	ret

0000238e <strtod>:
    238e:	a0 e0       	ldi	r26, 0x00	; 0
    2390:	b0 e0       	ldi	r27, 0x00	; 0
    2392:	ed ec       	ldi	r30, 0xCD	; 205
    2394:	f1 e1       	ldi	r31, 0x11	; 17
    2396:	0c 94 9e 0f 	jmp	0x1f3c	; 0x1f3c <__prologue_saves__+0xc>
    239a:	ec 01       	movw	r28, r24
    239c:	6b 01       	movw	r12, r22
    239e:	61 15       	cp	r22, r1
    23a0:	71 05       	cpc	r23, r1
    23a2:	19 f0       	breq	.+6      	; 0x23aa <strtod+0x1c>
    23a4:	fb 01       	movw	r30, r22
    23a6:	91 83       	std	Z+1, r25	; 0x01
    23a8:	80 83       	st	Z, r24
    23aa:	7e 01       	movw	r14, r28
    23ac:	ff ef       	ldi	r31, 0xFF	; 255
    23ae:	ef 1a       	sub	r14, r31
    23b0:	ff 0a       	sbc	r15, r31
    23b2:	08 81       	ld	r16, Y
    23b4:	80 2f       	mov	r24, r16
    23b6:	90 e0       	ldi	r25, 0x00	; 0
    23b8:	0e 94 15 13 	call	0x262a	; 0x262a <isspace>
    23bc:	89 2b       	or	r24, r25
    23be:	11 f0       	breq	.+4      	; 0x23c4 <strtod+0x36>
    23c0:	e7 01       	movw	r28, r14
    23c2:	f3 cf       	rjmp	.-26     	; 0x23aa <strtod+0x1c>
    23c4:	0d 32       	cpi	r16, 0x2D	; 45
    23c6:	39 f4       	brne	.+14     	; 0x23d6 <strtod+0x48>
    23c8:	7e 01       	movw	r14, r28
    23ca:	82 e0       	ldi	r24, 0x02	; 2
    23cc:	e8 0e       	add	r14, r24
    23ce:	f1 1c       	adc	r15, r1
    23d0:	09 81       	ldd	r16, Y+1	; 0x01
    23d2:	11 e0       	ldi	r17, 0x01	; 1
    23d4:	08 c0       	rjmp	.+16     	; 0x23e6 <strtod+0x58>
    23d6:	0b 32       	cpi	r16, 0x2B	; 43
    23d8:	29 f4       	brne	.+10     	; 0x23e4 <strtod+0x56>
    23da:	7e 01       	movw	r14, r28
    23dc:	92 e0       	ldi	r25, 0x02	; 2
    23de:	e9 0e       	add	r14, r25
    23e0:	f1 1c       	adc	r15, r1
    23e2:	09 81       	ldd	r16, Y+1	; 0x01
    23e4:	10 e0       	ldi	r17, 0x00	; 0
    23e6:	e7 01       	movw	r28, r14
    23e8:	21 97       	sbiw	r28, 0x01	; 1
    23ea:	43 e0       	ldi	r20, 0x03	; 3
    23ec:	50 e0       	ldi	r21, 0x00	; 0
    23ee:	6a e0       	ldi	r22, 0x0A	; 10
    23f0:	72 e0       	ldi	r23, 0x02	; 2
    23f2:	ce 01       	movw	r24, r28
    23f4:	0e 94 1e 13 	call	0x263c	; 0x263c <strncasecmp_P>
    23f8:	89 2b       	or	r24, r25
    23fa:	c1 f4       	brne	.+48     	; 0x242c <strtod+0x9e>
    23fc:	23 96       	adiw	r28, 0x03	; 3
    23fe:	45 e0       	ldi	r20, 0x05	; 5
    2400:	50 e0       	ldi	r21, 0x00	; 0
    2402:	65 e0       	ldi	r22, 0x05	; 5
    2404:	72 e0       	ldi	r23, 0x02	; 2
    2406:	ce 01       	movw	r24, r28
    2408:	0e 94 1e 13 	call	0x263c	; 0x263c <strncasecmp_P>
    240c:	89 2b       	or	r24, r25
    240e:	09 f4       	brne	.+2      	; 0x2412 <strtod+0x84>
    2410:	25 96       	adiw	r28, 0x05	; 5
    2412:	c1 14       	cp	r12, r1
    2414:	d1 04       	cpc	r13, r1
    2416:	19 f0       	breq	.+6      	; 0x241e <strtod+0x90>
    2418:	f6 01       	movw	r30, r12
    241a:	d1 83       	std	Z+1, r29	; 0x01
    241c:	c0 83       	st	Z, r28
    241e:	11 11       	cpse	r17, r1
    2420:	f6 c0       	rjmp	.+492    	; 0x260e <strtod+0x280>
    2422:	60 e0       	ldi	r22, 0x00	; 0
    2424:	70 e0       	ldi	r23, 0x00	; 0
    2426:	80 e8       	ldi	r24, 0x80	; 128
    2428:	9f e7       	ldi	r25, 0x7F	; 127
    242a:	fa c0       	rjmp	.+500    	; 0x2620 <strtod+0x292>
    242c:	43 e0       	ldi	r20, 0x03	; 3
    242e:	50 e0       	ldi	r21, 0x00	; 0
    2430:	62 e0       	ldi	r22, 0x02	; 2
    2432:	72 e0       	ldi	r23, 0x02	; 2
    2434:	ce 01       	movw	r24, r28
    2436:	0e 94 1e 13 	call	0x263c	; 0x263c <strncasecmp_P>
    243a:	89 2b       	or	r24, r25
    243c:	59 f4       	brne	.+22     	; 0x2454 <strtod+0xc6>
    243e:	c1 14       	cp	r12, r1
    2440:	d1 04       	cpc	r13, r1
    2442:	09 f4       	brne	.+2      	; 0x2446 <strtod+0xb8>
    2444:	e9 c0       	rjmp	.+466    	; 0x2618 <strtod+0x28a>
    2446:	f2 e0       	ldi	r31, 0x02	; 2
    2448:	ef 0e       	add	r14, r31
    244a:	f1 1c       	adc	r15, r1
    244c:	f6 01       	movw	r30, r12
    244e:	f1 82       	std	Z+1, r15	; 0x01
    2450:	e0 82       	st	Z, r14
    2452:	e2 c0       	rjmp	.+452    	; 0x2618 <strtod+0x28a>
    2454:	20 e0       	ldi	r18, 0x00	; 0
    2456:	30 e0       	ldi	r19, 0x00	; 0
    2458:	a9 01       	movw	r20, r18
    245a:	c0 e0       	ldi	r28, 0x00	; 0
    245c:	d0 e0       	ldi	r29, 0x00	; 0
    245e:	f7 01       	movw	r30, r14
    2460:	80 ed       	ldi	r24, 0xD0	; 208
    2462:	a8 2e       	mov	r10, r24
    2464:	a0 0e       	add	r10, r16
    2466:	89 e0       	ldi	r24, 0x09	; 9
    2468:	8a 15       	cp	r24, r10
    246a:	30 f1       	brcs	.+76     	; 0x24b8 <strtod+0x12a>
    246c:	91 2f       	mov	r25, r17
    246e:	92 60       	ori	r25, 0x02	; 2
    2470:	b9 2e       	mov	r11, r25
    2472:	81 2f       	mov	r24, r17
    2474:	88 70       	andi	r24, 0x08	; 8
    2476:	12 ff       	sbrs	r17, 2
    2478:	04 c0       	rjmp	.+8      	; 0x2482 <strtod+0xf4>
    247a:	81 11       	cpse	r24, r1
    247c:	24 c0       	rjmp	.+72     	; 0x24c6 <strtod+0x138>
    247e:	21 96       	adiw	r28, 0x01	; 1
    2480:	22 c0       	rjmp	.+68     	; 0x24c6 <strtod+0x138>
    2482:	81 11       	cpse	r24, r1
    2484:	21 97       	sbiw	r28, 0x01	; 1
    2486:	a5 e0       	ldi	r26, 0x05	; 5
    2488:	b0 e0       	ldi	r27, 0x00	; 0
    248a:	0e 94 39 13 	call	0x2672	; 0x2672 <__muluhisi3>
    248e:	dc 01       	movw	r26, r24
    2490:	cb 01       	movw	r24, r22
    2492:	88 0f       	add	r24, r24
    2494:	99 1f       	adc	r25, r25
    2496:	aa 1f       	adc	r26, r26
    2498:	bb 1f       	adc	r27, r27
    249a:	9c 01       	movw	r18, r24
    249c:	ad 01       	movw	r20, r26
    249e:	2a 0d       	add	r18, r10
    24a0:	31 1d       	adc	r19, r1
    24a2:	41 1d       	adc	r20, r1
    24a4:	51 1d       	adc	r21, r1
    24a6:	28 39       	cpi	r18, 0x98	; 152
    24a8:	89 e9       	ldi	r24, 0x99	; 153
    24aa:	38 07       	cpc	r19, r24
    24ac:	48 07       	cpc	r20, r24
    24ae:	89 e1       	ldi	r24, 0x19	; 25
    24b0:	58 07       	cpc	r21, r24
    24b2:	48 f0       	brcs	.+18     	; 0x24c6 <strtod+0x138>
    24b4:	16 60       	ori	r17, 0x06	; 6
    24b6:	06 c0       	rjmp	.+12     	; 0x24c4 <strtod+0x136>
    24b8:	9e ef       	ldi	r25, 0xFE	; 254
    24ba:	a9 12       	cpse	r10, r25
    24bc:	0a c0       	rjmp	.+20     	; 0x24d2 <strtod+0x144>
    24be:	13 fd       	sbrc	r17, 3
    24c0:	40 c0       	rjmp	.+128    	; 0x2542 <strtod+0x1b4>
    24c2:	18 60       	ori	r17, 0x08	; 8
    24c4:	b1 2e       	mov	r11, r17
    24c6:	8f ef       	ldi	r24, 0xFF	; 255
    24c8:	e8 1a       	sub	r14, r24
    24ca:	f8 0a       	sbc	r15, r24
    24cc:	00 81       	ld	r16, Z
    24ce:	1b 2d       	mov	r17, r11
    24d0:	c6 cf       	rjmp	.-116    	; 0x245e <strtod+0xd0>
    24d2:	80 2f       	mov	r24, r16
    24d4:	8f 7d       	andi	r24, 0xDF	; 223
    24d6:	85 34       	cpi	r24, 0x45	; 69
    24d8:	a1 f5       	brne	.+104    	; 0x2542 <strtod+0x1b4>
    24da:	80 81       	ld	r24, Z
    24dc:	8d 32       	cpi	r24, 0x2D	; 45
    24de:	11 f4       	brne	.+4      	; 0x24e4 <strtod+0x156>
    24e0:	10 61       	ori	r17, 0x10	; 16
    24e2:	06 c0       	rjmp	.+12     	; 0x24f0 <strtod+0x162>
    24e4:	8b 32       	cpi	r24, 0x2B	; 43
    24e6:	21 f0       	breq	.+8      	; 0x24f0 <strtod+0x162>
    24e8:	31 96       	adiw	r30, 0x01	; 1
    24ea:	61 e0       	ldi	r22, 0x01	; 1
    24ec:	70 e0       	ldi	r23, 0x00	; 0
    24ee:	04 c0       	rjmp	.+8      	; 0x24f8 <strtod+0x16a>
    24f0:	81 81       	ldd	r24, Z+1	; 0x01
    24f2:	32 96       	adiw	r30, 0x02	; 2
    24f4:	62 e0       	ldi	r22, 0x02	; 2
    24f6:	70 e0       	ldi	r23, 0x00	; 0
    24f8:	80 53       	subi	r24, 0x30	; 48
    24fa:	8a 30       	cpi	r24, 0x0A	; 10
    24fc:	18 f0       	brcs	.+6      	; 0x2504 <strtod+0x176>
    24fe:	e6 1b       	sub	r30, r22
    2500:	f7 0b       	sbc	r31, r23
    2502:	1f c0       	rjmp	.+62     	; 0x2542 <strtod+0x1b4>
    2504:	60 e0       	ldi	r22, 0x00	; 0
    2506:	70 e0       	ldi	r23, 0x00	; 0
    2508:	60 38       	cpi	r22, 0x80	; 128
    250a:	9c e0       	ldi	r25, 0x0C	; 12
    250c:	79 07       	cpc	r23, r25
    250e:	5c f4       	brge	.+22     	; 0x2526 <strtod+0x198>
    2510:	db 01       	movw	r26, r22
    2512:	aa 0f       	add	r26, r26
    2514:	bb 1f       	adc	r27, r27
    2516:	aa 0f       	add	r26, r26
    2518:	bb 1f       	adc	r27, r27
    251a:	6a 0f       	add	r22, r26
    251c:	7b 1f       	adc	r23, r27
    251e:	66 0f       	add	r22, r22
    2520:	77 1f       	adc	r23, r23
    2522:	68 0f       	add	r22, r24
    2524:	71 1d       	adc	r23, r1
    2526:	31 96       	adiw	r30, 0x01	; 1
    2528:	df 01       	movw	r26, r30
    252a:	11 97       	sbiw	r26, 0x01	; 1
    252c:	8c 91       	ld	r24, X
    252e:	80 53       	subi	r24, 0x30	; 48
    2530:	8a 30       	cpi	r24, 0x0A	; 10
    2532:	50 f3       	brcs	.-44     	; 0x2508 <strtod+0x17a>
    2534:	14 ff       	sbrs	r17, 4
    2536:	03 c0       	rjmp	.+6      	; 0x253e <strtod+0x1b0>
    2538:	71 95       	neg	r23
    253a:	61 95       	neg	r22
    253c:	71 09       	sbc	r23, r1
    253e:	c6 0f       	add	r28, r22
    2540:	d7 1f       	adc	r29, r23
    2542:	11 ff       	sbrs	r17, 1
    2544:	08 c0       	rjmp	.+16     	; 0x2556 <strtod+0x1c8>
    2546:	c1 14       	cp	r12, r1
    2548:	d1 04       	cpc	r13, r1
    254a:	29 f0       	breq	.+10     	; 0x2556 <strtod+0x1c8>
    254c:	cf 01       	movw	r24, r30
    254e:	01 97       	sbiw	r24, 0x01	; 1
    2550:	f6 01       	movw	r30, r12
    2552:	91 83       	std	Z+1, r25	; 0x01
    2554:	80 83       	st	Z, r24
    2556:	ca 01       	movw	r24, r20
    2558:	b9 01       	movw	r22, r18
    255a:	0e 94 b0 0a 	call	0x1560	; 0x1560 <__floatunsisf>
    255e:	21 2f       	mov	r18, r17
    2560:	23 70       	andi	r18, 0x03	; 3
    2562:	23 30       	cpi	r18, 0x03	; 3
    2564:	19 f0       	breq	.+6      	; 0x256c <strtod+0x1de>
    2566:	4b 01       	movw	r8, r22
    2568:	5c 01       	movw	r10, r24
    256a:	06 c0       	rjmp	.+12     	; 0x2578 <strtod+0x1ea>
    256c:	4b 01       	movw	r8, r22
    256e:	5c 01       	movw	r10, r24
    2570:	b7 fa       	bst	r11, 7
    2572:	b0 94       	com	r11
    2574:	b7 f8       	bld	r11, 7
    2576:	b0 94       	com	r11
    2578:	20 e0       	ldi	r18, 0x00	; 0
    257a:	30 e0       	ldi	r19, 0x00	; 0
    257c:	a9 01       	movw	r20, r18
    257e:	c5 01       	movw	r24, r10
    2580:	b4 01       	movw	r22, r8
    2582:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__cmpsf2>
    2586:	88 23       	and	r24, r24
    2588:	09 f4       	brne	.+2      	; 0x258c <strtod+0x1fe>
    258a:	3e c0       	rjmp	.+124    	; 0x2608 <strtod+0x27a>
    258c:	d7 ff       	sbrs	r29, 7
    258e:	06 c0       	rjmp	.+12     	; 0x259c <strtod+0x20e>
    2590:	d1 95       	neg	r29
    2592:	c1 95       	neg	r28
    2594:	d1 09       	sbc	r29, r1
    2596:	01 e2       	ldi	r16, 0x21	; 33
    2598:	12 e0       	ldi	r17, 0x02	; 2
    259a:	02 c0       	rjmp	.+4      	; 0x25a0 <strtod+0x212>
    259c:	09 e3       	ldi	r16, 0x39	; 57
    259e:	12 e0       	ldi	r17, 0x02	; 2
    25a0:	68 01       	movw	r12, r16
    25a2:	f8 e1       	ldi	r31, 0x18	; 24
    25a4:	cf 1a       	sub	r12, r31
    25a6:	d1 08       	sbc	r13, r1
    25a8:	90 e2       	ldi	r25, 0x20	; 32
    25aa:	e9 2e       	mov	r14, r25
    25ac:	f1 2c       	mov	r15, r1
    25ae:	ce 15       	cp	r28, r14
    25b0:	df 05       	cpc	r29, r15
    25b2:	74 f0       	brlt	.+28     	; 0x25d0 <strtod+0x242>
    25b4:	f8 01       	movw	r30, r16
    25b6:	25 91       	lpm	r18, Z+
    25b8:	35 91       	lpm	r19, Z+
    25ba:	45 91       	lpm	r20, Z+
    25bc:	54 91       	lpm	r21, Z
    25be:	c5 01       	movw	r24, r10
    25c0:	b4 01       	movw	r22, r8
    25c2:	0e 94 67 0b 	call	0x16ce	; 0x16ce <__mulsf3>
    25c6:	4b 01       	movw	r8, r22
    25c8:	5c 01       	movw	r10, r24
    25ca:	ce 19       	sub	r28, r14
    25cc:	df 09       	sbc	r29, r15
    25ce:	ef cf       	rjmp	.-34     	; 0x25ae <strtod+0x220>
    25d0:	04 50       	subi	r16, 0x04	; 4
    25d2:	11 09       	sbc	r17, r1
    25d4:	f5 94       	asr	r15
    25d6:	e7 94       	ror	r14
    25d8:	0c 15       	cp	r16, r12
    25da:	1d 05       	cpc	r17, r13
    25dc:	41 f7       	brne	.-48     	; 0x25ae <strtod+0x220>
    25de:	8a 2d       	mov	r24, r10
    25e0:	88 0f       	add	r24, r24
    25e2:	8b 2d       	mov	r24, r11
    25e4:	88 1f       	adc	r24, r24
    25e6:	8f 3f       	cpi	r24, 0xFF	; 255
    25e8:	49 f0       	breq	.+18     	; 0x25fc <strtod+0x26e>
    25ea:	20 e0       	ldi	r18, 0x00	; 0
    25ec:	30 e0       	ldi	r19, 0x00	; 0
    25ee:	a9 01       	movw	r20, r18
    25f0:	c5 01       	movw	r24, r10
    25f2:	b4 01       	movw	r22, r8
    25f4:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__cmpsf2>
    25f8:	81 11       	cpse	r24, r1
    25fa:	06 c0       	rjmp	.+12     	; 0x2608 <strtod+0x27a>
    25fc:	82 e2       	ldi	r24, 0x22	; 34
    25fe:	90 e0       	ldi	r25, 0x00	; 0
    2600:	90 93 1a 02 	sts	0x021A, r25	; 0x80021a <errno+0x1>
    2604:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <errno>
    2608:	c5 01       	movw	r24, r10
    260a:	b4 01       	movw	r22, r8
    260c:	09 c0       	rjmp	.+18     	; 0x2620 <strtod+0x292>
    260e:	60 e0       	ldi	r22, 0x00	; 0
    2610:	70 e0       	ldi	r23, 0x00	; 0
    2612:	80 e8       	ldi	r24, 0x80	; 128
    2614:	9f ef       	ldi	r25, 0xFF	; 255
    2616:	04 c0       	rjmp	.+8      	; 0x2620 <strtod+0x292>
    2618:	60 e0       	ldi	r22, 0x00	; 0
    261a:	70 e0       	ldi	r23, 0x00	; 0
    261c:	80 ec       	ldi	r24, 0xC0	; 192
    261e:	9f e7       	ldi	r25, 0x7F	; 127
    2620:	cd b7       	in	r28, 0x3d	; 61
    2622:	de b7       	in	r29, 0x3e	; 62
    2624:	ec e0       	ldi	r30, 0x0C	; 12
    2626:	0c 94 ba 0f 	jmp	0x1f74	; 0x1f74 <__epilogue_restores__+0xc>

0000262a <isspace>:
    262a:	91 11       	cpse	r25, r1
    262c:	0c 94 36 13 	jmp	0x266c	; 0x266c <__ctype_isfalse>
    2630:	80 32       	cpi	r24, 0x20	; 32
    2632:	19 f0       	breq	.+6      	; 0x263a <isspace+0x10>
    2634:	89 50       	subi	r24, 0x09	; 9
    2636:	85 50       	subi	r24, 0x05	; 5
    2638:	c8 f7       	brcc	.-14     	; 0x262c <isspace+0x2>
    263a:	08 95       	ret

0000263c <strncasecmp_P>:
    263c:	fb 01       	movw	r30, r22
    263e:	dc 01       	movw	r26, r24
    2640:	41 50       	subi	r20, 0x01	; 1
    2642:	50 40       	sbci	r21, 0x00	; 0
    2644:	88 f0       	brcs	.+34     	; 0x2668 <strncasecmp_P+0x2c>
    2646:	8d 91       	ld	r24, X+
    2648:	81 34       	cpi	r24, 0x41	; 65
    264a:	1c f0       	brlt	.+6      	; 0x2652 <strncasecmp_P+0x16>
    264c:	8b 35       	cpi	r24, 0x5B	; 91
    264e:	0c f4       	brge	.+2      	; 0x2652 <strncasecmp_P+0x16>
    2650:	80 5e       	subi	r24, 0xE0	; 224
    2652:	65 91       	lpm	r22, Z+
    2654:	61 34       	cpi	r22, 0x41	; 65
    2656:	1c f0       	brlt	.+6      	; 0x265e <strncasecmp_P+0x22>
    2658:	6b 35       	cpi	r22, 0x5B	; 91
    265a:	0c f4       	brge	.+2      	; 0x265e <strncasecmp_P+0x22>
    265c:	60 5e       	subi	r22, 0xE0	; 224
    265e:	86 1b       	sub	r24, r22
    2660:	61 11       	cpse	r22, r1
    2662:	71 f3       	breq	.-36     	; 0x2640 <strncasecmp_P+0x4>
    2664:	99 0b       	sbc	r25, r25
    2666:	08 95       	ret
    2668:	88 1b       	sub	r24, r24
    266a:	fc cf       	rjmp	.-8      	; 0x2664 <strncasecmp_P+0x28>

0000266c <__ctype_isfalse>:
    266c:	99 27       	eor	r25, r25
    266e:	88 27       	eor	r24, r24

00002670 <__ctype_istrue>:
    2670:	08 95       	ret

00002672 <__muluhisi3>:
    2672:	0e 94 44 13 	call	0x2688	; 0x2688 <__umulhisi3>
    2676:	a5 9f       	mul	r26, r21
    2678:	90 0d       	add	r25, r0
    267a:	b4 9f       	mul	r27, r20
    267c:	90 0d       	add	r25, r0
    267e:	a4 9f       	mul	r26, r20
    2680:	80 0d       	add	r24, r0
    2682:	91 1d       	adc	r25, r1
    2684:	11 24       	eor	r1, r1
    2686:	08 95       	ret

00002688 <__umulhisi3>:
    2688:	a2 9f       	mul	r26, r18
    268a:	b0 01       	movw	r22, r0
    268c:	b3 9f       	mul	r27, r19
    268e:	c0 01       	movw	r24, r0
    2690:	a3 9f       	mul	r26, r19
    2692:	70 0d       	add	r23, r0
    2694:	81 1d       	adc	r24, r1
    2696:	11 24       	eor	r1, r1
    2698:	91 1d       	adc	r25, r1
    269a:	b2 9f       	mul	r27, r18
    269c:	70 0d       	add	r23, r0
    269e:	81 1d       	adc	r24, r1
    26a0:	11 24       	eor	r1, r1
    26a2:	91 1d       	adc	r25, r1
    26a4:	08 95       	ret

000026a6 <_exit>:
    26a6:	f8 94       	cli

000026a8 <__stop_program>:
    26a8:	ff cf       	rjmp	.-2      	; 0x26a8 <__stop_program>
